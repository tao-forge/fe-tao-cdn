{"version":3,"sources":["../review/component/tpl/qtiTestReviewComponent!tpl","../review/component/css/qtiTestReviewComponent!css","../review/provider/css/qtiTestReviewProvider!css","../review/component/qtiTestReviewComponent.js","../review/config/qtiTestReviewConfig.js","tpl!ltiTestReview/review/plugins/content/item-answer/tpl/item-answer","tpl!ltiTestReview/review/plugins/content/item-answer/tpl/answer-tabs","css!ltiTestReview/review/plugins/content/item-answer/css/item-answer","../review/plugins/content/item-answer/item-answer.js","../review/plugins/content/item-answer/plugin.js","tpl!ltiTestReview/review/plugins/navigation/next-prev/tpl/buttons","css!ltiTestReview/review/plugins/navigation/next-prev/css/buttons","../review/plugins/navigation/next-prev/buttons.js","../review/plugins/navigation/next-prev/plugin.js","../review/plugins/navigation/review-panel/panel-data.js","tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/panel","tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/list","css!ltiTestReview/review/plugins/navigation/review-panel/css/panel","../review/plugins/navigation/review-panel/panel.js","../review/services/navigation-data.js","../review/plugins/navigation/review-panel/plugin.js","../review/services/navigator.js","../review/provider/tpl/qtiTestReviewProvider!tpl","../review/provider/qtiTestReviewProvider.js","../review/proxy/qtiTestReviewProxy.js","onLayerEnd0.js","module-create.js","/Users/sergei.mikhailov/Sources/tao-enterprise-bosa/tao/views/build/config-wrap-end-default.js"],"names":[],"mappings":"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","sourcesContent":["\ndefine('tpl!ltiTestReview/review/component/tpl/qtiTestReviewComponent', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  \n\n\n  return \"<div class=\\\"previewer-component\\\"></div>\";\n  });\n});\n\n","\ndefine('css!ltiTestReview/review/component/css/qtiTestReviewComponent',[],function(){});\n","\ndefine('css!ltiTestReview/review/provider/css/qtiTestReviewProvider',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('ltiTestReview/review/component/qtiTestReviewComponent',[\n    'context',\n    'taoTests/runner/runnerComponent',\n    'tpl!ltiTestReview/review/component/tpl/qtiTestReviewComponent',\n    'css!ltiTestReview/review/component/css/qtiTestReviewComponent',\n    'css!ltiTestReview/review/provider/css/qtiTestReviewProvider'\n], function (context, runnerComponentFactory, runnerTpl) {\n    'use strict';\n\n    /**\n     * Extracts the test runner options from the config\n     * @param {Object} config\n     * @returns {Object}\n     */\n    const extractOptions = config => {\n        const {\n            fullPage = false,\n            readOnly = false,\n            showScore = false,\n            showCorrect = false,\n            pluginsOptions = {}\n        } = config;\n        return {fullPage, readOnly, showScore, showCorrect, plugins: pluginsOptions};\n    };\n\n    /**\n     * Builds a component with test runner to review a test\n     * @param {jQuery|HTMLElement|String} container - The container in which renders the component\n     * @param {Object} [config] - The testRunner options\n     * @param {Object[]} [config.plugins] - Additional plugins to load\n     * @param {Object[]} [config.pluginsOptions] - Options for the plugins\n     * @param {Boolean} [config.fullPage] - Force the review to occupy the full window.\n     * @param {Boolean} [config.readOnly] - Do not allow to modify the reviewed item.\n     * @param {Boolean} [config.showScore] - Allow to show the score.\n     * @param {Boolean} [config.showCorrect] - Allow to show the correct responses.\n     * @param {Function} [template] - An optional template for the component\n     * @returns {review}\n     */\n    return function qtiTestReviewFactory(container, config = {}, template = null) {\n\n        const testRunnerConfig = {\n            testDefinition: config.testDefinition || 'test-container',\n            serviceCallId: config.testUri && config.testUri.resultId || 'review',\n            providers: {\n                runner: {\n                    id: 'qtiTestReviewProvider',\n                    module: 'ltiTestReview/review/provider/qtiTestReviewProvider',\n                    bundle: 'ltiTestReview/loader/ltiTestReview.min',\n                    category: 'runner'\n                },\n                proxy: {\n                    id: 'qtiTestReviewProxy',\n                    module: 'ltiTestReview/review/proxy/qtiTestReviewProxy',\n                    bundle: 'ltiTestReview/loader/ltiTestReview.min',\n                    category: 'proxy'\n                },\n                communicator: {\n                    id: 'request',\n                    module: 'core/communicator/request',\n                    bundle: 'loader/vendor.min',\n                    category: 'communicator'\n                },\n                plugins: config.plugins || []\n            },\n            options: extractOptions(config)\n        };\n\n        //extra context config\n        testRunnerConfig.loadFromBundle = !!context.bundle;\n\n        return runnerComponentFactory(container, testRunnerConfig, template || runnerTpl)\n            .on('render', function onComponentInit() {\n                const {fullPage, readOnly, showScore, showCorrect} = this.getConfig().options;\n                this.setState('fullpage', fullPage);\n                this.setState('readonly', readOnly);\n                this.setState('showscore', showScore);\n                this.setState('showcorrect', showCorrect);\n            })\n            .on('ready', function onComponentReady(runner) {\n                runner.on('destroy', () => this.destroy());\n            });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Config manager for the services proxy of the QTI Test Review\n *\n *  @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('ltiTestReview/review/config/qtiTestReviewConfig',[\n    'lodash',\n    'util/url',\n    'util/config'\n], function (_, urlUtil, configHelper) {\n    'use strict';\n\n    /**\n     * Some default config values\n     * @type {Object}\n     * @private\n     */\n    const _defaults = {\n        bootstrap: {\n            serviceController: 'Review',\n            serviceExtension: 'ltiTestReview'\n        }\n    };\n\n    /**\n     * The list of handled config entries. Each required entry is set to true, while optional entries are set to false.\n     * @type {Object}\n     * @private\n     */\n    const _entries = {\n        serviceCallId: true,\n        bootstrap: false,\n        timeout: false\n    };\n\n    /**\n     * Creates a config object for the proxy implementation\n     * @param {Object} config - Some required and optional config\n     * @param {String} config.serviceCallId - An identifier for the service call\n     * @param {String} [config.bootstrap.serviceController] - The name of the service controller\n     * @param {String} [config.bootstrap.serviceExtension] - The name of the extension containing the service controller\n     * @returns {Object}\n     */\n    return function testReviewConfigFactory(config) {\n        // protected storage\n        const storage = configHelper.from(config, _entries, _defaults);\n\n        // convert some values from seconds to milliseconds\n        if (storage.timeout) {\n            storage.timeout *= 1000;\n        } else {\n            /* eslint-disable-next-line */\n            storage.timeout = undefined;\n        }\n\n        // returns only a proxy storage object : no direct access to data is provided\n        return {\n            /**\n             * Gets the list of parameters\n             * @param {String|Object} [itemIdentifier]\n             * @returns {Object}\n             */\n            getParameters(itemIdentifier) {\n                const type = typeof itemIdentifier;\n                const parameters = {\n                    serviceCallId: this.getServiceCallId()\n                };\n\n                if (type === 'string') {\n                    // simple item identifier\n                    parameters.itemUri = itemIdentifier;\n                } else if (type === 'object' && _.isPlainObject(itemIdentifier)) {\n                    // structured item identifier (a list of parameters)\n                    Object.assign(parameters, itemIdentifier);\n                } else if (type !== 'undefined') {\n                    throw new TypeError('Wrong parameter type provided for itemIdentifier: ' + type + '. Only string or plain object are allowed!');\n                }\n\n                return parameters;\n            },\n\n            /**\n             * Gets the URI of the service call\n             * @returns {String}\n             */\n            getServiceCallId() {\n                return storage.serviceCallId;\n            },\n\n            /**\n             * Gets the name of the service controller\n             * @returns {String}\n             */\n            getServiceController() {\n                return storage.bootstrap.serviceController || _defaults.bootstrap.serviceController;\n            },\n\n            /**\n             * Gets the name of the extension containing the service controller\n             * @returns {String}\n             */\n            getServiceExtension() {\n                return storage.bootstrap.serviceExtension || _defaults.bootstrap.serviceExtension;\n            },\n\n            /**\n             * Gets an URL of a service action\n             * @param {String} action - the name of the action to request\n             * @returns {String} - Returns the URL\n             */\n            getTestActionUrl(action) {\n                return urlUtil.route(action, this.getServiceController(), this.getServiceExtension(), this.getParameters());\n            },\n\n            /**\n             * Gets an URL of a service action related to a particular item\n             * @param {String|Object} itemIdentifier - The URI of the item\n             * @param {String} action - the name of the action to request\n             * @returns {String} - Returns the URL\n             */\n            getItemActionUrl(itemIdentifier, action) {\n                return urlUtil.route(action, this.getServiceController(), this.getServiceExtension(), this.getParameters(itemIdentifier));\n            },\n\n            /**\n             * Gets the request timeout\n             * @returns {Number}\n             */\n            getTimeout() {\n                return storage.timeout;\n            },\n\n            /**\n             * Gets the config for the communication channel\n             * @returns {Object}\n             */\n            getCommunicationConfig() {\n                const communication = storage.bootstrap.communication || {};\n                const extension = communication.extension || this.getServiceExtension();\n                const controller = communication.controller || this.getServiceController();\n                const action = communication.action || 'message';\n                const syncActions = communication.syncActions || [];\n                const serviceCallId = this.getServiceCallId();\n                const service = communication.service || urlUtil.route(action, controller, extension, {serviceCallId});\n                const params = Object.assign({}, communication.params || {}, {service});\n\n                // convert some values from seconds to milliseconds\n                if (params.timeout) {\n                    params.timeout *= 1000;\n                } else {\n                    params.timeout = storage.timeout;\n                }\n                if (params.interval) {\n                    params.interval *= 1000;\n                }\n\n                return {\n                    enabled: communication.enabled,\n                    type: communication.type,\n                    params,\n                    syncActions\n                };\n            }\n        };\n    };\n});\n\n","\ndefine('tpl!ltiTestReview/review/plugins/content/item-answer/tpl/item-answer', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.score), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  if (helper = helpers.scoreText) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.scoreText); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \" \";\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"item-answer\\\">\\n    <div class=\\\"item-answer-bar\\\">\\n        <div class=\\\"item-answer-tabs\\\"></div>\\n        <div class=\\\"item-answer-score\\\">\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.showScore), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</div>\\n    </div>\\n    <div class=\\\"item-answer-status\\\"></div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!ltiTestReview/review/plugins/content/item-answer/tpl/answer-tabs', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <li class=\\\"tab \";\n  if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-tab-name=\\\"\";\n  if (helper = helpers.name) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.name); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <button class=\\\"action navigable\\\" tabindex=\\\"0\\\" \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.disabled), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \">\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.label), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </button>\\n    </li>\\n    \";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \"disabled\";\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\";\n  return buffer;\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<span class=\\\"label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\";\n  return buffer;\n  }\n\n  buffer += \"<ul class=\\\"answer-tabs\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.tabs), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</ul>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!ltiTestReview/review/plugins/content/item-answer/css/item-answer',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/content/item-answer/item-answer',[\n    'lodash',\n    'i18n',\n    'ui/component',\n    'ui/tabs',\n    'util/capitalize',\n    'tpl!ltiTestReview/review/plugins/content/item-answer/tpl/item-answer',\n    'tpl!ltiTestReview/review/plugins/content/item-answer/tpl/answer-tabs',\n    'css!ltiTestReview/review/plugins/content/item-answer/css/item-answer'\n], function (\n    _,\n    __,\n    componentFactory,\n    tabsFactory,\n    capitalize,\n    itemAnswerTpl,\n    answerTabsTpl\n) {\n    'use strict';\n\n    /**\n     * @typedef {Object} itemAnswerConfig - The config for the item answer component.\n     * @property {String} [skippedText] - The text displayed when the item has the status \"skipped\"\n     * @property {String} [scoreText] - The text displayed to introduce the score\n     * @property {String} [status] - The status of the item from the list ['correct', 'incorrect', 'skipped', 'informational']\n     * @property {String} [score] - The student's score on the item\n     * @property {Boolean} [showScore] - Show the score\n     * @property {Boolean} [showCorrect] - Show the correct responses\n     */\n\n    /**\n     * Some default config\n     * @type {itemAnswerConfig}\n     */\n    const defaults = {\n        skippedText: __('No response'),\n        scoreText: __('Your Score:'),\n        status: 'informational',\n        showScore: true,\n        showCorrect: true,\n        score: ''\n    };\n\n    /**\n     * Defines the tab containing correct response\n     * @type {tabConfig}\n     */\n    const correctTab = {\n        name: 'correct',\n        label: __('Correct response')\n    };\n\n    /**\n     * Defines the tab containing student response when correct\n     * @type {tabConfig}\n     */\n    const answerCorrectTab = {\n        name: 'answer',\n        label: __('Your response'),\n        icon: 'correct',\n        cls: 'correct'\n    };\n\n    /**\n     * Defines the tab containing student response when incorrect\n     * @type {tabConfig}\n     */\n    const answerIncorrectTab = {\n        name: 'answer',\n        label: __('Your response'),\n        icon: 'incorrect',\n        cls: 'incorrect'\n    };\n\n    /**\n     * Defines the tab containing answered student response\n     * @type {tabConfig}\n     */\n    const answeredTab = {\n        name: 'answer',\n        label: __('Your response'),\n        icon: 'answered',\n        cls: 'answered'\n    };\n\n    /**\n     * Defines the tab containing skipped student response\n     * @type {tabConfig}\n     */\n    const skippedTab = {\n        name: 'answer',\n        label: __('Your response'),\n        icon: 'skipped',\n        cls: 'skipped'\n    };\n\n    /**\n     * Defines the tab containing student response when incorrect\n     * @type {tabConfig}\n     */\n    const informationalTab = {\n        name: 'answer',\n        label: __('Informational item'),\n        icon: 'informational',\n        cls: 'informational'\n    };\n\n    /**\n     * Defines possible sets of tabs\n     * @type {Object}\n     */\n    const tabsSets = {\n        answered: [answeredTab],\n        skipped: [skippedTab],\n        correct: [answerCorrectTab],\n        incorrect: [answerIncorrectTab, correctTab],\n        informational: [informationalTab]\n    };\n\n    /**\n     * Defines tabs by status with correct responses enabled\n     * @type {Object}\n     */\n    const tabsByStatusWithCorrect = {\n        correct: tabsSets.correct,\n        incorrect: tabsSets.incorrect,\n        skipped: tabsSets.incorrect,\n        informational: tabsSets.informational\n    };\n\n    /**\n     * Defines tabs by status with correct responses disabled\n     * @type {Object}\n     */\n    const tabsByStatusWithoutCorrect = {\n        correct: tabsSets.answered,\n        incorrect: tabsSets.answered,\n        skipped: tabsSets.skipped,\n        informational: tabsSets.informational\n    };\n\n    /**\n     * List of possible states\n     * @type {String[]}\n     */\n    const states = ['correct', 'incorrect', 'skipped', 'informational'];\n\n    /**\n     * Builds a component that shows up the item status regarding the responses.\n     * States:\n     * - correct - Whether or not the item got correct responses\n     * - skipped - Whether or not the item has been skipped. This option only matters if `correct` is set.\n     * - informational - Whether or not the item is informational. If so, the component won't display anything.\n     *\n     * @example\n     *  const container = $();\n     *  const config = {\n     *      // ...\n     *  };\n     *  const component = itemAnswerFactory(container, config)\n     *      .on('ready', function onComponentReady() {\n     *          // ...\n     *      });\n     *\n     * @param {HTMLElement|String} container\n     * @param {itemAnswerConfig} config - The config for the item answer component.\n     * @param {String} [config.skippedText] - The text displayed when the item has the status \"skipped\"\n     * @param {String} [config.scoreText] - The text displayed to introduce the score\n     * @param {String} [config.status] - The status of the item from the list ['correct', 'incorrect', 'skipped', 'informational']\n     * @param {String} [config.score] - The student's score on the item\n     * @param {Boolean} [config.showScore] - Show the score\n     * @param {Boolean} [config.showCorrect] - Show the correct responses\n     * @returns {itemAnswerComponent}\n     * @fires ready - When the component is ready to work\n     * @fires statuschange - Each time the status is changed, the status being given as parameter\n     * @fires tabchange - Each time a tab is activated, the name being given as parameter\n     */\n    function itemAnswerFactory(container, config) {\n        let controls = null;\n        let activeTab = 'answer';\n\n        const api = {\n            /**\n             * Gets the defined item score\n             * @returns {String}\n             */\n            getScore() {\n                return this.getConfig().score;\n            },\n\n            /**\n             * Defines the item score\n             * @param {String} score\n             * @returns {itemAnswerComponent}\n             */\n            setScore(score) {\n                if (!score && 'number' !== typeof score || !this.getConfig().showScore) {\n                    score = '';\n                }\n                this.getConfig().score = `${score}`;\n\n                if (this.is('rendered')) {\n                    const scoreLine = this.getConfig().score && `${this.getConfig().scoreText} ${this.getConfig().score}`;\n                    controls.$score.text(scoreLine);\n                }\n\n                return this;\n            },\n\n            /**\n             * Gets the item status\n             * @returns {String}\n             */\n            getStatus() {\n                return this.getConfig().status;\n            },\n\n            /**\n             * Defines the item status\n             * @param {String} status\n             * @returns {itemAnswerComponent}\n             * @fires statuschange\n             */\n            setStatus(status) {\n                const change = this.getConfig().status !== status;\n                this.getConfig().status = status;\n\n                // reflect the state onto the component\n                states.forEach(state => this.setState(state, status === state));\n\n                /**\n                 * @event statuschange\n                 * @param {String} status - The new status\n                 * @param {Boolean} change - If the status actually changed or not\n                 */\n                this.trigger('statuschange', status, change);\n                return this;\n            },\n\n            /**\n             * Gets the name of the active tab\n             * @returns {String}\n             */\n            getActiveTab() {\n                return activeTab;\n            },\n\n            /**\n             * Tells if the item got correct responses\n             * @returns {Boolean}\n             */\n            isCorrect() {\n                return this.is('correct');\n            },\n\n            /**\n             * Tells if the item got skipped\n             * @returns {Boolean}\n             */\n            isSkipped() {\n                return this.is('skipped') && !this.isCorrect();\n            },\n\n            /**\n             * Tells if the item is informational\n             * @returns {Boolean}\n             */\n            isInformational() {\n                return this.is('informational');\n            },\n\n            /**\n             * Defines the item as correct\n             * @returns {itemAnswerComponent}\n             */\n            setCorrect() {\n                return this.setStatus('correct');\n            },\n\n            /**\n             * Defines the item as incorrect\n             * @returns {itemAnswerComponent}\n             */\n            setIncorrect() {\n                return this.setStatus('incorrect');\n            },\n\n            /**\n             * Defines the item as incorrect and skipped\n             * @returns {itemAnswerComponent}\n             */\n            setSkipped() {\n                return this.setStatus('skipped');\n            },\n\n            /**\n             * Defines the item as informational\n             * @returns {itemAnswerComponent}\n             */\n            setInformational() {\n                return this.setStatus('informational');\n            }\n        };\n\n        /**\n         * @typedef {component} itemAnswerComponent\n         */\n        const itemAnswer = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(itemAnswerTpl)\n\n            // auto render on init\n            .on('init', function onItemAnswerInit() {\n                // auto render on init (defer the call to give a chance to the init event to be completed before)\n                _.defer(() => this.render(container));\n            })\n\n            // renders the component\n            .on('render', function onItemAnswerRender() {\n                controls = {\n                    $tabs: this.getElement().find('.item-answer-tabs'),\n                    $score: this.getElement().find('.item-answer-score'),\n                    $status: this.getElement().find('.item-answer-status')\n                };\n\n                const tabsByStatus = this.getConfig().showCorrect ? tabsByStatusWithCorrect : tabsByStatusWithoutCorrect;\n                let tabs = tabsByStatus[this.getStatus()];\n                const tabsComponent = tabsFactory(controls.$tabs, {activeTab, tabs})\n                    .setTemplate(answerTabsTpl)\n                    .on('tabchange', name => {\n                        activeTab = name;\n\n                        // status based on status and tab\n                        if (name === 'answer' && this.getStatus() === 'skipped') {\n                            controls.$status.text(this.getConfig().skippedText);\n                        } else {\n                            controls.$status.text('');\n                        }\n\n                        /**\n                         * @event tabchange\n                         * @param {String} name\n                         */\n                        this.trigger('tabchange', name);\n                    })\n                    .on('ready', () => {\n                        /**\n                         * @event ready\n                         */\n                        this.setState('ready', true)\n                            .trigger('ready');\n                    });\n\n                this\n                    .setState('show-score', this.getConfig().showScore)\n                    .setState('show-correct', this.getConfig().showCorrect)\n                    .on('statuschange', (status, change) => {\n                        if (change && tabs !== tabsByStatus[status]) {\n                            tabs = tabsByStatus[status];\n                            tabsComponent.setTabs(tabs);\n                            if (this.is('disabled')) {\n                                tabsComponent.disable();\n                            }\n                        } else {\n                            // make sure the tabchange is always triggered\n                            tabsComponent.trigger('tabchange', this.getActiveTab());\n                        }\n                    })\n                    .on('disable', () => tabsComponent.disable())\n                    .on('enable', () => tabsComponent.enable())\n                    .on('destroy', () => {\n                        tabsComponent.destroy();\n                    });\n\n                // make sure the status is properly set on init\n                const statusInit = `set${capitalize(this.getConfig().status)}`;\n                if ('function' === typeof this[statusInit]) {\n                    this[statusInit]();\n                }\n            })\n\n            // free resources on dispose\n            .on('destroy', function onItemAnswerDestroy() {\n                controls = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(() => itemAnswer.init(config));\n\n        return itemAnswer;\n    }\n\n    return itemAnswerFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/content/item-answer/plugin',[\n    'lodash',\n    'core/promiseTimeout',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/currentItem',\n    'taoQtiTest/runner/helpers/map',\n    'ltiTestReview/review/plugins/content/item-answer/item-answer'\n], function (\n    _,\n    promiseTimeout,\n    pluginFactory,\n    itemHelper,\n    mapHelper,\n    itemAnswerFactory\n) {\n    'use strict';\n\n    /**\n     * Gets the response of the current item\n     * @param {runner} testRunner\n     * @return {Object}\n     */\n    const getItemResponse = testRunner => {\n        const context = testRunner.getTestContext();\n        const dataHolder = testRunner.getDataHolder();\n        let response = null;\n\n        if (context) {\n            const {itemIdentifier} = context;\n            const responses = dataHolder.get('testResponses');\n            response = responses[itemIdentifier];\n        }\n\n        return response;\n    };\n\n    /**\n     * Gets the correct response of the current item\n     * @param {runner} testRunner\n     * @return {Object}\n     */\n    const getItemCorrectResponse = testRunner => {\n        const declarations = itemHelper.getDeclarations(testRunner);\n        const response = {};\n        _.forEach(declarations, declaration => {\n            const {attributes} = declaration;\n            const {identifier, baseType, cardinality} = attributes || {};\n            response[identifier] = {\n                response: itemHelper.toResponse(declaration.correctResponse, baseType, cardinality)\n            };\n        });\n        return response;\n    };\n\n    /**\n     * Replace the state of the current item\n     * @param {String} name\n     * @param {runner} testRunner\n     */\n    const setItemState = (name, testRunner) => {\n        const itemRunner = testRunner.itemRunner;\n        const {showCorrect} = testRunner.getOptions();\n        let response = null;\n\n        if (itemRunner) {\n            if (name === 'correct' && showCorrect) {\n                response = getItemCorrectResponse(testRunner);\n            } else if (testRunner.getTestContext()) {\n                response = getItemResponse(testRunner);\n            }\n\n            if (response) {\n                itemRunner.setState(response);\n            }\n        }\n    };\n\n    /**\n     * Test Review Plugin : Item Answer Tabs\n     * Displays a tabs bar that allows to switch between responses and correct responses\n     */\n    return pluginFactory({\n        name: 'item-answer',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            this.getTestRunner()\n                .on('enablenav', () => this.enable())\n                .on('disablenav', () => this.disable());\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render() {\n            return promiseTimeout(new Promise(resolve => {\n                const testRunner = this.getTestRunner();\n                const {showScore, showCorrect} = testRunner.getOptions();\n                const itemAnswer = itemAnswerFactory(\n                    this.getAreaBroker().getArea('itemTool'),\n                    Object.assign({showScore, showCorrect}, this.getConfig()),\n                );\n\n                // control the test runner from the review panel\n                itemAnswer\n                    .on('tabchange', name => setItemState(name, testRunner))\n                    .on('ready', resolve);\n\n                // reflect the test runner state to the review panel\n                testRunner\n                    .on('renderitem', itemRef => {\n                        const item = mapHelper.getItem(testRunner.getTestMap(), itemRef);\n                        const score = item.informational ? '' : `${item.score}/${item.maxScore}`;\n\n                        itemAnswer.setScore(score);\n\n                        if (item.informational) {\n                            itemAnswer.setInformational();\n                        } else if (item.score && item.score === item.maxScore) {\n                            itemAnswer.setCorrect();\n                        } else if (item.skipped) {\n                            itemAnswer.setSkipped();\n                        } else {\n                            itemAnswer.setIncorrect();\n                        }\n                        // remove all tabindex's inside item for right navigation\n                        testRunner.getAreaBroker().getContentArea().find('[tabindex]').attr('tabindex', -1);\n                    })\n                    .on(`plugin-show.${this.getName()}`, () => itemAnswer.show())\n                    .on(`plugin-hide.${this.getName()}`, () => itemAnswer.hide())\n                    .on(`plugin-enable.${this.getName()}`, () => itemAnswer.enable())\n                    .on(`plugin-disable.${this.getName()}`, () => itemAnswer.disable())\n                    .on(`plugin-destroy.${this.getName()}`, () => itemAnswer.destroy());\n            }));\n        }\n    });\n});\n\n","\ndefine('tpl!ltiTestReview/review/plugins/navigation/next-prev/tpl/buttons', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <button data-control=\\\"\";\n  if (helper = helpers.control) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.control); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" class=\\\"small btn-info btn-group action\";\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers.unless.call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \" \";\n  if (helper = helpers.cls) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.cls); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" tabindex=\\\"0\\\">\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.icon), {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.text), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </button>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  \n  return \" no-label\";\n  }\n\nfunction program4(depth0,data) {\n  \n  \n  return \" no-icon\";\n  }\n\nfunction program6(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <span class=\\\"icon icon-\";\n  if (helper = helpers.icon) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.icon); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\n        \";\n  return buffer;\n  }\n\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <span class=\\\"label\\\">\";\n  if (helper = helpers.text) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.text); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"next-prev\\\">\\n\";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.buttons), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!ltiTestReview/review/plugins/navigation/next-prev/css/buttons',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/next-prev/buttons',[\n    'lodash',\n    'i18n',\n    'ui/component',\n    'tpl!ltiTestReview/review/plugins/navigation/next-prev/tpl/buttons',\n    'css!ltiTestReview/review/plugins/navigation/next-prev/css/buttons'\n], function (_, __, componentFactory, buttonsTpl) {\n    'use strict';\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    const defaults = {\n        buttons: [{\n            title: __('Go to the next item'),\n            cls: 'right',\n            icon: 'right',\n            text: __('Next'),\n            control: 'next'\n        },{\n            title: __('Go to the previous item'),\n            icon: 'left',\n            control: 'prev'\n        }]\n    };\n\n    /**\n     * Builds a component\n     *\n     * @example\n     *  const container = $();\n     *  const config = {\n     *      buttons: [{\n     *          icon: 'left',\n     *          text: 'Previous',\n     *          control: 'prev'\n     *      }, {\n     *          icon: 'right',\n     *          cls: 'right',\n     *          text: 'Next',\n     *          control: 'next'\n     *      }]\n     *  };\n     *  const component = buttonsFactory(container, config)\n     *      .on('ready', function onComponentReady() {\n     *          // ...\n     *      });\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @returns {component}\n     * @fires ready - When the component is ready to work\n     */\n    function buttonsFactory(container, config) {\n        const disabledButtons = new Map();\n\n        const enableElement = $el => $el.prop('disabled', false);\n        const disableElement = $el => $el.prop('disabled', true);\n\n        const api = {\n            /**\n             * Disables a button\n             * @param {String} btn\n             * @returns {buttons}\n             * * @fires disable-button\n             */\n            disableButton(btn) {\n                disabledButtons.set(btn, btn);\n                if (this.is('rendered') && !this.is('disabled')) {\n                    disableElement(this.getElement().find(`[data-control=\"${btn}\"]`));\n                }\n\n                /**\n                 * @event disable-button\n                 * @param {Object} control\n                 */\n                this.trigger('disable-button', btn);\n                return this;\n            },\n\n            /**\n             * Enables a button\n             * @param {String} btn\n             * @returns {buttons}\n             * @fires enable-button\n             */\n            enableButton(btn) {\n                disabledButtons.delete(btn);\n                if (this.is('rendered') && !this.is('disabled')) {\n                    enableElement(this.getElement().find(`[data-control=\"${btn}\"]`));\n                }\n\n                /**\n                 * @event enable-button\n                 * @param {Object} control\n                 */\n                this.trigger('enable-button', btn);\n                return this;\n            },\n\n            /**\n             * Enables or disables a button\n             * @param {String} btn\n             * @param {Boolean|null} state - Force enable (`true`) or disable (`false`). By default auto select.\n             * @returns {buttons}\n             * @fires enable-button\n             * @fires disable-button\n             */\n            toggleButton(btn, state = null) {\n                if (state === null) {\n                    state = disabledButtons.has(btn);\n                }\n                if (state) {\n                    this.enableButton(btn);\n                } else {\n                    this.disableButton(btn);\n                }\n                return this;\n            }\n        };\n        const component = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(buttonsTpl)\n\n            // auto render on init\n            .on('init', function onButtonsInit() {\n                // auto render on init (defer the call to give a chance to the init event to be completed before)\n                _.defer(() => this.render(container));\n            })\n\n            // renders the component\n            .on('render', function onButtonsRender() {\n                this.getElement().on('click', '.action', e => {\n                    const control = e.currentTarget.dataset.control;\n                    if (control && !this.is('disabled') && !disabledButtons.has(control)) {\n                        e.currentTarget.classList.add('active');\n                        /**\n                         * @event click\n                         * @param {Object} control\n                         */\n                        this.trigger('click', control);\n                    }\n                });\n\n                /**\n                 * @event ready\n                 */\n                this.setState('ready', true)\n                    .trigger('ready');\n            })\n\n            // take care of the disable state\n            .on('disable', function onButtonDisable() {\n                if (this.is('rendered')) {\n                    disableElement(this.getElement().find('[data-control]'));\n                }\n            })\n            .on('enable', function onButtonEnable() {\n                if (this.is('rendered')) {\n                    this.getElement()\n                        .find('[data-control]')\n                        .each((index, el) => {\n                            const control = el.dataset.control;\n                            if (!disabledButtons.has(control)) {\n                                el.disabled = false;\n                            }\n                            if (el.classList.contains('active')) {\n                                if (!disabledButtons.has(control)) {\n                                    el.focus();\n                                }\n                                el.classList.remove('active');\n                            }\n                        });\n                }\n            })\n\n            // free resources on dispose\n            .on('destroy', () => {\n                disabledButtons.clear();\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(() => component.init(config));\n\n        return component;\n    }\n\n    return buttonsFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test Runner Navigation Plugin : Next and Previous\n *\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/next-prev/plugin',[\n    'lodash',\n    'util/shortcut',\n    'util/namespace',\n    'core/promiseTimeout',\n    'taoTests/runner/plugin',\n    'taoQtiTest/runner/helpers/map',\n    'ltiTestReview/review/plugins/navigation/next-prev/buttons'\n], function (\n    _,\n    shortcut,\n    namespaceHelper,\n    promiseTimeout,\n    pluginFactory,\n    mapHelper,\n    buttonsFactory\n) {\n    'use strict';\n\n    /**\n     * Returns the configured plugin\n     */\n    return pluginFactory({\n        name: 'next-prev',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            const testRunner = this.getTestRunner();\n            const testConfig = testRunner.getConfig();\n            const pluginShortcuts = (testConfig.shortcuts || {})[this.getName()] || {};\n\n            /**\n             * pluginShortcuts: {\n             *  next: 'shortkey',\n             *  prev: 'shortkey'\n             * }\n             */\n            if (testConfig.allowShortcuts) {\n                Object.keys(pluginShortcuts).forEach(key => {\n                    shortcut.add(\n                        namespaceHelper.namespaceAll(pluginShortcuts[key], this.getName(), true),\n                        () => testRunner.trigger(`nav-${key}`, true),\n                        {\n                            avoidInput: true,\n                            prevent: true\n                        }\n                    );\n                });\n            }\n\n            // disabled by default\n            this.disable();\n\n            //change plugin state\n            testRunner\n                .on('enablenav', () => this.enable())\n                .on('disablenav', () => this.disable())\n                .on('hidenav', () => this.hide())\n                .on('shownav', () => this.show())\n                .on('destroy', () => shortcut.remove(`.${this.getName()}`));\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render() {\n            return promiseTimeout(new Promise(resolve => {\n                const testRunner = this.getTestRunner();\n                const buttons = buttonsFactory(this.getAreaBroker().getNavigationArea());\n\n                /**\n                 * Check if the \"Next\" functionality should be available or not\n                 * @returns {Boolean}\n                 */\n                const canDoNext = () => {\n                    const last = _.findLast(mapHelper.getJumps(testRunner.getTestMap()), jump => jump && jump.identifier);\n                    const context = testRunner.getTestContext();\n                    return last && context.itemPosition < last.position;\n                };\n\n                /**\n                 * Check if the \"Previous\" functionality should be available or not\n                 * @returns {Boolean}\n                 */\n                const canDoPrevious = () => {\n                    const first = _.find(mapHelper.getJumps(testRunner.getTestMap()), jump => jump && jump.identifier);\n                    const context = testRunner.getTestContext();\n                    return first && context.itemPosition > first.position;\n                };\n\n                /**\n                 * Plugin behavior: move forward\n                 */\n                const doNext = () => {\n                    if (this.getState('enabled') !== false && canDoNext()) {\n                        testRunner.trigger('disablenav');\n                        testRunner.next();\n                    }\n                };\n\n                /**\n                 * Plugin behavior: move backward\n                 */\n                const doPrevious = () => {\n                    if (this.getState('enabled') !== false && canDoPrevious()) {\n                        testRunner.trigger('disablenav');\n                        testRunner.previous();\n                    }\n                };\n\n                /**\n                 * Disable/enable Next/Prev buttons\n                 */\n                const toggle = () => {\n                    buttons.toggleButton('prev', canDoPrevious());\n                    buttons.toggleButton('next', canDoNext());\n                };\n\n                // control the test runner from the navigation buttons\n                buttons\n                    .on('click', btn => testRunner.trigger(`nav-${btn}`))\n                    .on('ready', () => {\n                        if (this.getState('enabled') === false) {\n                            buttons.disable();\n                        }\n                        resolve();\n                    });\n\n                // reflect the test runner state to the navigation buttons and performs the navigation on demand\n                testRunner\n                    .on('loaditem testmapchange', toggle)\n                    .on('nav-next', doNext)\n                    .on('nav-prev', doPrevious)\n                    .on(`plugin-show.${this.getName()}`, () => buttons.show())\n                    .on(`plugin-hide.${this.getName()}`, () => buttons.hide())\n                    .on(`plugin-enable.${this.getName()}`, () => buttons.enable())\n                    .on(`plugin-disable.${this.getName()}`, () => buttons.disable())\n                    .on(`plugin-destroy.${this.getName()}`, () => buttons.destroy());\n            }));\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * Helper that will build the dataset for the review panel in the expected format\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/review-panel/panel-data',[\n    'lodash'\n], function (_) {\n    'use strict';\n\n    /**\n     * @typedef {mapEntry} reviewPanelSection\n     * @property {mapEntry[]} items - The list of items contained in the section\n     */\n\n    /**\n     * @typedef {mapEntry} reviewPanelPart\n     * @property {reviewPanelSection[]} sections - The list of sections contained in the test part\n     */\n\n    /**\n     * @typedef {Object} reviewPanelMap\n     * @property {reviewPanelPart[]} parts - The list of test parts to display\n     * @property {Map} items - A map of items, indexed by identifiers\n     * @property {Number} score - The test taker's score for this item\n     * @property {Number} maxScore - The max possible score for this item\n     */\n\n    /**\n     * Compares two objects by their position properties\n     * @param {mapEntry} a\n     * @param {mapEntry} b\n     * @returns {Number}\n     */\n    const compareByPosition = (a, b) => a.position - b.position;\n\n    /**\n     * Gets the type for a particular item\n     * @param {mapEntry} item\n     * @param {Boolean} withScore\n     * @returns {String}\n     */\n    const getItemType = (item, withScore) => {\n        if (item.informational) {\n            return 'info';\n        }\n        if (withScore && item.maxScore) {\n            if (item.score === item.maxScore) {\n                return 'correct';\n            } else {\n                return 'incorrect';\n            }\n        }\n        if (item.skipped) {\n            return 'skipped';\n        }\n        return 'default';\n    };\n\n    /**\n     * Extracts data from a mapEntry\n     * @param {mapEntry} entry\n     * @param {Boolean} withScore\n     * @returns {mapEntry}\n     */\n    const extractData = (entry, withScore) => {\n        const {id, label, position, informational, skipped, score, maxScore} = entry || {};\n        const data = {id, label, position, withScore};\n        if (withScore) {\n            Object.assign(data, {score, maxScore});\n        }\n        if ('undefined' !== typeof informational) {\n            data.informational = informational;\n        }\n        if ('undefined' !== typeof skipped) {\n            data.skipped = skipped;\n        }\n        return data;\n    };\n\n    return {\n        /**\n         * Refines the test runner data and build the expected review panel map\n         * @param {testMap} testMap\n         * @param {Boolean} withScore\n         * @returns {reviewPanelMap}\n         */\n        getReviewPanelMap(testMap, withScore = true) {\n            const {parts, score, maxScore} = testMap;\n            const items = new Map();\n\n            // rebuild the map keeping only relevant data, and sorting elements by position\n            const panelMap = {\n                parts: _.map(parts, part => Object.assign(extractData(part, withScore), {\n                    sections: _.map(part.sections, section => Object.assign(extractData(section, withScore), {\n                        items: _.map(section.items, item => {\n                            const reviewItem = extractData(item, withScore);\n                            reviewItem.type = getItemType(item, withScore);\n                            items.set(item.id, reviewItem);\n                            return reviewItem;\n                        }).sort(compareByPosition)\n                    })).sort(compareByPosition)\n                })).sort(compareByPosition),\n                withScore,\n                items\n            };\n\n            if (withScore) {\n                Object.assign(panelMap, {score, maxScore});\n            }\n\n            return panelMap;\n        }\n    };\n});\n\n","\ndefine('tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/panel', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <header class=\\\"review-panel-header\\\">\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </header>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <span class=\\\"review-panel-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        <span class=\\\"review-panel-score\\\">\";\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    \";\n  return buffer;\n  }\n\nfunction program4(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <ul class=\\\"review-panel-filters plain\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.filters), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </ul>\\n\";\n  return buffer;\n  }\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n        <li class=\\\"review-panel-filter navigable\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n            <span class=\\\"review-panel-label\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n        </li>\\n    \";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n    <footer class=\\\"review-panel-footer\\\">\\n    \";\n  stack1 = helpers['with'].call(depth0, (depth0 && depth0.footer), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </footer>\\n\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"review-panel\\\">\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.filters), {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    <nav class=\\\"review-panel-content\\\"></nav>\\n\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.footer), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/list', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n<ul class=\\\"review-panel-list plain\\\">\\n    \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</ul>\\n\";\n  return buffer;\n  }\nfunction program2(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n    <li class=\\\"review-panel-part collapsible\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.expanded), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n        <span class=\\\"review-panel-label navigable\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"<span class=\\\"collapsible-arrow\\\"></span></span>\\n        <ul class=\\\"review-panel-block plain\\\">\\n        \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.sections), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        </ul>\\n    </li>\\n    \";\n  return buffer;\n  }\nfunction program3(depth0,data) {\n  \n  \n  return \" active\";\n  }\n\nfunction program5(depth0,data) {\n  \n  \n  return \" expanded\";\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n            <li class=\\\"review-panel-section collapsible\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.expanded), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                <span class=\\\"review-panel-label navigable\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"<span class=\\\"collapsible-arrow\\\"></span></span>\\n                <ul class=\\\"review-panel-block plain\\\">\\n                \";\n  stack1 = helpers.each.call(depth0, (depth0 && depth0.items), {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                </ul>\\n            </li>\\n            \";\n  return buffer;\n  }\nfunction program8(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                    <li class=\\\"review-panel-item navigable\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.active), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.type), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\" data-control=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-position=\\\"\";\n  if (helper = helpers.position) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.position); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n                        <span class=\\\"review-panel-label\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n                    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.withScore), {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n                    </li>\\n                \";\n  return buffer;\n  }\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \" item-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\nfunction program11(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n                        <span class=\\\"review-panel-score\\\">\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.informational), {hash:{},inverse:self.program(14, program14, data),fn:self.program(12, program12, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"</span>\\n                    \";\n  return buffer;\n  }\nfunction program12(depth0,data) {\n  \n  \n  return \"-\";\n  }\n\nfunction program14(depth0,data) {\n  \n  var stack1;\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.maxScore), {hash:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  }\nfunction program15(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"/\";\n  if (helper = helpers.maxScore) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.maxScore); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1);\n  return buffer;\n  }\n\nfunction program17(depth0,data) {\n  \n  var stack1, helper;\n  if (helper = helpers.score) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.score); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  return escapeExpression(stack1);\n  }\n\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.parts), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { return stack1; }\n  else { return ''; }\n  });\n});\n\n","\ndefine('css!ltiTestReview/review/plugins/navigation/review-panel/css/panel',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/review-panel/panel',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'ui/hider',\n    'ui/autoscroll',\n    'ui/component',\n    'ltiTestReview/review/plugins/navigation/review-panel/panel-data',\n    'tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/panel',\n    'tpl!ltiTestReview/review/plugins/navigation/review-panel/tpl/list',\n    'css!ltiTestReview/review/plugins/navigation/review-panel/css/panel.css'\n], function (\n    $,\n    _,\n    __,\n    hider,\n    autoscroll,\n    componentFactory,\n    reviewDataHelper,\n    panelTpl,\n    listTpl\n) {\n    'use strict';\n\n    /**\n     * @typedef {mapEntry} reviewPanelFilter\n     * @property {String} title - The tooltip displayed on mouse over\n     */\n\n    /**\n     * Some default config\n     * @type {Object}\n     */\n    const defaults = {\n        headerLabel: __('TEST SCORE:'),\n        footerLabel: __('TOTAL'),\n        showScore: true,\n        filters: [{\n            id: 'all',\n            label: __('All'),\n            title: __('Show all items')\n        }, {\n            id: 'incorrect',\n            label: __('Incorrect'),\n            title: __('Show incorrect items only')\n        }]\n    };\n\n    /**\n     * CSS classes involved in the review panel\n     * @type {Object}\n     */\n    const cssClasses = {\n        collapsible: 'collapsible',\n        expanded: 'expanded',\n        active: 'active'\n    };\n\n    /**\n     * CSS selectors that match some particular elements\n     * @type {Object}\n     */\n    const cssSelectors = {\n        collapsible: `.${cssClasses.collapsible}`,\n        collapsibleLabel: `.${cssClasses.collapsible} > .review-panel-label`,\n        expanded: `.${cssClasses.expanded}`,\n        active: `.${cssClasses.active}`,\n        navigable: '.navigable',\n        control: '[data-control]',\n        content: '.review-panel-content',\n        filtersContainer: '.review-panel-filters',\n        filter: '.review-panel-filter',\n        item: '.review-panel-item',\n        header: '.review-panel-header',\n        footer: '.review-panel-footer',\n        score: '.review-panel-score'\n    };\n\n    /**\n     * Finds an element by its control identifier\n     * @param {jQuery} $container\n     * @param {String} id\n     * @returns {jQuery}\n     */\n    const findControl = ($container, id) => $container.find(`[data-control=\"${id}\"]`);\n\n    /**\n     * Finds every expanded collapsible element within the provided target\n     * @param {jQuery} $target\n     * @returns {jQuery}\n     */\n    const findExpanded = $target => $target.find(cssSelectors.collapsible + cssSelectors.expanded);\n\n    /**\n     * Builds a review panel, that will show the test data with score.\n     *\n     * @example\n     *  const container = $();\n     *  const config = {\n     *      // ...\n     *  };\n     *  const testMap = {\n     *      parts: [{\n     *          id: 'part-1',\n     *          label: 'Part 1',\n     *          sections: [{\n     *              id: 'section-1',\n     *              label: 'Section 1',\n     *              items: [{\n     *                  id: 'item-1',\n     *                  label: 'Item 1',\n     *                  position: 0,\n     *                  score: 2,\n     *                  maxScore: 2\n     *              }],\n     *              score: 2,\n     *              maxScore: 2\n     *          }],\n     *          score: 2,\n     *          maxScore: 2\n     *      }],\n     *      score: 2,\n     *      maxScore: 2\n     *  };\n     *  const component = reviewPanelFactory(container, config, testMap)\n     *      .on('ready', function onComponentReady() {\n     *          // ...\n     *      });\n     *\n     * @param {HTMLElement|String} container\n     * @param {Object} config\n     * @param {String} [config.headerLabel] - Header label\n     * @param {String} [config.footerLabel] - Footer label\n     * @param {Boolean} [config.showScore] - Show the score on the review panel. When disabled, the filters will also be.\n     * @param {reviewPanelFilter[]} [config.filters] - The list of available filters\n     * @param {testMap|null} map\n     * @returns {component}\n     * @fires ready - When the component is ready to work\n     * @fires update When the navigation panel has been updated\n     * @fires collapse When a block element is collapsed\n     * @fires expand When a block element is expanded\n     * @fires active When an element is activated\n     * @fires filterchange When the active filter has changed\n     * @fires datachange When the panel data has changed\n     * @fires itemchange When an item is selected by the user (either a click on item or a filter)\n     */\n    function reviewPanelFactory(container, config = {}, map = null) {\n        let component;\n        let controls = null;\n        let activeFilter = null;\n        let activeItem = null;\n        let data = null;\n\n        /**\n         * Selects the active filter\n         * @param {String} filterId\n         */\n        const selectFilter = filterId => {\n            controls.$filters\n                .removeClass(cssClasses.active)\n                .filter(`[data-control=\"${filterId}\"]`)\n                .addClass(cssClasses.active);\n        };\n\n        /**\n         * Selects the active item\n         * @param {String} itemId\n         */\n        const selectItem = itemId => {\n            // first deactivate already active elements\n            controls.$content\n                .find(cssSelectors.active)\n                .removeClass(cssClasses.active);\n\n            // then find the chain of elements to activate\n            const $target = findControl(controls.$content, itemId);\n            if ($target.length) {\n                const $parents = $target.parentsUntil(controls.$content, cssSelectors.control);\n                $target\n                    .add($parents)\n                    .addClass(cssClasses.active);\n\n                // finally make sure the item is visible\n                autoscroll($target, controls.$content);\n            }\n        };\n\n        /**\n         * Apply a callback on each navigable element\n         * @param callback\n         */\n        const eachNavigable = callback => {\n            component.getElement()\n                .find(cssSelectors.navigable)\n                .each(callback);\n        };\n\n        /**\n         * Enables the keyboard navigation using 'tab' keys\n         */\n        const enableKeyboard = () => eachNavigable((index, el) => el.setAttribute('tabindex', 0));\n\n        /**\n         * Disables the keyboard navigation using 'tab' keys\n         */\n        const disableKeyboard = () => eachNavigable((index, el) => el.setAttribute('tabindex', -1));\n\n        /**\n         * Emits the itemchange event with respect to the current active item\n         */\n        const itemChange = () => {\n            /**\n             * @event itemchange\n             * @param {String} itemId\n             * @param {Number} position\n             */\n            component.trigger('itemchange', activeItem.id, activeItem.position);\n        };\n\n        /**\n         * Defines the reviewPanel API\n         * @type {reviewPanel}\n         */\n        const api = {\n            /**\n             * Gets the panel data\n             * @returns {reviewPanelMap}\n             */\n            getData() {\n                return data;\n            },\n\n            /**\n             * Sets the panel data\n             * @param {testMap} newMap\n             * @returns {reviewPanel}\n             * @fires datachange\n             */\n            setData(newMap) {\n                data = reviewDataHelper.getReviewPanelMap(newMap, this.getConfig().showScore);\n\n                /**\n                 * @event datachange\n                 * @param {reviewPanelMap} data\n                 */\n                this.trigger('datachange', data);\n\n                return this;\n            },\n\n            /**\n             * Gets the identifier of the active filter\n             * @returns {String|null}\n             */\n            getActiveFilter() {\n                return activeFilter && activeFilter.id;\n            },\n\n            /**\n             * Sets the active filter\n             * @param {String} filterId\n             * @returns {reviewPanel}\n             */\n            setActiveFilter(filterId) {\n                const {filters} = this.getConfig();\n                if (Array.isArray(filters)) {\n                    const foundFilter = filters.find(filter => filter.id === filterId);\n                    if (foundFilter && (!activeFilter || activeFilter.id !== filterId)) {\n                        activeFilter = foundFilter;\n\n                        if (this.is('rendered')) {\n                            selectFilter(filterId);\n                        }\n\n                        /**\n                         * @event filterchange\n                         * @param {String} filterId\n                         */\n                        this.trigger('filterchange', filterId);\n                    }\n                }\n\n                return this;\n            },\n\n            /**\n             * Gets the identifier of the active item\n             * @returns {String|null}\n             */\n            getActiveItem() {\n                return activeItem && activeItem.id;\n            },\n\n            /**\n             * Gets the position of the active item\n             * @returns {Number|null}\n             */\n            getActiveItemPosition() {\n                return activeItem && activeItem.position;\n            },\n\n            /**\n             * Sets the active item\n             * @param {String} itemId\n             * @returns {reviewPanel}\n             * @fires active for each activated element\n             */\n            setActiveItem(itemId) {\n                if (data && data.items.has(itemId) && (!activeItem || activeItem.id !== itemId)) {\n                    activeItem = data.items.get(itemId);\n\n                    if (this.is('rendered')) {\n                        selectItem(itemId);\n                    }\n\n                    /**\n                     * @event active\n                     * @param {String} itemId\n                     */\n                    this.trigger('active', itemId);\n                }\n                return this;\n            },\n\n            /**\n             * Expands all the blocks from the given identifier and above\n             * @param {String} id\n             * @returns {reviewPanel}\n             * @fires expand for each expanded block\n             */\n            expand(id) {\n                if (this.is('rendered')) {\n                    const $target = findControl(controls.$content, id);\n\n                    if ($target.length) {\n                        // will expand the target, its parents and first child blocks\n                        let $collapsed = $target.parentsUntil(controls.$content, cssSelectors.collapsible)\n                            .add($target.find(cssSelectors.collapsible).filter(':first-child'));\n\n                        if ($target.is(cssSelectors.collapsible)) {\n                            $collapsed = $collapsed.add($target);\n                        }\n\n                        if ($collapsed.filter(cssSelectors.expanded).length !== $collapsed.length) {\n                            // first, collapse all expanded blocks\n                            this.collapse();\n\n                            // then expand the blocks\n                            $collapsed.each((index, el) => {\n                                el.classList.add(cssClasses.expanded);\n\n                                /**\n                                 * @event expand\n                                 * @param {String} id - the identifier of the expanded element\n                                 */\n                                this.trigger('expand', el.dataset.control);\n                            });\n\n                        }\n                    }\n                }\n\n                return this;\n            },\n\n            /**\n             * Collapse all the blocks from the given identifier and below\n             * @param {String|null} [id] - The identifier og the block to collapse. If none, all blocks will be targeted.\n             * @returns {reviewPanel}\n             * @fires collapse for each collapsed block\n             */\n            collapse(id = null) {\n                if (this.is('rendered')) {\n                    let $expanded = null;\n\n                    // select the elements to collapse\n                    if (id) {\n                        // only the expanded elements that belong to the provided identifier\n                        const $target = findControl(controls.$content, id);\n                        $expanded = findExpanded($target);\n                        if ($target.is(cssSelectors.expanded)) {\n                            $expanded = $expanded.add($target);\n                        }\n                    } else {\n                        // all expanded elements\n                        $expanded = findExpanded(controls.$content);\n                    }\n\n                    // apply the collapse\n                    $expanded.each((index, el) => {\n                        el.classList.remove(cssClasses.expanded);\n\n                        /**\n                         * @event collapse\n                         * @param {String} id - the identifier of the collapsed element\n                         */\n                        this.trigger('collapse', el.dataset.control);\n                    });\n                }\n\n                return this;\n            },\n\n            /**\n             * Expands or collapse the blocks related to the given identifier\n             * @param {String} id\n             * @returns {reviewPanel}\n             * @fires expand for each expanded block\n             * @fires collapse for each collapsed block\n             */\n            toggle(id) {\n                if (this.is('rendered')) {\n                    const $target = findControl(controls.$content, id);\n                    if ($target.length) {\n                        if ($target.is(cssSelectors.expanded)) {\n                            this.collapse(id);\n                        } else {\n                            this.expand(id);\n                        }\n                    }\n                }\n\n                return this;\n            },\n\n            /**\n             * Update the displayed list\n             * @returns {reviewPanel}\n             * @fires update once the display has been updated\n             */\n            update() {\n                if (data && this.is('rendered')) {\n                    let scorePercent, scoreText;\n\n                    if (data.maxScore) {\n                        scoreText = `${data.score}/${data.maxScore}`;\n                        scorePercent = `${Math.floor(100 * data.score / data.maxScore) || 0}%`;\n                    } else {\n                        scoreText = `${data.score}`;\n                        scorePercent = '0%';\n                    }\n\n                    controls.$content.html(listTpl(data));\n                    controls.$headerScore.text(scorePercent);\n                    controls.$footerScore.text(scoreText);\n                    hider.toggle(controls.$filters, data.score !== data.maxScore);\n\n                    if (!this.is('disabled')) {\n                        enableKeyboard();\n                    }\n\n                    /**\n                     * @event update\n                     * @param {reviewPanelMap} data\n                     */\n                    this.trigger('update', data);\n                }\n\n                return this;\n            }\n        };\n\n        /**\n         * @typedef {component} reviewPanel\n         */\n        component = componentFactory(api, defaults)\n            // set the component's layout\n            .setTemplate(panelTpl)\n\n            // auto render on init\n            .on('init', function onReviewPanelInit() {\n                const initConfig = this.getConfig();\n\n                // no header nor footer or filters when scores are disabled\n                if (!initConfig.showScore) {\n                    initConfig.headerLabel = false;\n                    initConfig.footerLabel = false;\n                    initConfig.filters = false;\n                }\n\n                const {headerLabel, footerLabel, filters} = initConfig;\n\n                // setup the header\n                if (headerLabel) {\n                    initConfig.header = {\n                        label: headerLabel,\n                        score: '0%'\n                    };\n                }\n\n                // setup the footer\n                if (footerLabel) {\n                    initConfig.footer = {\n                        label: footerLabel,\n                        score: '0'\n                    };\n                }\n\n                // select the first filter if none is active\n                if (!activeFilter && Array.isArray(filters)) {\n                    activeFilter = filters.find(filter => filter.label);\n                }\n\n                // initialize the test map if supplied\n                if (map) {\n                    component.setData(map);\n                }\n\n                // auto render on init (defer the call to give a chance to the init event to be completed before)\n                _.defer(() => this.render(container));\n            })\n\n            // renders the component\n            .on('render', function onReviewPanelRender() {\n                controls = {\n                    $headerScore: this.getElement().find(`${cssSelectors.header} ${cssSelectors.score}`),\n                    $footerScore: this.getElement().find(`${cssSelectors.footer} ${cssSelectors.score}`),\n                    $filtersContainer: this.getElement().find(cssSelectors.filtersContainer),\n                    $filters: this.getElement().find(cssSelectors.filter),\n                    $content: this.getElement().find(cssSelectors.content),\n                };\n\n                this.getElement().on('keydown', cssSelectors.navigable, e => {\n                    if(e.key === ' ' || e.key === 'Enter') {\n                        e.preventDefault();\n                        e.currentTarget.click();\n                    }\n                });\n\n                // change filter on click\n                controls.$filtersContainer.on('click', cssSelectors.filter, e => {\n                    if (!this.is('disabled')) {\n                        this.setActiveFilter(e.currentTarget.dataset.control);\n                    }\n                });\n\n                // expand/collapse blocks on click\n                controls.$content.on('click', cssSelectors.collapsibleLabel, e => {\n                    if (!this.is('disabled')) {\n                        this.toggle(e.currentTarget.parentElement.dataset.control);\n                    }\n                });\n\n                // select item\n                controls.$content.on('click', cssSelectors.item, e => {\n                    if (!this.is('disabled')) {\n                        const currentId = activeItem && activeItem.id;\n                        this.setActiveItem(e.currentTarget.dataset.control);\n                        if (activeItem && activeItem.id !== currentId) {\n                            itemChange();\n                        }\n                    }\n                });\n\n                this.update();\n\n                if (activeFilter) {\n                    selectFilter(activeFilter.id);\n                }\n\n                if (activeItem) {\n                    selectItem(activeItem.id);\n                    this.expand(activeItem.id);\n                }\n\n                /**\n                 * @event ready\n                 */\n                this.setState('show-score', this.getConfig().showScore)\n                    .setState('ready', true)\n                    .trigger('ready');\n            })\n\n            // reflect enable/disabled state\n            .on('enable', () => enableKeyboard)\n            .on('disable', () => disableKeyboard)\n\n            // auto expand the block that contains the active item\n            .on('active', function onReviewPanelActiveItem(itemId) {\n                this.expand(itemId);\n            })\n\n            // make sure the active item remain selected and visible when updating the display\n            .on('update', function onReviewPanelUpdate() {\n                if (activeItem) {\n                    // if the active item is not available anymore, select the first available one\n                    if (!data.items.has(activeItem.id)) {\n                        controls.$content.find(`${cssSelectors.item}:nth(0)`).click();\n                    } else {\n                        selectItem(activeItem.id);\n                        this.expand(activeItem.id);\n                    }\n                }\n            })\n\n            // data update\n            .on('datachange', function onReviewPanelDataChange() {\n                this.update();\n            })\n\n            // free resources on dispose\n            .on('destroy', function onReviewPanelDestroy() {\n                controls = null;\n            });\n\n        // initialize the component with the provided config\n        // defer the call to allow to listen to the init event\n        _.defer(() => component.init(config));\n\n        return component;\n    }\n\n    return reviewPanelFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * Service managing the test map, allowing to filter it and listen to change/filter events\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/services/navigation-data',[\n    'lodash',\n    'core/eventifier',\n    'taoQtiTest/runner/helpers/map'\n], function (_, eventifier, mapHelper) {\n    'use strict';\n\n    /**\n     * @typedef {Object} scoredEntry\n     * @property {Number} score - The test taker's score for this item\n     * @property {Number} maxScore - The max possible score for this item\n     */\n\n    /**\n     * @typedef {scoredEntry} mapEntry\n     * @property {String} id - The element identifier\n     * @property {String} label - The displayed label\n     * @property {Number} position - The position of the item within the test\n     * @property {Boolean} [informational] - If the item is informational\n     * @property {Boolean} [skipped] - If the item has been skipped\n     */\n\n    /**\n     * Makes sure the score is computed on a collection\n     * @param {Object|Array} collection\n     * @param {String} property\n     * @returns {scoredEntry}\n     */\n    const computeScore = (collection, property) => {\n        let score = 0;\n        let maxScore = 0;\n        return {\n            [property]: _.mapValues(collection, item => {\n                item.score = item.score || 0;\n                item.maxScore = item.maxScore || 0;\n\n                score += item.score;\n                maxScore += item.maxScore;\n\n                return item;\n            }),\n            score,\n            maxScore\n        };\n    };\n\n    /**\n     * Manages the test map in order to allow to filter it.\n     * Refines the test map to provide the dataset expected by the review panel\n     *\n     * @example\n     *  // initialize with a test map\n     *  const navigationDataService = navigationDataServiceFactory(testMap);\n     *\n     *  // the service can also be created empty\n     *  const navigationDataService = navigationDataServiceFactory();\n     *  // and a test map set later\n     *  navigationDataService.setMap(testMap);\n     *\n     *  // changes on test map can be listened\n     *  navigationDataService.on('mapchange', testMap => {}); // test map rewritten\n     *  navigationDataService.on('mapfilter', testMap => {}); // test map filtered\n     *\n     *  // get the stored test map\n     *  const map = navigationDataService.getMap();\n     *\n     *  // filter the map by informational items\n     *  navigationDataService.filterMap(item => item.informational);\n     *\n     *  // get the current filtered test map\n     *  const filteredMap = navigationDataService.getFilteredMap();\n     *\n     * @param {testMap} testMap\n     * @returns {navigationDataService}\n     * @fires mapchange each time the testMap is changed\n     * @fires mapfilter each time the testMap is filtered\n     */\n    function navigationDataServiceFactory(testMap = {}) {\n        let filteredTestMap;\n\n        /**\n         * @typedef {Object} navigationDataService\n         */\n        const navigationDataService = {\n            /**\n             * Gets the test map\n             * @returns {testMap}\n             */\n            getMap() {\n                return testMap;\n            },\n\n            /**\n             * Gets the filtered test map\n             * @returns {testMap}\n             */\n            getFilteredMap() {\n                return filteredTestMap;\n            },\n\n            /**\n             * Sets the former test map\n             * @param {testMap} map\n             * @returns {navigationDataService}\n             * @fires mapchange once the test map has been stored\n             */\n            setMap(map) {\n                testMap = this.computeMap(map);\n\n                /**\n                 * @event mapchange\n                 * @param {testMap} testMap\n                 */\n                this.trigger('mapchange', testMap);\n\n                this.filterMap();\n\n                return this;\n            },\n\n            /**\n             * Filters the former map by the provider filter callback.\n             * Any item for which the filter returns true will be kept.\n             * Empty sections and empty parts will be discarded.\n             * @param {Function} filter - A filter callback that should return truey to keep the passed on item,\n             *                            or should return falsey to reject it.\n             * @returns {navigationDataService}\n             * @throws TypeError when the filter is not a function\n             * @fires mapfilter once the test map has been filtered\n             */\n            filterMap(filter = () => true) {\n                if (!_.isFunction(filter)) {\n                    throw new TypeError('A filter must be a function!');\n                }\n\n                // filter the test map, only keeping the items that pass the filter callback\n                filteredTestMap = Object.assign({}, testMap, {\n                    parts: _.reduce(testMap.parts, (parts, part, partId) => {\n                        part = Object.assign({}, part, {\n                            sections: _.reduce(part.sections, (sections, section, sectionId) => {\n                                section = Object.assign({}, section, {\n                                    items: _.pick(section.items, filter)\n                                });\n\n                                if (_.size(section.items)) {\n                                    sections[sectionId] = section;\n                                }\n\n                                return sections;\n                            }, {})\n                        });\n\n                        if (_.size(part.sections)) {\n                            parts[partId] = part;\n                        }\n\n                        return parts;\n                    }, {})\n                });\n\n                // make sure the jumps table is set accordingly\n                mapHelper.createJumpTable(filteredTestMap);\n\n                // fix the jumps table, filling the gaps by empty objects\n                const jumps = mapHelper.getJumps(filteredTestMap);\n                _.times(jumps.length, index => jumps[index] = jumps[index] || {});\n\n                /**\n                 * @event mapfilter\n                 * @param {testMap} filteredTestMap\n                 */\n                this.trigger('mapfilter', filteredTestMap);\n\n                return this;\n            },\n\n            /**\n             * Computes some properties in the test map, like the score.\n             * @param {testMap} map\n             * @returns {testMap}\n             */\n            computeMap(map = {}) {\n                // rebuild the map computing the score\n                return Object.assign({}, map,\n                    computeScore(_.mapValues(map.parts || {}, part => Object.assign({}, part,\n                        computeScore(_.mapValues(part.sections || {}, section => Object.assign({}, section,\n                            computeScore(section.items || {}, 'items')\n                        )), 'sections')\n                    )), 'parts')\n                );\n            }\n        };\n\n        // we need to observe the service\n        eventifier(navigationDataService);\n\n        // initial test map must be set if any\n        if (testMap) {\n            navigationDataService.setMap(testMap);\n        }\n\n        return navigationDataService;\n    }\n\n    return navigationDataServiceFactory;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/plugins/navigation/review-panel/plugin',[\n    'core/promiseTimeout',\n    'taoTests/runner/plugin',\n    'ltiTestReview/review/services/navigation-data',\n    'ltiTestReview/review/plugins/navigation/review-panel/panel'\n], function (\n    promiseTimeout,\n    pluginFactory,\n    navigationDataServiceFactory,\n    reviewPanelFactory\n) {\n    'use strict';\n\n    const filters = {\n        /**\n         * No filter, keep all items\n         * @returns {Boolean}\n         */\n        all() {\n            return true;\n        },\n\n        /**\n         * Filter for incorrect items\n         * @param {mapEntry} item\n         * @returns {Boolean}\n         */\n        incorrect(item) {\n            return !item.informational && (!item.maxScore || item.score !== item.maxScore);\n        }\n    };\n\n    /**\n     * Test Review Plugin : Review Panel\n     * Displays a navigation panel allowing to see the whole test structure and give access to each element\n     */\n    return pluginFactory({\n        name: 'review-panel',\n\n        /**\n         * Initialize the plugin (called during runner's init)\n         */\n        init() {\n            this.getTestRunner()\n                .on('enablenav', () => this.enable())\n                .on('disablenav', () => this.disable());\n        },\n\n        /**\n         * Called during the runner's render phase\n         */\n        render() {\n            return promiseTimeout(new Promise(resolve => {\n                const testRunner = this.getTestRunner();\n                const navigationDataService = navigationDataServiceFactory(testRunner.getTestMap());\n                const {showScore} = testRunner.getOptions();\n                const reviewPanel = reviewPanelFactory(\n                    this.getAreaBroker().getPanelArea(),\n                    Object.assign({showScore}, this.getConfig()),\n                    navigationDataService.getMap()\n                );\n\n                // control the test runner from the review panel\n                reviewPanel\n                    .on('filterchange', filterId => navigationDataService.filterMap(filters[filterId]))\n                    .on('itemchange', (itemRef, position) => testRunner.jump(position, 'item'))\n                    .on('ready', resolve);\n\n                // reflect the filter to the map\n                navigationDataService\n                    .on('mapfilter', filteredMap => testRunner.setTestMap(filteredMap));\n\n                // reflect the test runner state to the review panel\n                testRunner\n                    .on('testmapchange', testMap => reviewPanel.setData(testMap))\n                    .on('loaditem', itemRef => reviewPanel.setActiveItem(itemRef))\n                    .on(`plugin-show.${this.getName()}`, () => reviewPanel.show())\n                    .on(`plugin-hide.${this.getName()}`, () => reviewPanel.hide())\n                    .on(`plugin-enable.${this.getName()}`, () => reviewPanel.enable())\n                    .on(`plugin-disable.${this.getName()}`, () => reviewPanel.disable())\n                    .on('destroy', () => reviewPanel.destroy());\n            }));\n        }\n    });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 Open Assessment Technologies SA ;\n */\n\n/**\n * Extends the navigator service supplied by the QTI test runner,\n * supporting filtered jumps tables (created after test map filtering).\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/services/navigator',[\n    'lodash',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/helpers/testContextBuilder',\n    'taoQtiTest/runner/navigator/navigator'\n], function (_, mapHelper, testContextBuilder, runnerNavigatorFactory) {\n\n    /**\n     * Gives you a navigator\n     * @param {Object} testContext\n     * @param {Object} testMap\n     * @returns {Object} the navigator\n     * @throws {TypeError} if the given parameters aren't objects\n     */\n    function navigatorFactory(testContext, testMap) {\n        const navigator = runnerNavigatorFactory(testContext, testMap);\n\n        // extends the default navigator, taking care of corrupted jumps table\n        return Object.assign({}, navigator, {\n            /**\n             * Navigate to the next item\n             * @returns {testContext|Boolean} the new test context\n             */\n            nextItem() {\n                const next = _.find(mapHelper.getJumps(testMap), jump => jump && jump.position > testContext.itemPosition);\n                if (next) {\n                    return testContextBuilder.buildTestContextFromPosition(testContext, testMap, next.position);\n                }\n\n                return false;\n            },\n\n            /**\n             * Navigate to the next item\n             * @returns {testContext|Boolean} the new test context\n             */\n            previousItem() {\n                const prev = _.findLast(mapHelper.getJumps(testMap), jump => jump && jump.position < testContext.itemPosition);\n                if (prev) {\n                    return testContextBuilder.buildTestContextFromPosition(testContext, testMap, prev.position);\n                }\n\n                return false;\n            },\n\n            /**\n             * Navigate to the next item\n             * @returns {testContext|Boolean} the new test context\n             */\n            nextSection() {\n                const sectionStats = mapHelper.getSectionStats(testMap, testContext.sectionId);\n                const section = mapHelper.getSection(testMap, testContext.sectionId);\n                const itemPosition = section.position + sectionStats.total;\n                const next = _.find(mapHelper.getJumps(testMap), jump => jump && jump.position >= itemPosition);\n                if (next) {\n                    return testContextBuilder.buildTestContextFromPosition(testContext, testMap, next.position);\n                }\n\n                return false;\n            }\n        });\n    }\n\n    return navigatorFactory;\n});\n\n","\ndefine('tpl!ltiTestReview/review/provider/tpl/qtiTestReviewProvider', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<main class=\\\"test-review-scope\\\">\\n    <div class=\\\"jumplinks\\\">\\n        <a class=\\\"jumplink navigationlink\\\" href=\\\"#\\\" data-area=\\\"sidebar\\\" tabindex=\\\"1\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n    + \" <b>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Navigation\", options) : helperMissing.call(depth0, \"__\", \"Navigation\", options)))\n    + \"</b></a>\\n        <a class=\\\"jumplink answerlink\\\" href=\\\"#\\\" data-area=\\\"contentWrapper\\\" tabindex=\\\"1\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Jump to:\", options) : helperMissing.call(depth0, \"__\", \"Jump to:\", options)))\n    + \" <b>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Question\", options) : helperMissing.call(depth0, \"__\", \"Question\", options)))\n    + \"</b></a>\\n    </div>\\n    <div class=\\\"action-bar content-action-bar horizontal-action-bar top-action-bar\\\">\\n        <div class=\\\"control-box size-wrapper\\\">\\n            <div class=\\\"lft tools-box\\\"></div>\\n            <div class=\\\"rgt navi-box\\\">\\n                <ul class=\\\"plain navi-box-list\\\"></ul>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"test-runner-sections\\\">\\n\\n        <aside class=\\\"test-sidebar test-sidebar-left\\\">\\n            <div class=\\\"panel-box\\\"></div>\\n            <div class=\\\"navi-box\\\"></div>\\n        </aside>\\n\\n        <section class=\\\"content-wrapper\\\">\\n            <div class=\\\"item-tool\\\"></div>\\n            <div class=\\\"item-content\\\">\\n                <div id=\\\"qti-content\\\"></div>\\n            </div>\\n        </section>\\n    </div>\\n\\n    <nav class=\\\"action-bar content-action-bar horizontal-action-bar bottom-action-bar\\\">\\n        <div class=\\\"control-box size-wrapper\\\">\\n            <div class=\\\"lft tools-box\\\"></div>\\n            <div class=\\\"rgt navi-box\\\">\\n                <ul class=\\\"plain navi-box-list\\\"></ul>\\n            </div>\\n        </div>\\n    </nav>\\n</main>\";\n  return buffer;\n  });\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2018-2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner provider for the QTI test previewer\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('ltiTestReview/review/provider/qtiTestReviewProvider',[\n    'jquery',\n    'lodash',\n    'taoTests/runner/areaBroker',\n    'taoTests/runner/proxy',\n    'taoTests/runner/testStore',\n    'taoQtiTest/runner/helpers/map',\n    'taoQtiTest/runner/ui/toolbox/toolbox',\n    'taoQtiItem/runner/qtiItemRunner',\n    'taoQtiTest/runner/config/assetManager',\n    'ltiTestReview/review/services/navigator',\n    'tpl!ltiTestReview/review/provider/tpl/qtiTestReviewProvider'\n], function (\n    $,\n    _,\n    areaBrokerFactory,\n    proxyFactory,\n    testStoreFactory,\n    mapHelper,\n    toolboxFactory,\n    qtiItemRunner,\n    assetManagerFactory,\n    testNavigatorFactory,\n    layoutTpl\n) {\n    'use strict';\n\n    /**\n     * A Test runner provider to be registered against the runner\n     */\n    return {\n\n        //provider name\n        name: 'qtiTestReviewProvider',\n\n        /**\n         * Initialize and load the test store\n         * @returns {testStore}\n         */\n        loadTestStore() {\n            const config = this.getConfig();\n\n            //the test run needs to be identified uniquely\n            const identifier = config.serviceCallId || `test-${Date.now()}`;\n            return testStoreFactory(identifier);\n        },\n\n        /**\n         * Installation of the provider, called during test runner init phase.\n         */\n        install() {\n            // eventify the test map update\n            const defaultSetTestMap = this.setTestMap;\n            this.setTestMap = (...args) => {\n                const result = defaultSetTestMap.apply(this, args);\n\n                /**\n                 * @event testmapchange\n                 * @param {testMap} testMap\n                 */\n                this.trigger('testmapchange', this.getTestMap());\n\n                return result;\n            };\n\n            const {plugins} = this.getConfig().options || {};\n            if (plugins) {\n                _.forEach(this.getPlugins(), plugin => {\n                    if (_.isPlainObject(plugin) && _.isFunction(plugin.setConfig)) {\n                        const config = plugins[plugin.getName()];\n                        if (_.isPlainObject(config)) {\n                            plugin.setConfig(config);\n                        }\n                    }\n                });\n            }\n        },\n\n        /**\n         * Initialize and load the area broker with a correct mapping\n         * @returns {areaBroker}\n         */\n        loadAreaBroker() {\n            const $layout = $(layoutTpl());\n\n            return areaBrokerFactory($layout, {\n                contentWrapper: $('.content-wrapper', $layout),\n                itemTool: $('.item-tool', $layout),\n                content: $('#qti-content', $layout),\n                toolbox: $('.bottom-action-bar .tools-box', $layout),\n                navigation: $('.test-sidebar-left .navi-box', $layout),\n                control: $('.top-action-bar .control-box', $layout),\n                actionsBar: $('.bottom-action-bar .control-box', $layout),\n                panel: $('.test-sidebar-left .panel-box', $layout),\n                header: $('.top-action-bar .tools-box', $layout),\n                context: $('.top-action-bar .navi-box-list', $layout),\n                sidebar: $('.test-sidebar-left', $layout),\n            });\n        },\n\n        /**\n         * Initialize and load the test runner proxy\n         * @returns {proxy}\n         */\n        loadProxy() {\n            const {proxyProvider, serviceCallId, bootstrap, timeout} = this.getConfig();\n            return proxyFactory(proxyProvider || 'qtiTestReviewProxy', {serviceCallId, bootstrap, timeout});\n        },\n\n        /**\n         * Initialization of the provider, called during test runner init phase.\n         *\n         * We install behaviors during this phase (ie. even handlers)\n         * and we call proxy.init.\n         *\n         * @this {runner} the runner context, not the provider\n         * @returns {Promise} to chain proxy.init\n         */\n        init() {\n            const dataHolder = this.getDataHolder();\n            const areaBroker = this.getAreaBroker();\n            const load = () => {\n                const testContext = this.getTestContext();\n                if (testContext && testContext.itemIdentifier) {\n                    this.loadItem(testContext.itemIdentifier);\n                }\n            };\n\n            areaBroker.setComponent('toolbox', toolboxFactory());\n            areaBroker.getToolbox().init();\n\n            this.assetManager = assetManagerFactory();\n\n            // first and second tab will show block and navigate to panel or content\n            const createJumplinks = (container) => {\n                container.on('click', (e) => {\n                    if (e.target.classList.contains('jumplink')){\n                        e.preventDefault();\n                        e.target.blur();\n                        const where = e.target.dataset.area;\n                        areaBroker.getArea(where).find(\":not(.hidden)[tabindex]\").first().focus();\n                    }\n                });\n                container.on('focusin', (e) => {\n                    if (e.target.classList.contains('jumplink')){\n                        const where = e.target.dataset.area;\n                        areaBroker.getArea(where).addClass('focused');\n                    }\n                });\n                container.on('focusout', (e) => {\n                    if (e.target.classList.contains('jumplink')){\n                        const where = e.target.dataset.area;\n                        areaBroker.getArea(where).removeClass('focused');\n                    }\n                });\n            };\n            createJumplinks(areaBroker.getContainer().find('.jumplinks'));\n\n            /*\n             * Install behavior on events\n             */\n            this\n                .on('ready', () => {\n                    load();\n                })\n                .on('loaditem', (itemRef, itemData) => {\n                    dataHolder.set('itemIdentifier', itemRef);\n                    dataHolder.set('itemData', itemData);\n                })\n                .on('renderitem', () => {\n                    this.trigger('enabletools enablenav');\n                })\n                .on('move', function (direction, scope, ref) {\n                    const testContext = this.getTestContext();\n                    const testMap = this.getTestMap();\n                    const testNavigator = testNavigatorFactory(testContext, testMap);\n                    const newTestContext = testNavigator.navigate(direction, scope || 'item', ref);\n                    this.unloadItem(testContext.itemIdentifier);\n                    this.setTestContext(newTestContext);\n                })\n                .on('unloaditem', () => {\n                    load();\n                })\n                .on('resumeitem', () => {\n                    this.trigger('enableitem enablenav');\n                })\n                .on('disableitem', () => {\n                    this.trigger('disabletools');\n                })\n                .on('enableitem', () => {\n                    this.trigger('enabletools');\n                })\n                .on('error', () => {\n                    this.trigger('disabletools enablenav');\n                })\n                .on('finish leave', () => {\n                    this.trigger('disablenav disabletools');\n                    this.flush();\n                })\n                .on('flush', () => {\n                    this.destroy();\n                });\n\n            return this.getProxy()\n                .init()\n                .then(data => {\n                    if (data.testMap && _.isEmpty(mapHelper.getJumps(data.testMap))) {\n                        mapHelper.createJumpTable(data.testMap);\n                    }\n                    dataHolder.set('testMap', data.testMap);\n                    dataHolder.set('testContext', data.testContext);\n                    dataHolder.set('testData', data.testData);\n                    dataHolder.set('testResponses', data.testResponses);\n                    return data;\n                });\n        },\n\n        /**\n         * Rendering phase of the test runner\n         *\n         * Attach the test runner to the DOM\n         *\n         * @this {runner} the runner context, not the provider\n         */\n        render() {\n            const config = this.getConfig();\n            const areaBroker = this.getAreaBroker();\n\n            config.renderTo.append(areaBroker.getContainer());\n\n            areaBroker.getToolbox().render(areaBroker.getToolboxArea());\n        },\n\n        /**\n         * LoadItem phase of the test runner\n         *\n         * We call the proxy in order to get the item data\n         *\n         * @this {runner} the runner context, not the provider\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @returns {Promise} that calls in parallel the state and the item data\n         */\n        loadItem(itemIdentifier) {\n            return this.getProxy().getItem(itemIdentifier);\n        },\n\n        /**\n         * RenderItem phase of the test runner\n         *\n         * Here we initialize the item runner and wrap it's call to the test runner\n         *\n         * @this {runner} the runner context, not the provider\n         * @param {String} itemIdentifier - The identifier of the item to update\n         * @param {Object} itemData - The definition data of the item\n         * @returns {Promise} resolves when the item is ready\n         */\n        renderItem(itemIdentifier, itemData) {\n            const areaBroker = this.getAreaBroker();\n\n            const changeState = () => {\n                this.setItemState(itemIdentifier, 'changed', true);\n            };\n\n            return new Promise((resolve, reject) => {\n                itemData.content = itemData.content || {};\n\n                const assetManager = this.assetManager;\n                assetManager.setData('baseUrl', itemData.baseUrl);\n                assetManager.setData('itemIdentifier', itemIdentifier);\n                assetManager.setData('assets', itemData.content.assets);\n\n                this.itemRunner = qtiItemRunner(itemData.content.type, itemData.content.data, {assetManager})\n                    .on('warning', err => this.trigger('warning', err))\n                    .on('error', err => {\n                        this.trigger('enablenav');\n                        reject(err);\n                    })\n                    .on('init', function onItemRunnerInit() {\n                        const {state, portableElements} = itemData;\n                        this.render(areaBroker.getContentArea(), {state, portableElements});\n                    })\n                    .on('render', function onItemRunnerRender() {\n                        this.on('responsechange', changeState);\n                        this.on('statechange', changeState);\n                        resolve();\n                    })\n                    .init();\n            });\n        },\n\n        /**\n         * UnloadItem phase of the test runner\n         *\n         * Item clean up\n         *\n         * @this {runner} the runner context, not the provider\n         * @returns {Promise} resolves when the item is cleared\n         */\n        unloadItem() {\n            this.trigger('beforeunloaditem disablenav disabletools');\n\n            if (this.itemRunner) {\n                return new Promise(resolve => {\n                    this.itemRunner\n                        .on('clear', resolve)\n                        .clear();\n                });\n            }\n            return Promise.resolve();\n        },\n\n        /**\n         * Destroy phase of the test runner\n         *\n         * Clean up\n         *\n         * @this {runner} the runner context, not the provider\n         */\n        destroy() {\n            const areaBroker = this.getAreaBroker();\n\n            // prevent the item to be displayed while test runner is destroying\n            if (this.itemRunner) {\n                this.itemRunner.clear();\n            }\n            this.itemRunner = null;\n\n            if (areaBroker) {\n                areaBroker.getToolbox().destroy();\n            }\n\n            // we remove the store(s) only if the finish step was reached\n            if (this.getState('finish')) {\n                return this.getTestStore().remove();\n            }\n        }\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2019 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Test runner proxy for the QTI Test Review, relying on remote services to get the data\n *\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\ndefine('ltiTestReview/review/proxy/qtiTestReviewProxy',[\n    'lodash',\n    'core/promiseQueue',\n    'core/request',\n    'core/communicator',\n    'ltiTestReview/review/config/qtiTestReviewConfig'\n], function (_, promiseQueue, coreRequest, communicatorFactory, configFactory) {\n    'use strict';\n\n    /**\n     * QTI proxy definition\n     * Related to remote services calls\n     * @typedef {Object} qtiTestReviewProxy\n     */\n    return {\n\n        name: 'qtiTestReviewProxy',\n\n        /**\n         * Installs the proxy\n         */\n        install() {\n            /**\n             * A promise queue to ensure requests run sequentially\n             */\n            this.queue = promiseQueue();\n\n            /**\n             * Proxy request function. Returns a promise\n             * Applied options: asynchronous call, JSON data, no cache\n             * @param {String} url\n             * @param {Object} [reqParams]\n             * @param {String} [contentType] - to force the content type\n             * @param {Boolean} [noToken] - to disable the token\n             * @returns {Promise}\n             */\n            this.request = (url, reqParams, contentType, noToken) => {\n                return coreRequest({\n                    url: url,\n                    data: reqParams,\n                    method: reqParams ? 'POST' : 'GET',\n                    contentType: contentType,\n                    noToken: noToken,\n                    background: false,\n                    sequential: true,\n                    timeout: this.configStorage.getTimeout()\n                })\n                    .then(response => {\n                        this.setOnline();\n\n                        if (response && response.success) {\n                            return Promise.resolve(response);\n                        } else {\n                            return Promise.reject(response);\n                        }\n                    })\n                    .catch(error => {\n                        if (error.data && this.isConnectivityError(error.data)) {\n                            this.setOffline('request');\n                        }\n                        return Promise.reject(error);\n                    });\n            };\n        },\n\n        /**\n         * Initializes the proxy\n         * @param {Object} config - The config provided to the proxy factory\n         * @param {String} config.serviceCallId - The URI of the service call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The proxy will be fully initialized on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        init(config, params) {\n            // store config in a dedicated configStorage\n            this.configStorage = configFactory(config || {});\n\n            // request for initialization\n            return this.request(this.configStorage.getTestActionUrl('init'), params, void 0, true);\n        },\n\n        /**\n         * Uninstalls the proxy\n         * @returns {Promise} - Returns a promise. The proxy will be fully uninstalled on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        destroy() {\n            // no request, just a resources cleaning\n            this.configStorage = null;\n            this.queue = null;\n\n            // the method must return a promise\n            return Promise.resolve();\n        },\n\n        /**\n         * Calls an action related to the test\n         * @param {String} action - The name of the action to call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callTestAction(action, params) {\n            return this.request(this.configStorage.getTestActionUrl(action), params);\n        },\n\n        /**\n         * Calls an action related to a particular item\n         * @param {String} itemIdentifier - The identifier of the item for which call the action\n         * @param {String} action - The name of the action to call\n         * @param {Object} [params] - Some optional parameters to join to the call\n         * @returns {Promise} - Returns a promise. The result of the request will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        callItemAction(itemIdentifier, action, params) {\n            return this.request(this.configStorage.getItemActionUrl(itemIdentifier, action), params);\n        },\n\n        /**\n         * Gets an item definition by its identifier, also gets its current state\n         * @param {String} itemIdentifier - The identifier of the item to get\n         * @param {Object} [params] - additional parameters\n         * @returns {Promise} - Returns a promise. The item data will be provided on resolve.\n         *                      Any error will be provided if rejected.\n         */\n        getItem(itemIdentifier, params) {\n            return this.request(this.configStorage.getItemActionUrl(itemIdentifier, 'getItem'), params, void 0, true);\n        },\n\n        /**\n         * Builds the communication channel\n         * @returns {communicator|null} the communication channel\n         */\n        loadCommunicator() {\n            const config = this.configStorage.getCommunicationConfig();\n            if (config.enabled) {\n                communicatorFactory(config.type, config.params);\n            }\n            return null;\n        }\n    };\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.previewer-component{background:inherit}.previewer-component.fullpage{position:absolute;top:0;left:0;right:0;bottom:0;z-index:100000;background:#fff}.previewer-component.fullpage .test-review-scope{height:100vh}.previewer-component.readonly .qti-item::before{content:\\' \\';position:absolute;top:0;left:0;right:0;bottom:0;z-index:100000}\\n\\n/*# sourceMappingURL=ltiTestReview/review/component/css/qtiTestReviewComponent.css.map */@-o-keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}@-moz-keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}@-webkit-keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}@keyframes loadingbar{0%{left:-10%}50%{left:90%}100%{left:-10%}}.loading-bar{height:6px;position:absolute;width:100%;top:0px;display:none;z-index:10000;cursor:progress}.loading-bar.fixed{position:fixed;width:100%}.loading-bar.fixed:before{top:0 !important}.loading-bar.loading{display:block;overflow:hidden;top:58px}.loading-bar.loading:before{position:absolute;content:\\'\\';height:6px;width:20%;display:block;transform:translateZ(0);background:-webkit-linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);background:-moz-linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);background:-ms-linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);background:-o-linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);background:linear-gradient(to right, rgba(0,0,0,0) 0%, #c35a13 20%, #c35a13 80%, rgba(0,0,0,0) 100%);-webkit-animation:loadingbar 5s linear infinite;-moz-animation:loadingbar 5s linear infinite;-ms-animation:loadingbar 5s linear infinite;-o-animation:loadingbar 5s linear infinite;animation:loadingbar 5s linear infinite}.loading-bar.loading.loadingbar-covered{top:0px;overflow-y:visible}.loading-bar.loading.loadingbar-covered:before{top:86px}.no-version-warning .loading-bar.loadingbar-covered:before{top:58px}.action-bar{background:#266d9c;padding:3px;overflow:hidden;color:#e7eff4}.action-bar li{float:left}.action-bar li .li-inner{padding-bottom:1px;text-decoration:none !important;outline:0;display:inline-block;color:inherit}.action-bar li .li-inner:hover{color:white}.action-bar li span.glyph{text-shadow:0 0 0 transparent;color:inherit}.action-bar li input{width:100%;font-size:12px;font-size:1.2rem;padding:2px 4px}.action-bar li.active .li-inner{color:white}.action-bar.horizontal-action-bar{padding:5px;height:35px}.action-bar.horizontal-action-bar .search-area{margin:2px 0 0 0;border:none;float:right;display:inline-block;position:relative;padding:0 30px 0 0}.action-bar.horizontal-action-bar .search-area input{padding-right:34px;min-width:250px !important}.action-bar.horizontal-action-bar .search-area button{position:absolute;right:32px;top:-2px;cursor:default;opacity:.5;background:transparent;width:25px;height:25px}.action-bar.horizontal-action-bar .search-area button:before{color:#666}.action-bar.horizontal-action-bar .search-area .icon-help{position:absolute;right:5px;top:-1px;text-shadow:0px 0px transparent;color:white;cursor:pointer;display:block;width:24px;height:24px;line-height:24px;text-align:center}.action-bar.horizontal-action-bar li{margin:0 1px;border:1px transparent solid;text-align:center;float:left}.action-bar.horizontal-action-bar li .glyph{width:14px}.action-bar.horizontal-action-bar li .svg-glyph{height:14px;width:14px;margin-right:9px}.action-bar.horizontal-action-bar li.btn-info{overflow:hidden;background:transparent}.action-bar.horizontal-action-bar li.btn-info:hover,.action-bar.horizontal-action-bar li.btn-info.active{border-color:rgba(255,255,255,0.3);opacity:1}.action-bar.horizontal-action-bar li.disabled{background:none !important;text-shadow:inherit !important;opacity:0.45 !important;color:inherit !important}.action-bar.horizontal-action-bar li.disabled a{cursor:not-allowed !important}.action-bar.vertical-action-bar li{max-height:60px}.action-bar.vertical-action-bar li .li-inner{height:60px;display:block;overflow:hidden;text-overflow:ellipsis;text-align:center;font-size:12px;font-size:1.2rem;line-height:12px}.action-bar.vertical-action-bar li .glyph{display:block;margin:12px auto 3px;width:20px;height:20px}.action-bar.tree-action-bar{background:#f3f1ef;position:relative;left:-1px;padding:0;margin:0 2.8571428571% 8px 2.8571428571%;width:94.6428571429%;font-size:13px;font-size:1.3rem}.action-bar.tree-action-bar li{background:rgba(255,255,255,0.5);border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;line-height:1.3;padding:0;text-align:center;float:left;width:65px;height:65px;margin:0 1px 1px 0}.action-bar.tree-action-bar li .glyph,.action-bar.tree-action-bar li .svg-glyph{display:block;color:#0e5d91;margin:12px auto 1px !important}.action-bar.tree-action-bar li .svg-glyph{width:20px;height:20px}.action-bar.tree-action-bar li .glyph{font-size:17px !important;font-size:1.7rem !important}.action-bar.tree-action-bar li .li-inner{display:block;height:65px;padding:2px;font-size:11px;font-size:1.1rem;color:#222}.action-bar.tree-action-bar li:hover{background:#ddd;color:#666}.action-bar .tree-filters{width:160px;position:relative}.action-bar .tree-filters input{padding-right:24px}.action-bar .tree-filters span{position:absolute;right:3px;color:#555;width:22px;top:2px;line-height:20px;display:inline-block;text-align:center;text-shadow:0 0 0 transparent;border-left:1px solid #ddd;cursor:pointer}.action-bar .tree-filters span.icon-close{display:none}.action-bar .tree-filters span:hover{color:#0e5d91}@media (max-width: 1150px){.action-bar.horizontal-action-bar .search-area{float:none;position:absolute;right:0px}.action-bar.horizontal-action-bar .search-area input{padding-right:30px;min-width:auto !important;width:150px}.action-bar.horizontal-action-bar .search-area input:focus{width:220px}}body.oversized-nav:not(.delivery-scope) .action-bar.horizontal-action-bar .search-area{float:none;position:absolute;right:0px}body.oversized-nav:not(.delivery-scope) .action-bar.horizontal-action-bar .search-area input{padding-right:30px;min-width:auto !important;width:150px}body.oversized-nav:not(.delivery-scope) .action-bar.horizontal-action-bar .search-area input:focus{width:220px}.section-container{top:0 !important}.section-container .flex-container-full{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 100%;-webkit-flex:0 0 100%;flex:0 0 100%}.section-container .flex-container-half{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 50%;-webkit-flex:0 0 50%;flex:0 0 50%}.section-container .flex-container-third{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 33.3333333333%;-webkit-flex:0 0 33.3333333333%;flex:0 0 33.3333333333%}.section-container .flex-container-quarter{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 25%;-webkit-flex:0 0 25%;flex:0 0 25%}.section-container .flex-container-remaining{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:1 1 480px;-webkit-flex:1 1 480px;flex:1 1 480px}.section-container .flex-container-main-form{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 500px;-webkit-flex:0 0 500px;flex:0 0 500px;margin:0 20px 20px 0}.section-container .flex-container-navi{-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 280px;-webkit-flex:0 0 280px;flex:0 0 280px}.section-container .section-header{border:none}.section-container .content-panel{width:100%;height:100%;margin:0;padding:0;border:none !important;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:nowrap;-webkit-flex-wrap:nowrap;flex-wrap:nowrap;-webkit-justify-content:flex-start;justify-content:flex-start;-webkit-align-content:flex-start;align-content:flex-start;-webkit-align-items:stretch;align-items:stretch}.section-container .tab-container{border:none;display:none;list-style-type:none;padding:0;margin:0}.section-container .tab-container li{float:left;position:relative;top:0;padding:0;margin:0 1px 0px 0;border-top:1px solid #f3f1ef !important;border-bottom:1px solid #f3f1ef !important;background:#f3f1ef !important}.section-container .tab-container li a{top:0 !important;margin-bottom:0 !important;padding:6px 16px;text-decoration:none;min-height:32px;color:#222;float:left}.section-container .tab-container li.active,.section-container .tab-container li:hover{border-bottom-color:#4a86ad !important;border-top-color:#6e9ebd !important;background:#266d9c !important}.section-container .tab-container li.active a,.section-container .tab-container li:hover a{background:transparent !important;border-color:transparent !important;color:#fff !important;text-shadow:1px 1px 0 rgba(0,0,0,0.2)}.section-container .tab-container li.disabled:hover{background:#f3f1ef !important}.section-container .tab-container li.disabled:hover a{cursor:not-allowed !important;color:#222 !important}.section-container .navi-container{display:none;background:#f3f1ef;-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:0 0 280px;-webkit-flex:0 0 280px;flex:0 0 280px;border-right:1px #ddd solid}.section-container .navi-container .block-title{font-size:14px;font-size:1.4rem;padding:2px 8px;margin:0}.section-container .navi-container .tree-action-bar-box{margin:10px 0;opacity:0}.section-container .navi-container .tree-action-bar-box.active{opacity:1;-webkit-opacity:0.25s ease-in-out;-moz-opacity:0.25s ease-in-out;opacity:0.25s ease-in-out}.section-container .content-container{border:none;-ms-order:0;-webkit-order:0;order:0;flex-item-align:stretch;-ms-flex-item-align:stretch;-webkit-align-self:stretch;align-self:stretch;-ms-flex:1 1 auto;-webkit-flex:1 1 auto;flex:1 1 auto;-ms-flex:1 1;-webkit-flex:1 1;flex:1 1}.section-container .content-block{padding:20px;overflow-y:auto;display:-ms-flex;display:-webkit-flex;display:flex;-ms-flex-direction:row;-webkit-flex-direction:row;flex-direction:row;-ms-flex-wrap:wrap;-webkit-flex-wrap:wrap;flex-wrap:wrap;-webkit-justify-content:flex-start;justify-content:flex-start;-webkit-align-content:flex-start;align-content:flex-start;-webkit-align-items:stretch;align-items:stretch}.section-container .content-block>.grid-container{width:100%}.section-container .content-block .data-container-wrapper{padding:0px 20px 0 0}.section-container .content-block .data-container-wrapper:before,.section-container .content-block .data-container-wrapper:after{content:\\\" \\\";display:table}.section-container .content-block .data-container-wrapper:after{clear:both}.section-container .content-block .data-container-wrapper>section,.section-container .content-block .data-container-wrapper .data-container{width:260px;margin:0 20px 20px 0;float:left;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}.section-container .content-block .data-container-wrapper>section.double,.section-container .content-block .data-container-wrapper .data-container.double{width:540px}.section-container .content-block .data-container-wrapper>section .emptyContentFooter,.section-container .content-block .data-container-wrapper .data-container .emptyContentFooter{display:none}.section-container .content-block .data-container-wrapper>section .tree,.section-container .content-block .data-container-wrapper .data-container .tree{border:none;max-width:none;max-height:none}.section-container .content-block .data-container-wrapper>section form,.section-container .content-block .data-container-wrapper .data-container form{background:none;border:none;margin:0;padding:0}.section-container .content-block .data-container-wrapper>section>header,.section-container .content-block .data-container-wrapper>section .ui-widget-header,.section-container .content-block .data-container-wrapper .data-container>header,.section-container .content-block .data-container-wrapper .data-container .ui-widget-header{background:#f3f1ef;border-width:0px !important;border-bottom:1px #ddd solid !important}.section-container .content-block .data-container-wrapper>section>header h1,.section-container .content-block .data-container-wrapper>section>header h6,.section-container .content-block .data-container-wrapper>section .ui-widget-header h1,.section-container .content-block .data-container-wrapper>section .ui-widget-header h6,.section-container .content-block .data-container-wrapper .data-container>header h1,.section-container .content-block .data-container-wrapper .data-container>header h6,.section-container .content-block .data-container-wrapper .data-container .ui-widget-header h1,.section-container .content-block .data-container-wrapper .data-container .ui-widget-header h6{padding:4px;margin:0;font-size:14px;font-size:1.4rem}.section-container .content-block .data-container-wrapper>section>div,.section-container .content-block .data-container-wrapper>section .ui-widget-content,.section-container .content-block .data-container-wrapper>section .container-content,.section-container .content-block .data-container-wrapper .data-container>div,.section-container .content-block .data-container-wrapper .data-container .ui-widget-content,.section-container .content-block .data-container-wrapper .data-container .container-content{border-width:0px !important;overflow-y:auto;min-height:250px;padding:5px}.section-container .content-block .data-container-wrapper>section>div .icon-grip,.section-container .content-block .data-container-wrapper>section .ui-widget-content .icon-grip,.section-container .content-block .data-container-wrapper>section .container-content .icon-grip,.section-container .content-block .data-container-wrapper .data-container>div .icon-grip,.section-container .content-block .data-container-wrapper .data-container .ui-widget-content .icon-grip,.section-container .content-block .data-container-wrapper .data-container .container-content .icon-grip{cursor:move}.section-container .content-block .data-container-wrapper>section>footer,.section-container .content-block .data-container-wrapper .data-container>footer{min-height:33px}.section-container .content-block .data-container-wrapper>section>footer,.section-container .content-block .data-container-wrapper>section .data-container-footer,.section-container .content-block .data-container-wrapper .data-container>footer,.section-container .content-block .data-container-wrapper .data-container .data-container-footer{background:#f3f1ef;text-align:right !important;padding:4px;border-width:0px !important;border-top:1px #ddd solid !important}.section-container .content-block .data-container-wrapper>section>footer .square,.section-container .content-block .data-container-wrapper>section .data-container-footer .square,.section-container .content-block .data-container-wrapper .data-container>footer .square,.section-container .content-block .data-container-wrapper .data-container .data-container-footer .square{width:28px}.section-container .content-block .data-container-wrapper>section>footer .square span,.section-container .content-block .data-container-wrapper>section .data-container-footer .square span,.section-container .content-block .data-container-wrapper .data-container>footer .square span,.section-container .content-block .data-container-wrapper .data-container .data-container-footer .square span{padding:0;left:0}.section-container .content-block .data-container-wrapper>section ol,.section-container .content-block .data-container-wrapper .data-container ol{margin:0 0 0 15px;padding:10px}.section-container .content-block #form-container.ui-widget-content{border:none !important}.section-container .content-block form:not(.list-container){border:1px #ddd solid;background:#f3f1ef;padding:30px;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px}.section-container .content-block [class^=\\\"btn-\\\"],.section-container .content-block [class*=\\\" btn-\\\"]{margin:0 2px}.test-review-scope{position:relative;display:flex;flex-direction:column;height:calc(100vh - 99px)}.test-review-scope .test-runner-sections{flex:1 1 0;overflow:hidden;display:flex;flex-direction:row}.test-review-scope .test-sidebar{background:#f3f1ef;flex:0 1 auto;overflow-y:auto;display:flex;flex-direction:column;justify-content:flex-start;max-width:300px}.test-review-scope .test-sidebar>*{width:299px}@media only screen and (max-device-width: 800px){.test-review-scope .test-sidebar{max-width:200px}.test-review-scope .test-sidebar>*{width:199px}}@media only screen and (min-device-width: 800px) and (max-device-width: 1280px){.test-review-scope .test-sidebar{max-width:250px}.test-review-scope .test-sidebar>*{width:249px}}.test-review-scope .test-sidebar .panel-box{flex:0 1 auto;overflow:hidden}.test-review-scope .test-sidebar-left{border-right:1px #ddd solid}.test-review-scope .test-sidebar-right{border-left:1px #ddd solid}.test-review-scope .content-wrapper{position:relative;flex:1 1 0;display:flex;flex-direction:column;height:100%;padding:30px 0 0 30px}.test-review-scope .content-wrapper .item-tool{flex:0 0 auto}.test-review-scope .content-wrapper .item-content{flex:1 1 auto;overflow:auto;width:100%}.test-review-scope .content-wrapper .overlay{position:absolute;left:0;right:0;top:0;bottom:0;width:100%;opacity:.9}.test-review-scope .content-wrapper .overlay-full{background-color:#fff;opacity:1}.test-review-scope #qti-content,.test-review-scope .item-tool{-webkit-overflow-scrolling:touch;margin:auto;max-width:1024px;width:100%}.test-review-scope #qti-item{width:100%;min-width:100%;height:auto;overflow:visible}.test-review-scope .qti-item{padding:0 0 30px 0}.test-review-scope .size-wrapper{margin:auto;max-width:1280px;width:100%}.test-review-scope #qti-rubrics{margin:auto;max-width:1024px;width:100%}.test-review-scope #qti-rubrics .qti-rubricBlock{margin:20px 0}.test-review-scope #qti-rubrics .hidden{display:none}.test-review-scope .jumplink{position:fixed;left:-9999px;background-color:#fff;color:#222;text-decoration:underline;outline:none;box-shadow:inset 0 0 0px 3px #0e5d91;height:calc(5px + 105px);width:340px;display:flex;justify-content:center;align-items:center}.test-review-scope .jumplink:focus{visibility:visible;top:0px;left:0px;z-index:1000;transition:color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out}.test-review-scope a[tabindex]:focus,.test-review-scope .focused{box-shadow:inset 0 0 0px 3px #0e5d91}.no-controls .test-review-scope{height:100vh}\\n\\n/*# sourceMappingURL=ltiTestReview/review/provider/css/qtiTestReviewProvider.css.map */.item-answer{position:relative;display:flex;flex-direction:column;background-color:#fff}.item-answer .item-answer-bar{position:relative;display:flex;flex-direction:row;align-content:stretch;align-items:flex-end;height:44px}.item-answer .item-answer-tabs{position:relative;flex:0 0 auto;height:100%}.item-answer .item-answer-tabs .answer-tabs{list-style:none;padding:0;margin:0;display:inline-flex;flex-direction:row;flex-wrap:nowrap;height:100%}.item-answer .item-answer-tabs .answer-tabs .tab{border-top:2px solid #fff;border-bottom:2px solid #0e5d91;padding:0;margin:0;height:100%}.item-answer .item-answer-tabs .answer-tabs .tab .action{border-radius:0;padding:5px 15px;font-weight:bold;text-transform:uppercase;display:flex;align-items:center;height:100%;min-width:200px;background-color:#f3f1ef;color:#222;text-shadow:none}.item-answer .item-answer-tabs .answer-tabs .tab .action .icon{display:inline-block;font-size:2.5rem;font-weight:bold;padding:0}.item-answer .item-answer-tabs .answer-tabs .tab .action .label{padding-top:5px;display:inline-block;text-align:center;flex:1 1 auto}.item-answer .item-answer-tabs .answer-tabs .tab.active{border:2px solid #0e5d91;border-bottom:0 none}.item-answer .item-answer-tabs .answer-tabs .tab.active:last-child:first-child{border:0 none;border-top:2px solid #fff;border-bottom:2px solid #0e5d91}.item-answer .item-answer-tabs .answer-tabs .tab.active .action{color:#222;background-color:#fff}.item-answer .item-answer-score{position:relative;flex:1 0 auto;text-align:right;font-weight:bold;padding:10px 5px;border-bottom:2px solid #0e5d91}.item-answer .item-answer-status{position:relative;height:40px;line-height:20px;font-weight:bold;padding-top:10px}.item-answer .icon-correct:before{content:\\\"\\\\e69f\\\"}.item-answer .icon-incorrect:before{content:\\\"\\\\e69e\\\"}.item-answer .icon-answered:before{content:\\\"\\\\e69a\\\"}.item-answer .icon-skipped:before{content:\\\"\\\\e6a5\\\"}.item-answer .icon-informational:before{content:\\\"\\\\e63a\\\"}.item-answer:not(.show-correct):not(.show-score) .item-answer-bar{display:none}.item-answer.show-correct.correct .icon{color:#0b743c}.item-answer.show-correct.incorrect .icon,.item-answer.show-correct.skipped .icon{color:#950e22}.item-answer.skipped .item-answer-status{text-transform:uppercase;color:#950e22}.item-answer.disabled,.item-answer button[disabled]{background-color:inherit !important}.item-answer :focus{outline:0 none}.item-answer:not(.disabled) .navigable{position:relative}.item-answer:not(.disabled) .navigable:focus{outline:3px solid #0e5d91;outline-offset:-1px}.item-answer:not(.disabled) li.active .navigable:focus{outline-offset:-2px}\\n\\n/*# sourceMappingURL=ltiTestReview/review/plugins/content/item-answer/css/item-answer.css.map */.next-prev{margin:10px;display:flex;flex-direction:row-reverse;align-content:stretch}.next-prev .action{border-radius:0;text-transform:uppercase;flex:1 0 auto;margin-right:4px;height:36px;line-height:36px}.next-prev .action.right{margin-right:0}.next-prev .action.no-label{flex:0 0 auto}.next-prev .action.no-label .icon{padding:0}.next-prev .action.right .icon{float:right;display:block;margin-left:10px;width:10px}.next-prev .action .icon{height:36px;line-height:36px;font-size:2rem}.next-prev :focus{outline:0 none}.next-prev:not(.disabled) .action{position:relative}.next-prev:not(.disabled) .action:focus::after{content:\\' \\';position:absolute;top:-4px;left:-4px;bottom:-4px;right:-4px;border:3px solid #0e5d91}\\n\\n/*# sourceMappingURL=ltiTestReview/review/plugins/navigation/next-prev/css/buttons.css.map */.review-panel{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;-o-user-select:none;user-select:none;color:#222;position:relative;display:flex;flex-direction:column;justify-content:flex-start;cursor:default;width:100%;height:100%;padding:10px}.review-panel .review-panel-label{display:block;white-space:nowrap}.review-panel .review-panel-score{display:block;white-space:nowrap}.review-panel .collapsible>.review-panel-label{cursor:pointer;width:100%;line-height:3rem;padding:0 8px;font-size:1.5rem}.review-panel .collapsible>.review-panel-label .collapsible-arrow::before{font-family:\\'tao\\' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\\"\\\\e611\\\";line-height:inherit;float:right}.review-panel .collapsible>.review-panel-block{display:none}.review-panel .collapsible.expanded>.review-panel-label .collapsible-arrow::before{content:\\\"\\\\e610\\\"}.review-panel .collapsible.expanded>.review-panel-block{display:block}.review-panel.disabled .review-panel-filters .review-panel-filter{cursor:not-allowed}.review-panel.disabled .collapsible>.review-panel-label{cursor:not-allowed}.review-panel.disabled .review-panel-item{cursor:not-allowed}.review-panel :focus{outline:0 none}.review-panel:not(.disabled) .navigable{position:relative}.review-panel:not(.disabled) .navigable:focus:after{content:\\' \\';position:absolute;top:0px;left:0px;bottom:0px;right:0px;border:3px solid #0e5d91;z-index:100}.review-panel:not(.disabled) .review-panel-filters .review-panel-filter:focus:after{top:-5px;left:-5px;bottom:-5px;right:-5px}.review-panel .review-panel-header{display:flex;flex-direction:row;justify-content:space-between;padding:5px 8px;background-color:#D4D5D7;color:#222}.review-panel .review-panel-header .review-panel-label{font-size:1.5rem;font-weight:600}.review-panel .review-panel-header .review-panel-score{font-size:1.5rem;font-weight:bold}.review-panel .review-panel-footer{display:flex;flex-direction:row;justify-content:space-between;padding:5px 8px;background-color:#f3f1ef;color:#222}.review-panel .review-panel-footer .review-panel-label{font-size:1.4rem;padding-left:30px}.review-panel .review-panel-footer .review-panel-score{font-size:1.2rem}.review-panel .review-panel-filters{display:flex;flex-direction:row;justify-content:space-evenly;padding:3rem 0 1rem 0}.review-panel .review-panel-filters .review-panel-filter{display:block;border-bottom:1px solid transparent;cursor:pointer;padding:0 8px}.review-panel .review-panel-filters .review-panel-filter.active{border-bottom:1px solid #222}.review-panel .review-panel-filters .review-panel-filter .review-panel-label{font-size:1.4rem;font-weight:bold}.review-panel .review-panel-content{flex:0 1 auto;overflow-y:auto}.review-panel .review-panel-part{margin-top:1px}.review-panel .review-panel-part>.review-panel-label{background-color:#dddfe2}.review-panel .review-panel-part>.review-panel-label:hover{background-color:#c6cacf}.review-panel .review-panel-part.active>.review-panel-label{background-color:#c0c4ca}.review-panel .review-panel-section>.review-panel-label{background-color:#efecea;border-bottom:1px solid #fff}.review-panel .review-panel-section>.review-panel-label:hover{background-color:#ebe8e4}.review-panel .review-panel-section.active>.review-panel-label{background-color:#ded9d4}.review-panel .review-panel-item{display:flex;flex-direction:row;justify-content:space-between;background:#fff;cursor:pointer;line-height:3rem;padding:0 8px;margin:1px 0}.review-panel .review-panel-item .review-panel-label{flex:1 1 auto;width:calc(100% - 30px);text-align:left;overflow:hidden;text-overflow:ellipsis}.review-panel .review-panel-item .review-panel-score{flex:0 0 auto;width:30px;text-align:right}.review-panel .review-panel-item:first-child{margin-top:0}.review-panel .review-panel-item.active{background:#f4f7f8}.review-panel .review-panel-item:hover{background:#eef3f5}.review-panel .review-panel-item .review-panel-label{font-size:1.4rem}.review-panel .review-panel-item .review-panel-score{font-size:1.2rem}.review-panel .review-panel-item .review-panel-label:before{font-family:\\'tao\\' !important;speak:none;font-style:normal;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;content:\\' \\';display:inline-block;text-align:right;color:#ada194;width:30px;padding-right:5px;line-height:inherit}.review-panel .review-panel-item.item-info .review-panel-label:before{content:\\\"\\\\e63a\\\"}.review-panel .review-panel-item.item-skipped .review-panel-label:before{content:\\\"\\\\e6a5\\\"}.review-panel .review-panel-item.item-default .review-panel-label:before{content:\\\"\\\\e69a\\\"}.review-panel .review-panel-item.item-correct .review-panel-label:before{content:\\\"\\\\e69f\\\";color:#0e914b}.review-panel .review-panel-item.item-incorrect .review-panel-label:before{content:\\\"\\\\e69e\\\";color:#ba122b}\\n\\n/*# sourceMappingURL=ltiTestReview/review/plugins/navigation/review-panel/css/panel.css.map */');\n","\ndefine(\"ltiTestReview/loader/ltiTestReview.bundle\", function(){});\n","define(\"ltiTestReview/loader/ltiTestReview.min\", [\"taoItems/loader/taoItemsRunner.min\",\"taoTests/loader/taoTestsRunner.min\",\"taoQtiItem/loader/taoQtiItemRunner.min\",\"taoQtiTest/loader/taoQtiTestRunner.min\",\"taoQtiTest/loader/testPlugins.min\",\"taoQtiTestPreviewer/loader/qtiPreviewer.min\"], function(){});\n"]}