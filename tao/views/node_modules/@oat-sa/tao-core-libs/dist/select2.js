define(['require', 'select2-origin/select2'], function (require, select2) { 'use strict';

    function getUserLanguage() {
        var documentLang = window.document.documentElement.getAttribute('lang');
        var documentLocale = documentLang && documentLang.split('-')[0];

        return documentLocale;
    }

    var lang = getUserLanguage();

    switch (lang) {
        case 'ar':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_ar'], resolve, reject) });
            break;
        case 'bg':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_bg'], resolve, reject) });
            break;
        case 'ca':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_ca'], resolve, reject) });
            break;
        case 'cs':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_cs'], resolve, reject) });
            break;
        case 'da':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_da'], resolve, reject) });
            break;
        case 'de':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_de'], resolve, reject) });
            break;
        case 'el':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_el'], resolve, reject) });
            break;
        case 'es':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_es'], resolve, reject) });
            break;
        case 'et':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_et'], resolve, reject) });
            break;
        case 'eu':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_eu'], resolve, reject) });
            break;
        case 'fa':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_fa'], resolve, reject) });
            break;
        case 'fi':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_fi'], resolve, reject) });
            break;
        case 'fr':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_fr'], resolve, reject) });
            break;
        case 'gl':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_gl'], resolve, reject) });
            break;
        case 'he':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_he'], resolve, reject) });
            break;
        case 'hr':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_hr'], resolve, reject) });
            break;
        case 'hu':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_hu'], resolve, reject) });
            break;
        case 'id':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_id'], resolve, reject) });
            break;
        case 'is':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_is'], resolve, reject) });
            break;
        case 'it':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_it'], resolve, reject) });
            break;
        case 'ja':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_ja'], resolve, reject) });
            break;
        case 'ko':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_ko'], resolve, reject) });
            break;
        case 'lt':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_lt'], resolve, reject) });
            break;
        case 'lv':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_lv'], resolve, reject) });
            break;
        case 'mk':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_mk'], resolve, reject) });
            break;
        case 'ms':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_ms'], resolve, reject) });
            break;
        case 'nl':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_nl'], resolve, reject) });
            break;
        case 'no':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_no'], resolve, reject) });
            break;
        case 'pl':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_pl'], resolve, reject) });
            break;
        case 'br':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_pt-BR'], resolve, reject) });
            break;
        case 'pt':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_pt-PT'], resolve, reject) });
            break;
        case 'ro':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_ro'], resolve, reject) });
            break;
        case 'ru':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_ru'], resolve, reject) });
            break;
        case 'sk':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_sk'], resolve, reject) });
            break;
        case 'sv':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_sv'], resolve, reject) });
            break;
        case 'th':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_th'], resolve, reject) });
            break;
        case 'tr':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_tr'], resolve, reject) });
            break;
        case 'vi':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_vi'], resolve, reject) });
            break;
        case 'zh':
            new Promise(function (resolve, reject) { require(['select2-origin/select2_locale_zh-CN'], resolve, reject) });
            break;
    }

});
