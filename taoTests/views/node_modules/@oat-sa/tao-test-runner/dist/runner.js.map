{"version":3,"file":"runner.js","sources":["../src/runner.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-SÃ©bastien Conan <jean-sebastien.conan@vesperiagroup.com>\n * @author Sam <sam@taotesting.com>\n */\n\nimport _ from 'lodash';\nimport eventifier from 'core/eventifier';\nimport providerRegistry from 'core/providerRegistry';\nimport dataHolderFactory from 'taoTests/runner/dataHolder';\n\n/**\n * Builds an instance of the QTI test runner\n *\n * @param {String} providerName\n * @param {Function[]} pluginFactories\n * @param {Object} config\n * @param {String|DOMElement|JQuery} config.contentContainer - the dom element that is going to holds the test content (item, rubick, etc)\n * @param {Array} [config.plugins] - the list of plugin instances to be initialized and bound to the test runner\n * @returns {runner|_L28.testRunnerFactory.runner}\n */\nfunction testRunnerFactory(providerName, pluginFactories, config) {\n    /**\n     * @type {Object} The test runner instance\n     */\n    var runner;\n\n    /**\n     * @type {Map} Contains the test runner data\n     */\n    var dataHolder = dataHolderFactory();\n\n    /**\n     * @type {Object} the registered plugins\n     */\n    var plugins = {};\n\n    /**\n     * @type {Object} the test of the runner\n     */\n    var states = {\n        init: false,\n        ready: false,\n        render: false,\n        finish: false,\n        destroy: false\n    };\n\n    /**\n     * @type {Object} keeps the states of the items\n     */\n    var itemStates = {};\n\n    /**\n     * The selected test runner provider\n     */\n    var provider = testRunnerFactory.getProvider(providerName);\n\n    /**\n     * Keep the area broker instance\n     * @see taoTests/runner/areaBroker\n     */\n    var areaBroker;\n\n    /**\n     * Keep the proxy instance\n     * @see taoTests/runner/proxy\n     */\n    var proxy;\n\n    /**\n     * Keep the instance of the probes overseer\n     * @see taoTests/runner/probeOverseer\n     */\n    var probeOverseer;\n\n    /**\n     * Keep the instance of a testStore\n     * @see taoTests/runner/testStore\n     */\n    var testStore;\n\n    /**\n     * Run a method of the provider (by delegation)\n     *\n     * @param {String} method - the method to run\n     * @param {...} args - rest parameters given to the provider method\n     * @returns {Promise} so provider can do async stuffs\n     */\n    function providerRun(method, ...args) {\n        return new Promise(function(resolve) {\n            if (!_.isFunction(provider[method])) {\n                return resolve();\n            }\n            return resolve(provider[method].apply(runner, args));\n        });\n    }\n\n    /**\n     * Run a method in all plugins\n     *\n     * @param {String} method - the method to run\n     * @returns {Promise} once that resolve when all plugins are done\n     */\n    function pluginRun(method) {\n        var execStack = [];\n\n        _.forEach(runner.getPlugins(), function(plugin) {\n            if (_.isFunction(plugin[method])) {\n                execStack.push(plugin[method]());\n            }\n        });\n\n        return Promise.all(execStack);\n    }\n\n    /**\n     * Trigger error event\n     * @param {Error|String} err - the error\n     * @fires runner#error\n     */\n    function reportError(err) {\n        runner.trigger('error', err);\n    }\n\n    config = config || {};\n\n    /**\n     * Defines the test runner\n     *\n     * @type {runner}\n     */\n    runner = eventifier({\n        /**\n         * Initialize the runner\n         *  - instantiate the plugins\n         *  - provider init\n         *  - plugins init\n         *  - call render\n         * @fires runner#init\n         * @returns {runner} chains\n         */\n        init: function init() {\n            var self = this;\n\n            //instantiate the plugins first\n            _.forEach(pluginFactories, function(pluginFactory) {\n                var plugin = pluginFactory(runner, self.getAreaBroker());\n                plugins[plugin.getName()] = plugin;\n            });\n\n            providerRun('install')\n                .then(_.partial(providerRun, 'loadPersistentStates'))\n                .then(_.partial(pluginRun, 'install'))\n                .then(_.partial(providerRun, 'init'))\n                .then(_.partial(pluginRun, 'init'))\n                .then(function() {\n                    self.setState('init', true)\n                        .off('init.internal')\n                        .after('init.internal', function initDone() {\n                            this.render();\n                        })\n                        .trigger('init');\n                })\n                .catch(reportError);\n\n            return this;\n        },\n\n        /**\n         * Render the runner\n         *  - provider render\n         *  - plugins render\n         * @fires runner#render\n         * @fires runner#ready\n         * @returns {runner} chains\n         */\n        render: function render() {\n            var self = this;\n\n            providerRun('render')\n                .then(function() {\n                    pluginRun('render')\n                        .then(function() {\n                            self.setState('ready', true)\n                                .trigger('render')\n                                .trigger('ready');\n                        })\n                        .catch(reportError);\n                })\n                .catch(reportError);\n            return this;\n        },\n\n        /**\n         * Load an item\n         *  - provider loadItem, resolve or return the itemData\n         *  - plugins loadItem\n         *  - call renderItem\n         * @param {*} itemRef - something that let you identify the item to load\n         * @fires runner#loaditem\n         * @returns {runner} chains\n         */\n        loadItem: function loadItem(itemRef) {\n            var self = this;\n\n            providerRun('loadItem', itemRef)\n                .then(function(itemData) {\n                    self.setItemState(itemRef, 'loaded', true)\n                        .off('loaditem.internal')\n                        .after('loaditem.internal', function loadItemDone() {\n                            this.renderItem(itemRef, itemData);\n                        })\n                        .trigger('loaditem', itemRef, itemData);\n                })\n                .catch(reportError);\n            return this;\n        },\n\n        /**\n         * Render an item\n         *  - provider renderItem\n         *  - plugins renderItem\n         * @param {Object} itemRef\n         * @param {Object} itemData - the loaded item data\n         * @fires runner#renderitem\n         * @returns {runner} chains\n         */\n        renderItem: function renderItem(itemRef, itemData) {\n            var self = this;\n\n            providerRun('renderItem', itemRef, itemData)\n                .then(function() {\n                    self.setItemState(itemRef, 'ready', true).trigger('renderitem', itemRef, itemData);\n                })\n                .catch(reportError);\n            return this;\n        },\n\n        /**\n         * Unload an item (for example to destroy the item)\n         *  - provider unloadItem\n         *  - plugins unloadItem\n         * @param {*} itemRef - something that let you identify the item to unload\n         * @fires runner#unloaditem\n         * @returns {runner} chains\n         */\n        unloadItem: function unloadItem(itemRef) {\n            var self = this;\n\n            providerRun('unloadItem', itemRef)\n                .then(function() {\n                    itemStates = _.omit(itemStates, itemRef);\n                    self.trigger('unloaditem', itemRef);\n                })\n                .catch(reportError);\n            return this;\n        },\n\n        /**\n         * Disable an item\n         *  - provider disableItem\n         * @param {*} itemRef - something that let you identify the item\n         * @fires runner#disableitem\n         * @returns {runner} chains\n         */\n        disableItem: function disableItem(itemRef) {\n            var self = this;\n\n            if (!this.getItemState(itemRef, 'disabled')) {\n                providerRun('disableItem', itemRef)\n                    .then(function() {\n                        self.setItemState(itemRef, 'disabled', true).trigger('disableitem', itemRef);\n                    })\n                    .catch(reportError);\n            }\n            return this;\n        },\n\n        /**\n         * Enable an item\n         *  - provider enableItem\n         * @param {*} itemRef - something that let you identify the item\n         * @fires runner#disableitem\n         * @returns {runner} chains\n         */\n        enableItem: function enableItem(itemRef) {\n            var self = this;\n\n            if (this.getItemState(itemRef, 'disabled')) {\n                providerRun('enableItem', itemRef)\n                    .then(function() {\n                        self.setItemState(itemRef, 'disabled', false).trigger('enableitem', itemRef);\n                    })\n                    .catch(reportError);\n            }\n            return this;\n        },\n\n        /**\n         * When the test is terminated\n         *  - provider finish\n         *  - plugins finsh\n         * @fires runner#finish\n         * @returns {runner} chains\n         */\n        finish: function finish() {\n            var self = this;\n\n            providerRun('finish')\n                .then(function() {\n                    pluginRun('finish')\n                        .then(function() {\n                            self.setState('finish', true).trigger('finish');\n                        })\n                        .catch(reportError);\n                })\n                .catch(reportError);\n            return this;\n        },\n\n        /**\n         * Flushes the runner\n         *  - provider flush\n         *  - plugins flush\n         * @fires runner#flush\n         * @returns {runner} chains\n         */\n        flush: function flush() {\n            var self = this;\n\n            providerRun('flush')\n                .then(function() {\n                    pluginRun('flush')\n                        .then(function() {\n                            self.setState('flush', true).trigger('flush');\n                        })\n                        .catch(reportError);\n                })\n                .catch(reportError);\n            return this;\n        },\n\n        /**\n         * Destroy\n         *  - provider destroy\n         *  - plugins destroy\n         * @fires runner#destroy\n         * @returns {runner} chains\n         */\n        destroy: function destroy() {\n            var self = this;\n\n            providerRun('destroy')\n                .then(function() {\n                    pluginRun('destroy')\n                        .then(function() {\n                            var destroyed;\n\n                            if (proxy) {\n                                destroyed = proxy.destroy();\n                            } else {\n                                destroyed = Promise.resolve();\n                            }\n\n                            return destroyed.then(function() {\n                                self.setTestContext({})\n                                    .setTestMap({})\n                                    .setState('destroy', true)\n                                    .trigger('destroy');\n                            });\n                        })\n                        .catch(reportError);\n                })\n                .catch(reportError);\n            return this;\n        },\n\n        /**\n         * Get the runner pugins\n         * @returns {plugin[]} the plugins\n         */\n        getPlugins: function getPlugins() {\n            return plugins;\n        },\n\n        /**\n         * Get a plugin\n         * @param {String} name - the plugin name\n         * @returns {plugin} the plugin\n         */\n        getPlugin: function getPlugin(name) {\n            return plugins[name];\n        },\n\n        /**\n         * Get the config\n         * @returns {Object} the config\n         */\n        getConfig: function getConfig() {\n            return config;\n        },\n\n        /**\n         * Get the area broker, load it if not present\n         *\n         * @returns {areaBroker} the areaBroker\n         */\n        getAreaBroker: function getAreaBroker() {\n            if (!areaBroker) {\n                areaBroker = provider.loadAreaBroker.call(this);\n            }\n            return areaBroker;\n        },\n\n        /**\n         * Get the proxy, load it if not present\n         *\n         * @returns {proxy} the proxy\n         */\n        getProxy: function getProxy() {\n            var self = this;\n            if (!proxy) {\n                if (!_.isFunction(provider.loadProxy)) {\n                    throw new Error('The provider does not have a loadProxy method');\n                }\n                proxy = provider.loadProxy.call(this);\n\n                proxy.on('error', function(error) {\n                    self.trigger('error', error);\n                });\n\n                proxy.install(dataHolder);\n            }\n            return proxy;\n        },\n\n        /**\n         * Get the probeOverseer, and load it if not present\n         *\n         * @returns {probeOverseer} the probe overseer\n         */\n        getProbeOverseer: function getProbeOverseer() {\n            if (!probeOverseer && _.isFunction(provider.loadProbeOverseer)) {\n                probeOverseer = provider.loadProbeOverseer.call(this);\n            }\n\n            return probeOverseer;\n        },\n\n        /**\n         * Get the testStore, and load it if not present\n         *\n         * @returns {testStore} the testStore instance\n         */\n        getTestStore: function getTestStore() {\n            if (!testStore && _.isFunction(provider.loadTestStore)) {\n                testStore = provider.loadTestStore.call(this);\n            }\n            return testStore;\n        },\n\n        /**\n         * Get a plugin store.\n         * It's a convenience method that calls testStore.getStore\n         * @param {String} name - the name of store, usually the plugin name.\n         *\n         * @returns {Promise<storage>} the plugin store\n         */\n        getPluginStore: function getPluginStore(name) {\n            var loadedStore = this.getTestStore();\n            if (!loadedStore || !_.isFunction(loadedStore.getStore)) {\n                return Promise.reject(\n                    new Error('Please configure a testStore via loadTestStore to be able to get a plugin store')\n                );\n            }\n            return this.getTestStore().getStore(name);\n        },\n\n        /**\n         * Check a runner state\n         *\n         * @param {String} name - the state name\n         * @returns {Boolean} if active, false if not set\n         */\n        getState: function getState(name) {\n            return !!states[name];\n        },\n\n        /**\n         * Define a runner state\n         *\n         * @param {String} name - the state name\n         * @param {Boolean} active - is the state active\n         * @returns {runner} chains\n         * @throws {TypeError} if the state name is not a valid string\n         */\n        setState: function setState(name, active) {\n            if (!_.isString(name) || _.isEmpty(name)) {\n                throw new TypeError('The state must have a name');\n            }\n            states[name] = !!active;\n\n            return this;\n        },\n\n        /**\n         * Checks a runner persistent state\n         *  - provider getPersistentState\n         *\n         * @param {String} name - the state name\n         * @returns {Boolean} if active, false if not set\n         */\n        getPersistentState: function getPersistentState(name) {\n            var state;\n\n            if (_.isFunction(provider.getPersistentState)) {\n                state = provider.getPersistentState.call(runner, name);\n            }\n\n            return !!state;\n        },\n\n        /**\n         * Defines a runner persistent state\n         *  - provider setPersistentState\n         *\n         * @param {String} name - the state name\n         * @param {Boolean} active - is the state active\n         * @returns {Promise} Returns a promise that:\n         *                      - will be resolved once the state is fully stored\n         *                      - will be rejected if any error occurs or if the state name is not a valid string\n         */\n        setPersistentState: function setPersistentState(name, active) {\n            var stored;\n\n            if (!_.isString(name) || _.isEmpty(name)) {\n                stored = Promise.reject(new TypeError('The state must have a name'));\n            } else {\n                stored = providerRun('setPersistentState', name, !!active);\n            }\n\n            stored.catch(reportError);\n\n            return stored;\n        },\n\n        /**\n         * Check an item state\n         *\n         * @param {*} itemRef - something that let you identify the item\n         * @param {String} name - the state name\n         * @returns {Boolean} if active, false if not set\n         *\n         * @throws {TypeError} if there is no itemRef nor name\n         */\n        getItemState: function getItemState(itemRef, name) {\n            if (_.isEmpty(itemRef) || _.isEmpty(name)) {\n                throw new TypeError('The state is identified by an itemRef and a name');\n            }\n            return !!(itemStates[itemRef] && itemStates[itemRef][name]);\n        },\n\n        /**\n         * Check an item state\n         *\n         * @param {*} itemRef - something that let you identify the item\n         * @param {String} name - the state name\n         * @param {Boolean} active - is the state active\n         * @returns {runner} chains\n         *\n         * @throws {TypeError} if there is no itemRef nor name\n         */\n        setItemState: function setItemState(itemRef, name, active) {\n            if (_.isEmpty(itemRef) || _.isEmpty(name)) {\n                throw new TypeError('The state is identified by an itemRef and a name');\n            }\n            itemStates[itemRef] = itemStates[itemRef] || {\n                loaded: false,\n                ready: false,\n                disabled: false\n            };\n\n            itemStates[itemRef][name] = !!active;\n\n            return this;\n        },\n\n        /**\n         * Get the test data/definition\n         * @returns {Object} the test data\n         */\n        getTestData: function getTestData() {\n            return dataHolder && dataHolder.get('testData');\n        },\n\n        /**\n         * Set the test data/definition\n         * @param {Object} testData - the test data\n         * @returns {runner} chains\n         */\n        setTestData: function setTestData(testData) {\n            if (dataHolder && _.isPlainObject(testData)) {\n                dataHolder.set('testData', testData);\n            }\n            return this;\n        },\n\n        /**\n         * Get the test context/state\n         * @returns {Object} the test context\n         */\n        getTestContext: function getTestContext() {\n            return dataHolder && dataHolder.get('testContext');\n        },\n\n        /**\n         * Set the test context/state\n         * @param {Object} testContext - the context to set\n         * @returns {runner} chains\n         */\n        setTestContext: function setTestContext(testContext) {\n            if (dataHolder && _.isPlainObject(testContext)) {\n                dataHolder.set('testContext', testContext);\n            }\n            return this;\n        },\n\n        /**\n         * Get the test items map\n         * @returns {Object} the test map\n         */\n        getTestMap: function getTestMap() {\n            return dataHolder && dataHolder.get('testMap');\n        },\n\n        /**\n         * Set the test items map\n         * @param {Object} testMap - the map to set\n         * @returns {runner} chains\n         */\n        setTestMap: function setTestMap(testMap) {\n            if (dataHolder && _.isPlainObject(testMap)) {\n                dataHolder.set('testMap', testMap);\n            }\n            return this;\n        },\n\n        /**\n         * Get the data holder\n         * @returns {dataHolder}\n         */\n        getDataHolder: function getDataHolder() {\n            return dataHolder;\n        },\n\n        /**\n         * Move next alias\n         * @param {String|*} [scope] - the movement scope\n         * @fires runner#move\n         * @returns {runner} chains\n         */\n        next: function next(scope) {\n            this.trigger('move', 'next', scope);\n            return this;\n        },\n\n        /**\n         * Move previous alias\n         * @param {String|*} [scope] - the movement scope\n         * @fires runner#move\n         * @returns {runner} chains\n         */\n        previous: function previous(scope) {\n            this.trigger('move', 'previous', scope);\n            return this;\n        },\n\n        /**\n         * Move to alias\n         * @param {String|Number} position - where to jump\n         * @param {String|*} [scope] - the movement scope\n         * @fires runner#move\n         * @returns {runner} chains\n         */\n        jump: function jump(position, scope) {\n            this.trigger('move', 'jump', scope, position);\n            return this;\n        },\n\n        /**\n         * Skip alias\n         * @param {String|*} [scope] - the movement scope\n         * @fires runner#move\n         * @returns {runner} chains\n         */\n        skip: function skip(scope) {\n            this.trigger('skip', scope);\n            return this;\n        },\n\n        /**\n         * Exit the test\n         * @param {String|*} [why] - reason the test is exited\n         * @fires runner#exit\n         * @returns {runner} chains\n         */\n        exit: function exit(why) {\n            this.trigger('exit', why);\n            return this;\n        },\n\n        /**\n         * Pause the current execution\n         * @fires runner#pause\n         * @returns {runner} chains\n         */\n        pause: function pause() {\n            if (!this.getState('pause')) {\n                this.setState('pause', true).trigger('pause');\n            }\n            return this;\n        },\n\n        /**\n         * Resume a paused test\n         * @fires runner#pause\n         * @returns {runner} chains\n         */\n        resume: function resume() {\n            if (this.getState('pause') === true) {\n                this.setState('pause', false).trigger('resume');\n            }\n            return this;\n        },\n\n        /**\n         * Notify a test timeout\n         * @param {String} scope - The scope where the timeout occurred\n         * @param {String} ref - The reference to the place where the timeout occurred\n         * @param {Object} [timer] - The timer's descriptor, if any\n         * @fires runner#timeout\n         * @returns {runner} chains\n         */\n        timeout: function timeout(scope, ref, timer) {\n            this.trigger('timeout', scope, ref, timer);\n            return this;\n        }\n    });\n\n    runner\n        .on('move', function(...args) {\n            this.trigger(...args);\n        })\n        .after('destroy', function destroyCleanUp() {\n            if (dataHolder) {\n                dataHolder.clear();\n            }\n            areaBroker = null;\n            proxy = null;\n            probeOverseer = null;\n            testStore = null;\n        });\n\n    return runner;\n}\n\n//bind the provider registration capabilities to the testRunnerFactory\nexport default providerRegistry(testRunnerFactory, function validateProvider(provider) {\n    //mandatory methods\n    if (!_.isFunction(provider.loadAreaBroker)) {\n        throw new TypeError('The runner provider MUST have a method that returns an areaBroker');\n    }\n    return true;\n});\n"],"names":["testRunnerFactory","providerName","pluginFactories","config","runner","dataHolder","dataHolderFactory","plugins","states","init","ready","render","finish","destroy","itemStates","provider","getProvider","areaBroker","proxy","probeOverseer","testStore","providerRun","method","args","Promise","resolve","_","isFunction","apply","pluginRun","execStack","forEach","getPlugins","plugin","push","all","reportError","err","trigger","eventifier","self","pluginFactory","getAreaBroker","getName","then","partial","setState","off","after","initDone","catch","loadItem","itemRef","itemData","setItemState","loadItemDone","renderItem","unloadItem","omit","disableItem","getItemState","enableItem","flush","destroyed","setTestContext","setTestMap","getPlugin","name","getConfig","loadAreaBroker","call","getProxy","loadProxy","Error","on","error","install","getProbeOverseer","loadProbeOverseer","getTestStore","loadTestStore","getPluginStore","loadedStore","getStore","reject","getState","active","isString","isEmpty","TypeError","getPersistentState","state","setPersistentState","stored","loaded","disabled","getTestData","get","setTestData","testData","isPlainObject","set","getTestContext","testContext","getTestMap","testMap","getDataHolder","next","scope","previous","jump","position","skip","exit","why","pause","resume","timeout","ref","timer","destroyCleanUp","clear","providerRegistry","validateProvider"],"mappings":"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"}