{"version":3,"sources":["../../loader/bootstrap.js","../tools/fixedDecimals.js","../tools/stats.js","../tools/getConfig.js","../tools/getLabels.js","../tools/getStatus.js","../tools/performances/tester.js","../tools/bandwidth/tester.js","../tools/upload/tester.js","../tools/getPlatformInfo.js","../tools/browser/tester.js","../tools/diagnostic/tpl/main!tpl","../tools/diagnostic/tpl/result!tpl","../tools/diagnostic/tpl/details!tpl","../tools/diagnostic/tpl/feedback!tpl","tpl!taoClientDiagnostic/tools/diagnostic/tpl/quality-bar","../../taoClientDiagnosticCss/diagnostics!css","../tools/diagnostic/diagnostic.js","onLayerEnd0.js","module-create.js","/Users/tamasbesenyei/work/package-tao/tao/views/build/config-wrap-end-default.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/tools/fixedDecimals',[],function () {\n    'use strict';\n\n    /**\n     * Rounds a value to a fixed number of decimals\n     * @param {Number} value The value to round\n     * @param {Number} decimals The number of decimal\n     * @returns {Number}\n     */\n    var fixedDecimals = function fixedDecimals(value, decimals) {\n        var shift = Math.pow(10, Math.abs(decimals || 1));\n        return Math.round(Number(value) * shift) / shift || 0;\n    };\n\n    return fixedDecimals;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/tools/stats',[\n    'lodash',\n    'taoClientDiagnostic/tools/fixedDecimals'\n], function (_, fixedDecimals) {\n    'use strict';\n\n    /**\n     * Computes some stats on a list from a particular field\n     * @param {Array|Object} list The list to compute stats on\n     * @param {String|Function} fieldName The name of the field to process, or a callback method returning the value\n     * @param {Number} [decimals] Optional number of fixed decimals for values\n     * @returns {Object}\n     */\n    var stats = function stats(list, fieldName, decimals) {\n        var sum = 0;\n        var sum2 = 0;\n        var min = Number.MAX_VALUE;\n        var max = 0;\n        var variance;\n        var count = 0;\n        var values = [];\n        var avg;\n        var med;\n        var middle;\n        var getValue;\n        var results;\n\n        if (_.isFunction(fieldName)) {\n            getValue = fieldName;\n        } else {\n            getValue = function(item) {\n                return item && item[fieldName] || 0;\n            };\n        }\n\n        // process 1st pass stats: compute sum, min and max values\n        _.forEach(list, function(item) {\n            var value;\n            if (undefined !== item) {\n                value = getValue(item);\n                values.push(value);\n                min = Math.min(min, value);\n                max = Math.max(max, value);\n                sum += value;\n                count++;\n            }\n        });\n\n        // compute the average value\n        avg = sum / (count || 1);\n\n        // process 2nd pass stats: compute variance\n        _.forEach(values, function(value) {\n            var diff = value - avg;\n            sum2 += diff * diff;\n        });\n\n        // compute de standard variance\n        variance = count > 1 ? Math.sqrt(sum2 / (count - 1)) : 0;\n\n        // compute the median value\n        values.sort();\n        middle = count / 2;\n        med = (values[Math.floor(middle)] + values[Math.ceil(middle)]) / 2;\n\n        results = {\n            min : min,\n            max : max,\n            sum : sum,\n            count : count,\n            average : avg,\n            median : med,\n            variance : variance\n        };\n\n        if (decimals) {\n            _.forEach(results, function(value, key) {\n                results[key] = fixedDecimals(value, decimals);\n            });\n        }\n\n        results.values = list;\n        return results;\n    };\n\n    return stats;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien.conan@vesperiagroup.com>\n */\ndefine('taoClientDiagnostic/tools/getConfig',['lodash'], function (_) {\n    'use strict';\n\n    /**\n     * Gets a config set\n     * @param {Object} [config]\n     * @param {Object} [defaults]\n     * @returns {Object}\n     */\n    return function getConfig(config, defaults) {\n        return _(config || {})\n            .omit(function (value) {\n                return value === null || typeof value === 'undefined';\n            })\n            .defaults(defaults || {})\n            .value();\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoClientDiagnostic/tools/getLabels',['lodash'], function (_) {\n    'use strict';\n\n    /**\n     * Gets the list of messages related to a particular level.\n     * The level is provided as a numeric value, starting from 1.\n     * @param {Array|Object} messages - The list of messages for all levels.\n     *                                  If only one object is provided is will be wrapped into an array\n     * @param {Number|String} level - The level for which filter the messages.\n     *                                It should be comprised within the available indexes.\n     *                                Higher levels will be reduced to the higher available,\n     *                                lower levels will be increased to the lowest.\n     * @returns {Object}\n     */\n    return function getLabels(messages, level) {\n        messages = messages || {};\n\n        if (!_.isArray(messages)) {\n            messages = [messages];\n        }\n\n        // Compute the level value that targets which list of labels to use.\n        // It should be comprised within the available indexes.\n        // Higher levels will be reduced to the higher available, lower levels will be increased to the lowest.\n        level = Math.min(Math.max(parseInt(level, 10) || 0, 1), messages.length || 1) - 1;\n\n        return messages[level] || {};\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n * @author dieter <dieter@taotesting.com>\n */\ndefine('taoClientDiagnostic/tools/getStatus',['lodash'], function (_) {\n    'use strict';\n\n    /**\n     * Gets the correct status message for a given percentage from a list of thresholds.\n     * @param {Number|String} percentage - The actual percentage. Must be comprised between 0 and 100.\n     *                                     Other values will be adjusted to fit the interval.\n     * @param {Array|Object} [thresholds] - A list of descriptors for each thresholds.\n     *                                      A threshold field must be provided for each.\n     * @param {Object} [opts]\n     * @param {Object} [minimumGlobalPercentage] - lowest value that will be used in the global score computation\n     * @returns {Object} Returns the corresponding threshold, or an empty object if none match.\n     */\n    return function getStatus(percentage, thresholds, opts) {\n        var options = opts || {};\n        var testPercentage = Math.max(0, Math.min(100, Math.round(parseInt(percentage, 10) || 0)));\n        var globalPercentage = (options.minimumGlobalPercentage)\n            ? Math.max(testPercentage, options.minimumGlobalPercentage)\n            : testPercentage;\n\n        // need a structure compatible with the handlebars template\n        var status = {\n            // the percentage is between 0 and 100 and obviously must be a number\n            percentage: testPercentage,\n            globalPercentage: globalPercentage,\n            quality: {}\n        };\n        var len, feedback, i, step;\n\n        // grab a feedback related to the percentage in the thresholds list\n        if (thresholds) {\n            if (!_.isArray(thresholds)) {\n                thresholds = [thresholds];\n            }\n\n            len = thresholds.length;\n            for (i = 0; i < len; i++) {\n                step = thresholds[i];\n                if (step && (!step.threshold || status.percentage >= step.threshold)) {\n                    feedback = step;\n                } else {\n                    break;\n                }\n            }\n\n            if (feedback) {\n                status.feedback = _.clone(feedback);\n            }\n        }\n\n        return status;\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taoteting.com>\n */\ndefine('taoClientDiagnostic/tools/performances/tester',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'context',\n    'helpers',\n    'taoClientDiagnostic/tools/stats',\n    'taoQtiItem/qtiItem/core/Loader',\n    'taoQtiItem/qtiCommonRenderer/renderers/Renderer',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getStatus'\n], function($, _, __, async, context, helpers, stats, Loader, Renderer, getConfig, getLabels, getStatus) {\n    'use strict';\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {Number}\n     * @private\n     */\n    var _second = 1000;\n\n    /**\n     * Default timeout duration\n     * @type {Number}\n     * @private\n     */\n    var _defaultTimeout = 30 * _second;\n\n    /**\n     * Default number of renderings by samples\n     * @type {Number}\n     * @private\n     */\n    var _defaultOccurrencesCount = 10;\n\n    /**\n     * List of default samples\n     * @type {Array}\n     */\n    var _defaultSamples = [\n        'taoClientDiagnostic/tools/performances/data/sample1/',\n        'taoClientDiagnostic/tools/performances/data/sample2/',\n        'taoClientDiagnostic/tools/performances/data/sample3/'\n    ];\n\n    /**\n     * Default values for the performances tester\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        id: 'performances',\n\n        // The threshold for optimal performances\n        optimal: 0.025,\n\n        // The threshold for minimal performances\n        threshold: 0.25\n    };\n\n    /**\n     * A list of thresholds for performances check\n     * @type {Array}\n     * @private\n     */\n    var _thresholds = [{\n        threshold: 0,\n        message: __('Very slow performances'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Average performances'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Good performances'),\n        type: 'success'\n    }];\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {Object}\n     * @private\n     */\n    var _messages = [\n        // level 1\n        {\n            title: __('Workstation performances'),\n            status: __('Checking the performances...'),\n            performancesMin: __('Minimum rendering time'),\n            performancesMax: __('Maximum rendering time'),\n            performancesAverage: __('Average rendering time')\n        }\n    ];\n\n    /**\n     * Base text used to build sample identifiers\n     * @type {String}\n     * @private\n     */\n    var _sampleBaseId = 'sample';\n\n    /**\n     * Loads a page inside a div and compute the time to load\n     * @param {Object} data The descriptor of the page to load\n     * @param {Function} done A callback function called to provide the result\n     */\n    function loadItem(data, done){\n\n        //item location config\n        var qtiJsonFile = data.url + 'qti.json';\n        var urlTokens = data.url.split('/');\n        var extension = urlTokens[0];\n        var fullpath = require.s.contexts._.config.paths[extension];\n        var baseUrl = data.url.replace(extension, fullpath);\n        var loader = new Loader();\n        var renderer = new Renderer({\n            baseUrl : baseUrl       // compatibility mode for legacy installations\n        });\n\n        // check needed by compatibility mode for legacy installations\n        if (renderer.getAssetManager) {\n            renderer.getAssetManager().setData('baseUrl', baseUrl);\n        }\n\n        require(['json!'+qtiJsonFile], function(itemData){\n\n            loader.loadItemData(itemData, function(item){\n                renderer.load(function(){\n\n                    var $container,\n                        duration,\n                        start,\n                        end,\n                        result;\n\n                    //start right before rendering\n                    start = window.performance.now();\n\n                    //set renderer\n                    item.setRenderer(this);\n\n                    //render markup\n                    $container = $('<div>').appendTo('body');\n                    $container.append(item.render());\n\n                    //execute javascript\n                    item.postRender();\n\n                    //remove item\n                    $container.remove();\n\n                    //done\n                    end = window.performance.now();\n\n                    duration = (end - start) / _second;\n\n                    result = {\n                        id : data.id,\n                        url : data.url,\n                        duration: duration\n                    };\n\n                    done(null, result);\n\n                }, this.getLoadedClasses());\n            });\n\n        });\n\n    }\n\n    /**\n     * Performs a browser performances test by running a heavy page\n     *\n     * @param {Object} config - Some optional configs\n     * @param {String} [config.id] - The identifier of the test\n     * @param {Number} [config.optimal] - The threshold for optimal performances\n     * @param {Number} [config.threshold] - The threshold for minimal performances\n     * @param {String} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {Object}\n     */\n    function performancesTester(config) {\n        var initConfig = getConfig(config, _defaults);\n        var labels = getLabels(_messages, initConfig.level);\n        var idx = 0;\n        var _samples = _.map(!_.isEmpty(initConfig.samples) && initConfig.samples || _defaultSamples, function(sample) {\n            idx ++;\n            return {\n                id : _sampleBaseId + idx,\n                url : sample,\n                timeout : initConfig.timeout * 1000 || _defaultTimeout,\n                nb : initConfig.occurrences || _defaultOccurrencesCount\n            };\n        });\n\n        // add one occurrence on the first sample to obfuscate the time needed to load the runner\n        _samples[0].nb ++;\n\n        return {\n            /**\n             * Performs a performances test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start: function start(done) {\n                var tests = [];\n                var self = this;\n\n                _.forEach(_samples, function(data) {\n                    var cb = _.partial(loadItem, data);\n                    var iterations = data.nb || 1;\n                    while (iterations --) {\n                        tests.push(cb);\n                    }\n                });\n\n                async.series(tests, function(err, measures) {\n                    var decimals = 2;\n                    var results;\n                    var status;\n                    var summary;\n\n                    if(err && !measures.length){\n                        //something went wrong\n                        throw err;\n                    }\n\n                    // remove the first result to obfuscate the time needed to load the runner\n                    measures.shift();\n\n                    results = stats(measures, 'duration', decimals);\n                    status = self.getFeedback(results.average);\n                    summary = self.getSummary(results);\n\n                    done(status, summary, results);\n                });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {Object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {Object} results\n             * @returns {Object}\n             */\n            getSummary: function getSummary(results) {\n                return {\n                    performancesMin: {message: labels.performancesMin, value: results.min + ' s'},\n                    performancesMax: {message: labels.performancesMax, value: results.max + ' s'},\n                    performancesAverage: {message: labels.performancesAverage, value: results.average + ' s'}\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {Number} result\n             * @returns {Object}\n             */\n            getFeedback: function getFeedback(result) {\n                var optimal = initConfig.optimal;\n                var range = Math.abs(optimal - (initConfig.threshold));\n                var status = getStatus((range + optimal - result) / range * 100, _thresholds);\n\n                status.title =  labels.title;\n                status.id = initConfig.id;\n                return status;\n            }\n        };\n    }\n\n    return performancesTester;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2015-2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/bandwidth/tester',[\n    'lodash',\n    'i18n',\n    'async',\n    'context',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/stats',\n    'taoClientDiagnostic/tools/fixedDecimals',\n    'taoClientDiagnostic/tools/getStatus'\n], function(_, __, async, context, getConfig, getLabels, stats, fixedDecimals, getStatus) {\n    'use strict';\n\n    /**\n     * A binary kilo bytes (KiB)\n     * @type {Number}\n     * @private\n     */\n    var _kilo = 1024;\n\n    /**\n     * A binary mega bytes (MiB)\n     * @type {Number}\n     * @private\n     */\n    var _mega = _kilo * _kilo;\n\n    /**\n     * Duration of one second (in milliseconds)\n     * @type {Number}\n     * @private\n     */\n    var _second = 1000;\n\n    /**\n     * A list of thresholds for bandwidth check\n     * @type {Array}\n     * @private\n     */\n    var _thresholds = [{\n        threshold: 0,\n        message: __('Low bandwidth'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Average bandwidth'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Good bandwidth'),\n        type: 'success'\n    }];\n\n    /**\n     * Default values for the bandwidth tester\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        id: 'bandwidth',\n\n        // The typical bandwidth needed for a test taker (Mbps)\n        unit: 0.16,\n\n        // The thresholds for optimal bandwidth\n        ideal: 45,\n\n        // Maximum number of test takers to display\n        max: 100,\n\n        // Lowest value that will be used in the global score computation\n        minimumGlobalPercentage: false,\n\n        // A list of thresholds for bandwidth check\n        feedbackThresholds: _thresholds,\n\n        fallbackThreshold: 0.2\n    };\n\n    /**\n     * List of descriptors defining the data sets to download.\n     * - file : path of the file containing the test data\n     * - size : the given size of the file\n     * - timeout : the timeout for the download\n     * - threshold : a bandwidth threshold above which the data set can be downloaded to evaluate a more accurate value\n     * - nb : number of download iterations\n     * @type {Object}\n     */\n    var _downloadData = {\n        \"10KB\" : {\n            id : '10KB',\n            file : 'data/bin10KB.data',\n            size : 10 * _kilo,\n            timeout : _second,\n            threshold : 0,\n            nb : 10\n        },\n        \"100KB\" : {\n            id : '100KB',\n            file : 'data/bin100KB.data',\n            size : 100 * _kilo,\n            timeout : 2 * _second,\n            threshold : 0,\n            nb : 5\n        },\n        \"1MB\" : {\n            id : '1MB',\n            file : 'data/bin1MB.data',\n            size : _mega,\n            timeout : 20 * _second,\n            threshold : 0,\n            nb : 3\n        }\n    };\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {Object}\n     * @private\n     */\n    var _messages = [\n        // level 1\n        {\n            title: __('Bandwidth'),\n            status: __('Checking the bandwidth...'),\n            legend: __('Number of simultaneous test takers the connection can handle'),\n            bandwidthMin: __('Minimum bandwidth'),\n            bandwidthMax: __('Maximum bandwidth'),\n            bandwidthAverage: __('Average bandwidth')\n        },\n        // level 2\n        {\n            title: __('Media intensive bandwidth'),\n            status: __('Checking the media intensive bandwidth...'),\n            legend: __('Number of simultaneous test takers the connection can handle with media intensive'),\n            bandwidthMin: __('Minimum intensive bandwidth'),\n            bandwidthMax: __('Maximum intensive bandwidth'),\n            bandwidthAverage: __('Average intensive bandwidth')\n        }\n    ];\n\n    /**\n     * Download a data set as described by the provided descriptor and compute the duration.\n     * @param {Object} data The data set descriptor to use for download\n     * @param {Function} cb A callback function called at the end of the download.\n     * This callback is also called if a timeout breaks the download;\n     */\n    function download(data, cb) {\n        var self = this;\n        var start, end;\n        var timeoutId;\n        var url;\n        var request;\n\n        if (data.threshold && this.bandwidth < data.threshold) {\n            return cb('threshold');\n        }\n\n        url = context['root_url'] + 'taoClientDiagnostic/views/js/tools/bandwidth/' + data.file + '?' + Date.now();\n        request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.setRequestHeader('Accept', 'application/octet-stream');\n\n        request.onload = function onRequestLoad () {\n            var duration;\n            var bytes;\n            var seconds;\n            var speed;\n\n            end = window.performance.now();\n            clearTimeout(timeoutId);\n\n            duration = end - start;\n            bytes = data.size;\n            seconds = duration / _second;\n\n            // speed in Mbps\n            speed = ((bytes * 8) / seconds) / _mega;\n\n            self.bandwidth = Math.max(self.bandwidth, speed);\n\n            return cb(null, {\n                id : data.id,\n                file : data.file,\n                size : data.size,\n                duration : duration,\n                speed : speed\n            });\n        };\n        request.onerror = function onRequestError (err) {\n            clearTimeout(timeoutId);\n            cb(err);\n        };\n\n        request.onreadystatechange = function () {\n            if(request.readyState === 4 && request.status !== 200) {\n                clearTimeout(timeoutId);\n                cb(request.status);\n            }\n        };\n\n        timeoutId = _.delay(cb, data.timeout, 'timeout');\n        start = window.performance.now();\n        request.send();\n    }\n\n    /**\n     * Performs a bandwidth test by downloading a bunch of data sets with different sizes\n     *\n     * @param {Object} config - Some optional configs\n     * @param {String} [config.id] - The identifier of the test\n     * @param {Number} [config.unit] - The typical bandwidth needed for a test taker (Mbps)\n     * @param {Number} [config.ideal] - The thresholds for optimal bandwidth\n     * @param {Number} [config.max] - Maximum number of test takers to display\n     * @param {String} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {Object}\n     */\n    function bandwidthTester (config) {\n        var initConfig = getConfig(config, _defaults);\n        var labels = getLabels(_messages, initConfig.level);\n\n        // override the feedback thresholds given by the config in case it is an empty array\n        if (_.isArray(initConfig.feedbackThresholds) && !initConfig.feedbackThresholds.length) {\n            initConfig.feedbackThresholds = _thresholds;\n        }\n\n        return {\n            /**\n             * Performs a bandwidth test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start : function start(done) {\n                var self = this;\n                var tests = [];\n\n                _.forEach(_downloadData, function(data) {\n                    var cb = _.bind(download, self, data);\n                    var iterations = data.nb || 1;\n                    while (iterations --) {\n                        tests.push(cb);\n                    }\n                });\n\n                this.bandwidth = 0;\n\n                async.series(tests, function(err, measures) {\n                    var duration = 0;\n                    var size = 0;\n                    var decimals = 2;\n                    var results;\n                    var resultsBySize = {};\n                    var summary;\n                    var status;\n\n                    function getValue(value) {\n                        var speed = 0;\n\n                        if (value) {\n                            duration += value.duration;\n                            size += value.size;\n\n                            speed = value.speed;\n                            value.speed = fixedDecimals(speed, decimals);\n                        }\n\n                        return speed;\n                    }\n\n                    if (err && !measures.length) {\n                        //something went wrong\n                        throw err;\n                    }\n                    results = stats(measures, getValue, decimals);\n\n                    _.forEach(_downloadData, function (data, key) {\n                        resultsBySize[key] = stats(_.filter(measures, function(o) {\n                            return o.id === key;\n                        }), getValue, decimals);\n                    });\n\n                    results.duration = fixedDecimals(duration / _second, decimals);\n                    results.size = size;\n\n                    summary = self.getSummary(results);\n                    status = self.getFeedback(results, resultsBySize);\n\n                    done(status, summary, results);\n                });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {Object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {Object} results\n             * @returns {Object}\n             */\n            getSummary: function getSummary(results) {\n                return {\n                    bandwidthMin: {message: labels.bandwidthMin, value: results.min + ' Mbps'},\n                    bandwidthMax: {message: labels.bandwidthMax, value: results.max + ' Mbps'},\n                    bandwidthAverage: {message:  labels.bandwidthAverage, value: results.average + ' Mbps'}\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {Object} result\n             * @param {Number} result.max\n             * @param {Number} result.min\n             * @param {Number} result.average\n             * @param {Number} resultsBySize - result statistics grouped by size\n             * @returns {Object}\n             */\n            getFeedback: function getFeedback(result, resultsBySize) {\n                var avgResult = result.average;\n                var bandwidthUnit = initConfig.unit;\n                var threshold = initConfig.ideal;\n                var maxTestTakers = initConfig.max;\n                var max = threshold * bandwidthUnit;\n                var getStatusOptions = (initConfig.minimumGlobalPercentage)\n                    ? { minimumGlobalPercentage: initConfig.minimumGlobalPercentage }\n                    : {};\n                var baseBandwidth = avgResult;\n                var status;\n                var nb;\n                var stable = true;\n\n                _.forEach(resultsBySize, function (resultBySize){\n                    if (resultBySize.min / resultBySize.average < initConfig.fallbackThreshold) {\n                        stable = false;\n                    }\n                });\n\n                status = getStatus(\n                    baseBandwidth / max * 100,\n                    initConfig.feedbackThresholds,\n                    getStatusOptions\n                );\n\n                nb = Math.floor(baseBandwidth / bandwidthUnit );\n\n                if (nb > maxTestTakers) {\n                    nb = '>' + maxTestTakers;\n                }\n\n                status.id = initConfig.id;\n                status.title = labels.title;\n                status.feedback.legend = labels.legend;\n                status.quality.label = nb;\n\n                if (!stable) {\n                    status.feedback.type = 'warning';\n                    status.feedback.message = __('Unstable bandwidth, temporary fluctuations in connection speed may affect test taker experience.');\n                    status.feedback.legend = __('Simultaneous test takers under normal connection conditions.');\n                }\n\n                if (nb.toString().length > 2) {\n                    status.quality.wide = true;\n                }\n\n                return status;\n            }\n        };\n    }\n\n    return bandwidthTester;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2017 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoClientDiagnostic/tools/upload/tester',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'util/url',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getStatus'\n], function($, _, __, async, urlHelper, getConfig, getLabels, getStatus) {\n    'use strict';\n\n    /**\n     * A binary kilo bytes (KiB)\n     * @type {Number}\n     * @private\n     */\n    var _kilo = 1024;\n\n    /**\n     * A binary mega bytes (MiB)\n     * @type {Number}\n     * @private\n     */\n    var _mega = _kilo * _kilo;\n\n    /**\n     * Result of diagnostic\n     */\n    var data = [];\n\n    /**\n     * Default values for the upload speed tester\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        id: 'upload',\n\n        // Size of data to sent to server during speed test in bytes\n        size: _mega,\n\n        // Optimal speed in bytes per second\n        optimal: _mega\n    };\n\n    /**\n     * A list of thresholds for bandwidth check\n     * @type {Array}\n     * @private\n     */\n    var _thresholds = [{\n        threshold: 0,\n        message: __('Low upload speed'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Average upload speed'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Good upload speed'),\n        type: 'success'\n    }];\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {Object}\n     * @private\n     */\n    var _messages = [\n        // level 1\n        {\n            title: __('Upload speed'),\n            status: __('Checking upload speed...'),\n            uploadAvg: __('Average upload speed'),\n            uploadMax: __('Max upload speed')\n        }\n    ];\n\n    /**\n     * Generate random string of given length\n     * @param length\n     */\n    var generateStr = function generateStr(length) {\n        var text = \"\";\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        var i;\n\n        for (i = 0; i < length; i++) {\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n\n        return text;\n    };\n\n    /**\n     * Upload generated string to check upload speed.\n     * @param {number} size of string to upload in bytes\n     * @return {object} jqXHR\n     */\n    var upload = function upload(size) {\n\n        var url = urlHelper.route('upload', 'CompatibilityChecker', 'taoClientDiagnostic', {cache : Date.now()});\n        var str = generateStr(size);\n        data = [];\n\n        return $.ajax({\n            url : url,\n            type : 'POST',\n            data : {\n                upload : str\n            },\n            xhr: function() {\n                var xhr = new window.XMLHttpRequest();\n                var startTime = Date.now();\n                // Upload progress\n                xhr.upload.addEventListener(\"progress\", function(evt){\n                    var passedTime;\n                    if (evt.lengthComputable) {\n                        passedTime = Date.now() - startTime;\n                        data.push({\n                            time: passedTime,\n                            loaded: evt.loaded,\n                            speed: ((evt.loaded * 8) / _mega) / (passedTime / 1000)\n                        });\n                    }\n                }, false);\n\n                return xhr;\n            }\n        });\n    };\n\n    /**\n     * Performs a upload speed test\n     * @param {Object} config - Some optional configs\n     * @param {String} [config.id] - The identifier of the test\n     * @param {Number} [config.size] - Size of data to sent to server during speed test in bytes\n     * @param {Number} [config.optimal] - Optimal speed in bytes per second\n     * @param {String} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {Object}\n     */\n    var uploadTester = function uploadTester(config) {\n        var initConfig = getConfig(config, _defaults);\n        var labels = getLabels(_messages, initConfig.level);\n\n        return {\n            /**\n             * Performs upload speed test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start : function start(done) {\n                var self = this;\n\n                upload(parseInt(initConfig.size, 10)).then(function() {\n                    var totalSpeed = 0;\n                    var avgSpeed;\n                    var maxSpeed = 0;\n                    var status, summary, results;\n\n                    _.forEach(data, function (val) {\n                        totalSpeed += val.speed;\n                        if (maxSpeed < val.speed) {\n                            maxSpeed = Math.round(val.speed * 100) / 100;\n                        }\n                    });\n                    avgSpeed = Math.round(totalSpeed / data.length * 100) / 100;\n                    results = {\n                        max: maxSpeed,\n                        avg: avgSpeed,\n                        type: 'upload'\n                    };\n\n                    status = self.getFeedback(avgSpeed);\n                    summary = self.getSummary(results);\n\n                    done(status, summary, results);\n                });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {Object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {Object} results\n             * @returns {Object}\n             */\n            getSummary: function getSummary(results) {\n                return {\n                    uploadAvg: {message: labels.uploadAvg, value: results.avg + ' Mbps'},\n                    uploadMax: {message: labels.uploadMax, value: results.max + ' Mbps'}\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {Number} result\n             * @returns {Object}\n             */\n            getFeedback: function getFeedback(result) {\n                var optimal = initConfig.optimal / _mega;\n                var status = getStatus((100 / optimal) * result, _thresholds);\n\n                status.id = initConfig.id;\n                status.title =  labels.title;\n\n                return status;\n            }\n        };\n    };\n\n    return uploadTester;\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * This helper performs a server request to gather information about the user browser and os\n *\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoClientDiagnostic/tools/getPlatformInfo',[\n    'jquery',\n    'util/url',\n    'core/promise',\n    'taoClientDiagnostic/tools/getConfig'\n], function ($, url, Promise, getConfig) {\n    'use strict';\n\n    /**\n     * Some default values\n     * @type {Object}\n     * @private\n     */\n    var defaultConfig = {\n        browserVersionAction: 'whichBrowser',\n        browserVersionController: 'CompatibilityChecker',\n        browserVersionExtension: 'taoClientDiagnostic'\n    };\n\n    /**\n     * Gets the URL of the platform tester\n     * @param {Window} win\n     * @param {String} action\n     * @param {String} controller\n     * @param {String} extension\n     * @returns {String}\n     */\n    function getTesterUrl(win, action, controller, extension) {\n        var document = win.document;\n        var navigator = win.navigator;\n        var screen = win.screen;\n        var params = {};\n        var e = 0;\n        var f = 0;\n\n        // append the browser user agent\n        params.ua = navigator.userAgent;\n\n        // detect browser family\n        e |= win.ActiveXObject ? 1 : 0;\n        e |= win.opera ? 2 : 0;\n        e |= win.chrome ? 4 : 0;\n        e |= 'getBoxObjectFor' in document || 'mozInnerScreenX' in win ? 8 : 0;\n        e |= ('WebKitCSSMatrix' in win || 'WebKitPoint' in win || 'webkitStorageInfo' in win || 'webkitURL' in win) ? 16 : 0;\n        e |= (e & 16 && ({}.toString).toString().indexOf(\"\\n\") === -1) ? 32 : 0;\n        params.e = e;\n\n        // gather info about browser functionality\n        f |= 'sandbox' in document.createElement('iframe') ? 1 : 0;\n        f |= 'WebSocket' in win ? 2 : 0;\n        f |= win.Worker ? 4 : 0;\n        f |= win.applicationCache ? 8 : 0;\n        f |= win.history && win.history.pushState ? 16 : 0;\n        f |= document.documentElement.webkitRequestFullScreen ? 32 : 0;\n        f |= 'FileReader' in win ? 64 : 0;\n        params.f = f;\n\n        // append a unique ID\n        params.r = Math.random().toString(36).substring(7);\n\n        // get the screen size\n        params.w = screen.width;\n        params.h = screen.height;\n\n        return url.route(action, controller, extension, params);\n    }\n\n    /**\n     * Check the user browser and os\n     * @param {Window} window - Need an access to the window object\n     * @param {Object} config\n     * @param {String} config.browserVersionAction - The name of the action to call to get the browser checker\n     * @param {String} config.browserVersionController - The name of the controller to call to get the browser checker\n     * @param {String} config.browserVersionExtension - The name of the extension containing the controller to call to get the browser checker\n     * @returns {Promise}\n     */\n    return function getPlatformInfo(win, config) {\n        var testerUrl;\n\n        config = getConfig(config, defaultConfig);\n\n        testerUrl = getTesterUrl(\n            win,\n            config.browserVersionAction,\n            config.browserVersionController,\n            config.browserVersionExtension\n        );\n\n        return new Promise(function (resolve, reject) {\n            $.ajax({url: testerUrl})\n                .done(resolve)\n                .fail(reject);\n        });\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2017 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n */\ndefine('taoClientDiagnostic/tools/browser/tester',[\n    'jquery',\n    'i18n',\n    'util/url',\n    'taoClientDiagnostic/tools/getConfig',\n    'taoClientDiagnostic/tools/getLabels',\n    'taoClientDiagnostic/tools/getPlatformInfo',\n    'taoClientDiagnostic/tools/getStatus'\n], function ($, __, url, getConfig, getLabels, getPlatformInfo, getStatus) {\n    'use strict';\n\n    /**\n     * Some default values\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        id: 'browser',\n        browserVersionAction: 'whichBrowser',\n        browserVersionController: 'CompatibilityChecker',\n        browserVersionExtension: 'taoClientDiagnostic',\n        action: 'check',\n        controller: 'DiagnosticChecker'\n    };\n\n    /**\n     * Placeholder variables for custom messages\n     * @type {Object}\n     * @private\n     */\n    var _placeHolders = {\n        CURRENT_BROWSER: '%CURRENT_BROWSER%',\n        CURRENT_OS: '%CURRENT_OS%'\n    };\n\n    /**\n     * List of translated texts per level.\n     * The level is provided through the config as a numeric value, starting from 1.\n     * @type {Object}\n     * @private\n     */\n    var _messages = [\n        // level 1\n        {\n            title: __('Operating system and web browser'),\n            status: __('Checking the browser...'),\n            browser: __('Web browser'),\n            os: __('Operating system')\n        }\n    ];\n\n    /**\n     * Performs a browser support test\n     *\n     * @param {Object} config - Some optional configs\n     * @param {String} [config.id] - The identifier of the test\n     * @param {String} [config.action] - The name of the action to call to get the browser checker\n     * @param {String} [config.controller] - The name of the controller to call to get the browser checker\n     * @param {String} [config.extension] - The name of the extension containing the controller to call to get the browser checker\n     * @param {String} [config.level] - The intensity level of the test. It will aim which messages list to use.\n     * @returns {Object}\n     */\n    function browserTester(config) {\n        var initConfig = getConfig(config, _defaults);\n        var labels = getLabels(_messages, initConfig.level);\n\n        return {\n            /**\n             * Performs a browser support test, then call a function to provide the result\n             * @param {Function} done\n             */\n            start: function start(done) {\n                var self = this;\n\n                getPlatformInfo(window, initConfig)\n                    .then(function(results) {\n                        // which browser\n                        $.post(\n                            url.route(initConfig.action, initConfig.controller, initConfig.extension),\n                            results,\n                            function (data) {\n                                var percentage = ('success' === data.type) ? 100 : (('warning' === data.type) ? 33 : 0);\n                                var status = self.getFeedback(percentage, data);\n                                var summary = self.getSummary(results);\n\n                                status.customMsgRenderer = function(customMsg) {\n                                    return (customMsg || '')\n                                        .replace(_placeHolders.CURRENT_BROWSER, summary.browser.value)\n                                        .replace(_placeHolders.CURRENT_OS, summary.os.value);\n                                };\n\n                                done(status, summary, results);\n                            },\n                            'json'\n                        );\n                    });\n            },\n\n            /**\n             * Gets the labels loaded for the tester\n             * @returns {Object}\n             */\n            get labels() {\n                return labels;\n            },\n\n            /**\n             * Builds the results summary\n             * @param {Object} results\n             * @returns {Object}\n             */\n            getSummary: function getSummary(results) {\n                var currentBrowser = results.browser + ' ' + results.browserVersion;\n                var currentOs = results.os + ' ' + results.osVersion;\n                return {\n                    browser: {\n                        message: labels.browser,\n                        value: currentBrowser\n                    },\n                    os: {\n                        message: labels.os,\n                        value: currentOs\n                    }\n                };\n            },\n\n            /**\n             * Gets the feedback status for the provided result value\n             * @param {Number} result\n             * @param {Object} data\n             * @returns {Object}\n             */\n            getFeedback: function getFeedback(result, data) {\n                var status = getStatus(result, data);\n\n                status.id = initConfig.id;\n                status.title =  labels.title;\n\n                return status;\n            }\n        };\n    }\n\n    return browserTester;\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/main', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.header) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.header); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.info) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.info); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program5(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<p>\";\n  if (helper = helpers.setup) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.setup); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</p>\";\n  return buffer;\n  }\n\nfunction program7(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        <p>\\n            <label for=\\\"school_id\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School ID:\", options) : helperMissing.call(depth0, \"__\", \"School ID:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_id\\\" id=\\\"school_id\\\" name=\\\"school_id\\\" maxlength=\\\"255\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School ID\", options) : helperMissing.call(depth0, \"__\", \"School ID\", options)))\n    + \"\\\" />\\n        </p>\\n        <p>\\n            <label for=\\\"workstation\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Workstation:\", options) : helperMissing.call(depth0, \"__\", \"Workstation:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"workstation\\\" id=\\\"workstation\\\" name=\\\"workstation\\\" maxlength=\\\"64\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Workstation name\", options) : helperMissing.call(depth0, \"__\", \"Workstation name\", options)))\n    + \"\\\" />\\n        </p>\\n        \";\n  return buffer;\n  }\n\nfunction program9(depth0,data) {\n  \n  var buffer = \"\", stack1;\n  buffer += \"\\n            \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.validateSchoolName), {hash:{},inverse:self.program(12, program12, data),fn:self.program(10, program10, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  return buffer;\n  }\nfunction program10(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        <p>\\n            <label for=\\\"school_number\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School number:\", options) : helperMissing.call(depth0, \"__\", \"School number:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_number\\\" id=\\\"school_number\\\" name=\\\"school_number\\\" maxlength=\\\"10\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School number\", options) : helperMissing.call(depth0, \"__\", \"School number\", options)))\n    + \"\\\" />\\n        </p>\\n        <p>\\n            <label for=\\\"school_pin\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School PIN:\", options) : helperMissing.call(depth0, \"__\", \"School PIN:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_pin\\\" id=\\\"school_pin\\\" name=\\\"school_pin\\\" maxlength=\\\"4\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School PIN code (4 digits)\", options) : helperMissing.call(depth0, \"__\", \"School PIN code (4 digits)\", options)))\n    + \"\\\" />\\n        </p>\\n            \";\n  return buffer;\n  }\n\nfunction program12(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n        <p>\\n            <label for=\\\"school_name\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School name:\", options) : helperMissing.call(depth0, \"__\", \"School name:\", options)))\n    + \"</label>\\n            <input type=\\\"text\\\" data-control=\\\"school_name\\\" id=\\\"school_name\\\" name=\\\"school_name\\\" maxlength=\\\"255\\\" placeholder=\\\"\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"School name\", options) : helperMissing.call(depth0, \"__\", \"School name\", options)))\n    + \"\\\" />\\n        </p>\\n            \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"diagnostics-main-area\\\">\\n\\n    <h1>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h1>\\n\\n    <div class=\\\"intro\\\">\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.header), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.info), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.setup), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.requireSchoolId), {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n        \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.requireSchoolName), {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    </div>\\n\\n    <div class=\\\"clearfix\\\">\\n        <button data-action=\\\"test-launcher\\\" class=\\\"btn-info small rgt\\\">\";\n  if (helper = helpers.button) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.button); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</button>\\n    </div>\\n\\n    <ul class=\\\"plain results\\\"></ul>\\n\\n    <div class=\\\"status\\\">\\n        <h2></h2>\\n    </div>\\n\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/result', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType=\"function\", self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", helper, options;\n  buffer += \"\\n    <div class=\\\"clearfix\\\">\\n        <button data-action=\\\"show-details\\\" class=\\\"rgt btn-info small\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Show Details\", options) : helperMissing.call(depth0, \"__\", \"Show Details\", options)))\n    + \"</button>\\n        <button data-action=\\\"hide-details\\\" class=\\\"rgt btn-info small hidden\\\">\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Hide Details\", options) : helperMissing.call(depth0, \"__\", \"Hide Details\", options)))\n    + \"</button>\\n        <div class=\\\"details hidden\\\"></div>\\n    </div>\\n    \";\n  return buffer;\n  }\n\n  buffer += \"<li data-result=\\\"\";\n  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <h2>\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</h2>\\n    <div class=\\\"result\\\"></div>\\n\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.details), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</li>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/details', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, options, functionType=\"function\", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"\\n                <tr><td>\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</td><td>\";\n  if (helper = helpers.value) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.value); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</td></tr>\\n            \";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"details\\\">\\n    <h2>\"\n    + escapeExpression((helper = helpers.__ || (depth0 && depth0.__),options={hash:{},data:data},helper ? helper.call(depth0, \"Details\", options) : helperMissing.call(depth0, \"__\", \"Details\", options)))\n    + \"</h2>\\n    <div>\\n        <table class=\\\"matrix\\\">\\n            <tbody>\\n            \";\n  stack1 = helpers.each.call(depth0, depth0, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/feedback', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<div class=\\\"legend\\\">\";\n  if (helper = helpers.legend) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.legend); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\";\n  return buffer;\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \"<div class=\\\"customMsg\\\">\";\n  if (helper = helpers.customMsg) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.customMsg); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</div>\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"small feedback feedback-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <span class=\\\"icon icon-\";\n  if (helper = helpers.type) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.type); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\n    <span class=\\\"msg\\\">\";\n  if (helper = helpers.message) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.message); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.legend), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n    \";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.customMsg), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('tpl!taoClientDiagnostic/tools/diagnostic/tpl/quality-bar', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, functionType=\"function\", escapeExpression=this.escapeExpression, self=this;\n\nfunction program1(depth0,data) {\n  \n  \n  return \" wide\";\n  }\n\nfunction program3(depth0,data) {\n  \n  var buffer = \"\", stack1, helper;\n  buffer += \" title=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"\";\n  return buffer;\n  }\n\n  buffer += \"<div class=\\\"quality-bar\\\">\\n    <div class=\\\"quality-indicator\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.wide), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"\\\"\";\n  stack1 = helpers['if'].call(depth0, (depth0 && depth0.label), {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});\n  if(stack1 || stack1 === 0) { buffer += stack1; }\n  buffer += \"></div>\\n</div>\";\n  return buffer;\n  });\n});\n\n","\ndefine('css!taoClientDiagnosticCss/diagnostics',[],function(){});\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2019 (original work) Open Assessment Technologies SA ;\n */\n/**\n * @author Jean-Sébastien Conan <jean-sebastien@taotesting.com>\n * @author dieter <dieter@taotesting.com>\n */\ndefine('taoClientDiagnostic/tools/diagnostic/diagnostic',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'async',\n    'ui/feedback',\n    'ui/component',\n    'core/logger',\n    'core/store',\n    'core/promise',\n    'core/dataProvider/request',\n    'ui/dialog/alert',\n    'util/url',\n    'taoClientDiagnostic/tools/performances/tester',\n    'taoClientDiagnostic/tools/bandwidth/tester',\n    'taoClientDiagnostic/tools/upload/tester',\n    'taoClientDiagnostic/tools/browser/tester',\n    'taoClientDiagnostic/tools/getStatus',\n    'taoClientDiagnostic/tools/getConfig',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/main',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/result',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/details',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/feedback',\n    'tpl!taoClientDiagnostic/tools/diagnostic/tpl/quality-bar',\n    'css!taoClientDiagnosticCss/diagnostics'\n], function ($,\n             _,\n             __,\n             async,\n             feedback,\n             component,\n             loggerFactory,\n             store,\n             Promise,\n             request,\n             dialogAlert,\n             urlUtil,\n             performancesTester,\n             bandwidthTester,\n             uploadTester,\n             browserTester,\n             getStatus,\n             getConfig,\n             mainTpl,\n             resultTpl,\n             detailsTpl,\n             feedbackTpl,\n             qualityBarTpl) {\n    'use strict';\n    /**\n     * @type {logger}\n     */\n    var logger = loggerFactory('taoClientDiagnostic/diagnostic');\n\n    /**\n     * Some default values\n     * @type {Object}\n     * @private\n     */\n    var _defaults = {\n        title: __('System Compatibility'),\n        header: __('This tool will run a number of tests in order to establish how well your current environment is suitable to run the TAO platform.'),\n        info: __('Be aware that these tests will take up to several minutes.'),\n        button: __('Test system compatibility'),\n        actionStore: 'storeData',\n        actionSchool: 'schoolName',\n        controller: 'DiagnosticChecker',\n        extension: 'taoClientDiagnostic',\n        actionDropId: 'deleteId',\n        storeAllRuns: false,\n        configurableText: {}\n    };\n\n    /**\n     * A list of thresholds for summary\n     * @type {Array}\n     * @private\n     */\n    var _thresholds = [{\n        threshold: 0,\n        message: __('Your system requires a compatibility update, please contact your system administrator.'),\n        type: 'error'\n    }, {\n        threshold: 33,\n        message: __('Your system is not optimal, please contact your system administrator.'),\n        type: 'warning'\n    }, {\n        threshold: 66,\n        message: __('Your system is fully compliant.'),\n        type: 'success'\n    }];\n\n    /**\n     * Defines a diagnostic tool\n     * @type {Object}\n     */\n    var diagnostic = {\n        /**\n         * Updates the displayed status\n         * @param {String} status\n         * @returns {diagnostic}\n         * @private\n         */\n        changeStatus: function changeStatus(status) {\n            if (this.is('rendered')) {\n                this.controls.$status.html(status);\n            }\n            return this;\n        },\n\n        /**\n         * Sends the detailed stats to the server\n         * @param {String} type The type of stats\n         * @param {Object} details The stats details\n         * @param {Function} done A callback method called once server has responded\n         */\n        store: function store(type, details, done) {\n            var config = this.config;\n\n            details = _.omit(details, 'values');\n            details.type = type;\n\n            $.post(\n                urlUtil.route(config.actionStore, config.controller, config.extension, config.storeParams),\n                details,\n                done,\n                \"json\"\n            );\n        },\n\n        /**\n         * Retrieve a custom message from the config\n         * @param key\n         * @returns {*}\n         */\n        getCustomMsg: function getCustomMsg(key) {\n            return this.config.configurableText[key];\n        },\n\n        /**\n         * Enrich the feeback object with a custom message if the test has failed\n         * @param {Object} status - the test result\n         * @param {String} msg - the custom message\n         */\n        addCustomFeedbackMsg: function addCustomFeedbackMsg(status, msg) {\n            if (this.hasFailed(status) && msg) {\n                if (_.isFunction(status.customMsgRenderer)) {\n                    msg = status.customMsgRenderer(msg);\n                }\n                status.feedback = status.feedback || {};\n                status.feedback.customMsg = msg;\n            }\n        },\n\n        /**\n         * Check if a result is considered as failed\n         * @param {Object} result\n         * @returns {boolean}\n         */\n        hasFailed: function hasFailed(result) {\n            return !(\n                   result\n                && result.feedback\n                && result.feedback.type === \"success\"\n            );\n        },\n\n        /**\n         * Add a result row\n         * @param {Object} result\n         * @returns {diagnostic}\n         */\n        addResult: function addResult(result) {\n            var $main, $indicator, $result;\n\n            if (this.is('rendered')) {\n                // adjust the width of the displayed label, if any, to the text length\n                if (result.quality && result.quality.label && result.quality.label.toString().length > 2) {\n                    result.quality.wide = true;\n                }\n\n                // create and append the result to the displayed list\n                $main = $(resultTpl(result));\n                $result = $main.find('.result');\n                if (result.feedback) {\n                    $result.append($(feedbackTpl(result.feedback)));\n                }\n                if (result.quality) {\n                    $result.append($(qualityBarTpl(result.quality)));\n                }\n                if (result.details) {\n                    $main.find('.details').append($(detailsTpl(result.details)));\n                }\n\n                $indicator = $main.find('.quality-indicator');\n                this.controls.$results.append($main);\n\n                // the result is hidden by default, show it with a little animation\n                $main.fadeIn(function () {\n                    if ($indicator.length) {\n                        $indicator.animate({\n                            left: (result.percentage * $main.outerWidth() / 100) - ($indicator.outerWidth() / 2)\n                        });\n                    }\n                });\n            }\n\n            return this;\n        },\n\n        /**\n         * Removes the last results if any\n         * @returns {diagnostic}\n         */\n        cleanUp: function cleanUp() {\n            this.controls.$results.empty();\n            return this;\n        },\n\n        /**\n         * Enables the start button\n         * @returns {diagnostic}\n         */\n        enable: function enable() {\n            this.controls.$start.removeClass('hidden');\n            return this;\n        },\n\n        /**\n         * Disables the start button\n         * @returns {diagnostic}\n         */\n        disable: function disable() {\n            this.controls.$start.addClass('hidden');\n            return this;\n        },\n\n        /**\n         * Does some preparations before starting the diagnostics\n         * @returns {diagnostic}\n         * @private\n         */\n        prepare: function prepare() {\n            /**\n             * Notifies the diagnostic start\n             * @event diagnostic#start\n             */\n            this.trigger('start');\n            this.changeStatus(__('Starting...'));\n            this.setState('running', true);\n            this.setState('done', false);\n\n            // first we need a clean space to display the results, so remove the last results if any\n            this.cleanUp();\n\n            // remove the start button during the diagnostic\n            this.disable();\n\n            return this;\n        },\n\n        /**\n         * Does some post process after ending the diagnostics\n         * @returns {diagnostic}\n         * @private\n         */\n        finish: function finish() {\n            var config = this.config;\n\n            // restore the start button to allow a new diagnostic run\n            this.enable();\n\n            if (config.storeAllRuns) {\n                this.deleteIdentifier();\n            }\n\n            /**\n             * Notifies the diagnostic end\n             * @event diagnostic#end\n             */\n            this.trigger('end');\n            this.changeStatus(__('Done!'));\n            this.setState('running', false);\n            this.setState('done', true);\n\n            return this;\n        },\n\n        /**\n         * delete unique id for this test session (next test will generate new one)\n         */\n        deleteIdentifier: function deleteIdentifier() {\n            var url = urlUtil.route(this.config.actionDropId, this.config.controller, this.config.extension);\n            return request(url, null, 'POST');\n        },\n\n        /**\n         * Runs the diagnostics\n         * @returns {diagnostic}\n         */\n        run: function run() {\n            var self = this;\n            var information = [];\n            var scores = {};\n            var testers = [];\n            var customInput = self.getCustomInput();\n\n            var doRun = function() {\n                // common handling for testers\n                function doCheck(testerConfig, cb) {\n                    var testerId = testerConfig.id;\n\n                    /**\n                     * Notifies the start of a tester operation\n                     * @event diagnostic#starttester\n                     * @param {String} name - The name of the tester\n                     */\n                    self.trigger('starttester', testerId);\n                    self.setState(testerId, true);\n\n                    require([testerConfig.tester], function (testerFactory){\n                        var tester = testerFactory(getConfig(testerConfig, self.config), self);\n                        self.changeStatus(tester.labels.status);\n                        tester.start(function (status, details, results) {\n                            var customMsg;\n                            if (testerConfig.customMsgKey) {\n                                customMsg = self.getCustomMsg(testerConfig.customMsgKey);\n                                self.addCustomFeedbackMsg(status, customMsg);\n                            }\n\n                            // the returned details must be ingested into the main details list\n                            _.forEach(details, function(info) {\n                                information.push(info);\n                            });\n                            scores[status.id] = status;\n\n                            /**\n                             * Notifies the end of a tester operation\n                             * @event diagnostic#endtester\n                             * @param {String} id - The identifier of the tester\n                             * @param {Array} results - The results of the test\n                             */\n                            self.trigger('endtester', testerId, status);\n                            self.setState(testerId, false);\n\n                            // results should be filtered in order to encode complex data\n                            results = _.mapValues(results, function(value) {\n                                switch(typeof(value)) {\n                                    case 'boolean': return value ? 1 : 0;\n                                    case 'object': return JSON.stringify(value);\n                                }\n                                return value;\n                            });\n\n                            // send the data to store\n                            self.store(testerId, results, function () {\n                                self.addResult(status);\n                                cb();\n                            });\n                        });\n                    });\n                }\n\n                if (self.is('rendered')) {\n                    // set up the component to a new run\n                    self.prepare();\n\n                    _.forEach(self.config.testers, function(testerConfig, testerId) {\n                        testerConfig.id = testerConfig.id || testerId;\n                        if (testerConfig.enabled) {\n                            testers.push(function (cb) {\n                                doCheck(testerConfig, cb);\n                            });\n                        }\n                    });\n\n                    // launch each testers in series, then display the results\n                    async.series(testers, function () {\n                        // pick the lowest percentage as the main score\n                        var total = _.min(scores, 'globalPercentage');\n\n                        // get a status according to the main score\n                        var status = getStatus(total.globalPercentage, _thresholds);\n\n                        // display the result\n                        status.title = __('Total');\n                        status.id = 'total';\n                        self.addCustomFeedbackMsg(status, self.config.configurableText.diagTotalCheckResult);\n\n                        status.details = information;\n                        self.addResult(status);\n\n                        // done !\n                        self.finish();\n                    });\n                }\n            };\n\n            if (_.size(customInput) > 0) {\n                self.store('custom_input', customInput, doRun);\n            } else {\n                doRun();\n            }\n\n            return self;\n        },\n\n        getCustomInput: function() {\n            var vars = {};\n            var self = this;\n\n            window.location.href.replace(location.hash, '').replace(\n                /[?&]+([^=&]+)=?([^&]*)?/gi,\n                function (m, key, value) {\n                    if (_.has(self.config['customInput'], key)) {\n                        vars[key] = typeof value !== 'undefined' ? value : '';\n                    }\n                }\n            );\n\n            return vars;\n        }\n    };\n\n    /**\n     * Builds an instance of the diagnostic tool\n     * @param {Object} container - Container in which the initialisation will render the diagnostic\n     * @param {Object} config\n     * @param {String} [config.title] - The displayed title\n     * @param {String} [config.header] - A header text displayed to describe the component\n     * @param {String} [config.info] - An information text displayed to warn about run duration\n     * @param {String} [config.button] - The caption of the start button\n     * @param {String} [config.actionStore] - The name of the action to call to store the results\n     * @param {String} [config.actionCheck] - The name of the action to call to check the browser results\n     * @param {String} [config.actionSchool] - The name of the action to call to get the school name\n     * @param {String} [config.controller] - The name of the controller to call\n     * @param {String} [config.extension] - The name of the extension containing the controller\n     * @param {Object} [config.storeParams] - A list of additional parameters to send with diagnostic results\n     * @param {Boolean} [config.requireSchoolName] - If `true` require a school name to allow the tests to start\n     * @param {Boolean} [config.requireSchoolId] - If `true` require a school ID to allow the tests to start\n     * @param {Boolean} [config.validateSchoolName] - If `true` require a school number and a PIN to get the school name and to allow the tests to start\n     *\n     * @param {String} [config.browser.action] - The name of the action to call to get the browser checker\n     * @param {String} [config.browser.controller] - The name of the controller to call to get the browser checker\n     * @param {String} [config.browser.extension] - The name of the extension containing the controller to call to get the browser checker\n     *\n     * @param {Number} [config.bandwidth.unit] - The typical bandwidth needed for a test taker (Mbps)\n     * @param {Array} [config.bandwidth.ideal] - The thresholds for optimal bandwidth, one by bar\n     * @param {Number} [config.bandwidth.max] - Maximum number of test takers to display\n     *\n     * @param {Array} [config.performances.samples] - A list of samples to render in order to compute the rendering performances\n     * @param {Number} [config.performances.occurrences] - The number of renderings by samples\n     * @param {Number} [config.performances.timeout] - Max allowed duration for a sample rendering\n     * @param {Number} [config.performances.optimal] - The threshold for optimal performances\n     * @param {Number} [config.performances.threshold] - The threshold for minimal performances\n     * @returns {diagnostic}\n     */\n    return function diagnosticFactory(container, config) {\n        var diagComponent;\n        // fix the translations for content loaded from config files\n        if (config) {\n            _.forEach(['title', 'header', 'footer', 'info', 'button'], function(name) {\n                if (config[name]) {\n                    config[name] = __(config[name]);\n                }\n            });\n        }\n\n        diagComponent = component(diagnostic, _defaults)\n            .setTemplate(mainTpl)\n\n            // uninstalls the component\n            .on('destroy', function () {\n                this.controls = null;\n            })\n\n            // initialise component\n            .on('init', function(){\n                this.render(container);\n            })\n            // renders the component\n            .on('render', function () {\n                var self = this;\n\n                /**\n                 * Default launcher\n                 */\n                var launch = function launch() {\n                    runDiagnostics();\n                };\n\n                /**\n                 * Starts the tests\n                 * @param {Object} [data]\n                 */\n                function runDiagnostics(data) {\n                    // append the school name to the queries\n                    if (data && _.isPlainObject(data)) {\n                        self.config.storeParams = _.assign(self.config.storeParams || {}, data);\n                    }\n\n                    self.run();\n                }\n\n                /**\n                 * Gets a control by its registered name\n                 * @param {String} name - the name registered in the collection of controls\n                 */\n                function getControl(name) {\n                    return self.controls['$' + name];\n                }\n\n                /**\n                 * Gets the value of an input field\n                 * @param {String} name - the name registered in the collection of controls\n                 * @returns {String}\n                 */\n                function getInputValue(name) {\n                    var $control = getControl(name);\n                    return ($control && $control.val() || '').trim();\n                }\n\n                /**\n                 * Sets the value of an input field\n                 * @param {String} name - the name registered in the collection of controls\n                 * @param {String} value\n                 */\n                function setInputValue(name, value) {\n                    var $control = getControl(name);\n                    $control && $control.val(value);\n                }\n\n                /**\n                 * Enable/Disable a control\n                 * @param {String} name - the name registered in the collection of controls\n                 * @param {Boolean} [state]\n                 */\n                function toggleControl(name, state) {\n                    var $control = getControl(name);\n                    if ($control) {\n                        if (typeof state === 'undefined') {\n                            state = !$control.is(':enabled');\n                        }\n                        if (state) {\n                            $control.prop('disabled', false);\n                        } else {\n                            $control.prop('disabled', true);\n                        }\n                    }\n                }\n\n                /**\n                 * Requests the server to get the school name\n                 * @param {Object} values\n                 */\n                function requestSchoolName(values) {\n                    var componentConfig = self.config;\n                    return request(urlUtil.route(componentConfig.actionSchool, componentConfig.controller, componentConfig.extension), values, 'POST')\n                        .then(function(data) {\n                            return {\n                                school_name: data,\n                                school_number: values.school_number\n                            };\n                        });\n                }\n\n                /**\n                 * Install the school name manager.\n                 * @todo: improve this by moving it into a plugin, and obviously implement the plugin handling\n                 */\n                function manageSchoolProperties(fields, validate) {\n                    /**\n                     * Checks if the start button can be enabled\n                     * @returns\n                     */\n                    function toggleStart() {\n                        var allow = _.every(fields, getInputValue);\n                        toggleControl('start', allow);\n                        return allow;\n                    }\n\n                    /**\n                     * Enables/Disables the fields\n                     * @param {Boolean} state\n                     */\n                    function toggleFields(state) {\n                        _.forEach(fields, function(fieldName) {\n                            toggleControl(fieldName, state);\n                        });\n                    }\n\n                    // ensure the diagnostic cannot start without all fields properly input\n                    _.forEach(fields, function(fieldName) {\n                        self.controls['$' + fieldName] = self.getElement().find('[data-control=\"' + fieldName + '\"]')\n                            .on('keypress', function(e) {\n                                var shouldStart = e.which === 13;\n                                if (shouldStart) {\n                                    e.preventDefault();\n                                }\n                                _.defer(function() {\n                                    if (toggleStart() && shouldStart) {\n                                        self.controls.$start.click();\n                                    }\n                                });\n                            });\n                    });\n\n                    toggleStart();\n\n                    // will store the school name in the browser storage, that will allow to restore it next time\n                    toggleFields(false);\n                    store('client-diagnostic')\n                        .then(function (storage) {\n                            // store the school name on test start, to ensure consistency\n                            self.on('start.school', function() {\n                                _.forEach(fields, function(fieldName) {\n                                    storage\n                                        .setItem(fieldName, getInputValue(fieldName))\n                                        .catch(function(error) {\n                                            logger.error(error);\n                                        });\n                                });\n                            });\n\n                            // restore the school name on load\n                            return Promise.all(_.map(fields, function(fieldName) {\n                                return storage.getItem(fieldName).then(function (value) {\n                                    setInputValue(fieldName, value);\n                                });\n                            }));\n                        })\n                        .catch(function(error) {\n                            logger.error(error);\n                        })\n                        .then(function() {\n                            toggleFields(true);\n                            toggleStart();\n                        });\n\n                    // ensure the fields are validated and the school name is properly sent before allowing to launch the test\n                    launch = function schoolNameLaunch() {\n                        var values = _.reduce(fields, function(result, fieldName) {\n                            result[fieldName] = getInputValue(fieldName);\n                            return result;\n                        }, {});\n\n                        self.changeStatus(__('Getting school name...'))\n                            .cleanUp()\n                            .disable();\n\n                        if (_.isFunction(validate)) {\n                            validate(values)\n                                .then(runDiagnostics)\n                                .catch(function(error) {\n                                    var response = error.response || {};\n                                    var message = response.errorMsg || response.errorMessage || __('An error occurred! Please verify your input!');\n                                    dialogAlert(message);\n                                    logger.error(error);\n                                    self.changeStatus(__('Failed to get school name'))\n                                        .enable();\n                                });\n                        } else {\n                            runDiagnostics(values);\n                        }\n                    };\n\n                    // ensure the fields are not writable while the test is running\n                    self\n                        .on('start.school', function() {\n                            toggleFields(false);\n                        })\n                        .on('end.school', function() {\n                            toggleFields(true);\n                        });\n                }\n\n                // get access to all needed placeholders\n                this.controls = {\n                    $start: this.$component.find('[data-action=\"test-launcher\"]'),\n                    $status: this.$component.find('.status h2'),\n                    $results: this.$component.find('.results')\n                };\n\n                // start the diagnostic\n                this.controls.$start.on('click', function () {\n                    self.controls.$start.is(':enabled') && launch();\n                });\n\n                if (this.config.requireSchoolName) {\n                    if (this.config.validateSchoolName) {\n                        manageSchoolProperties(['school_number', 'school_pin'], requestSchoolName);\n                    } else {\n                        manageSchoolProperties(['school_name']);\n                    }\n                }\n\n                if (this.config.requireSchoolId) {\n                    manageSchoolProperties(['school_id', 'workstation']);\n                }\n\n                // show result details\n                this.controls.$results.on('click', 'button[data-action=\"show-details\"]', function () {\n                    var $btn = $(this).closest('button');\n                    var $result = $btn.closest('[data-result]');\n                    var $details = $result.find('.details');\n                    $details.removeClass('hidden');\n                    $btn.addClass('hidden');\n                    $result.find('[data-action=\"hide-details\"]').removeClass('hidden');\n                });\n\n                // hide result details\n                this.controls.$results.on('click', 'button[data-action=\"hide-details\"]', function () {\n                    var $btn = $(this).closest('button');\n                    var $result = $btn.closest('[data-result]');\n                    var $details = $result.find('.details');\n                    $details.addClass('hidden');\n                    $btn.addClass('hidden');\n                    $result.find('[data-action=\"show-details\"]').removeClass('hidden');\n                });\n            });\n\n        _.defer(function() {\n            diagComponent.init(config);\n        });\n\n        return diagComponent;\n    };\n});\n\n","\n(function(c){var d=document,a='appendChild',i='styleSheet',s=d.createElement('style');s.type='text/css';d.getElementsByTagName('head')[0][a](s);s[i]?s[i].cssText=c:s[a](d.createTextNode(c));})\n('.diagnostics-content-area{max-width:768px;margin:40px auto 40px auto}.diagnostics-main-area{margin:40px auto 0 auto;background:#f3f1ef;border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;padding:20px}.diagnostics-main-area h1,.diagnostics-main-area h2,.diagnostics-main-area h3{font-style:normal;font-family:\\\"Source Sans Pro\\\",sans-serif}.diagnostics-main-area h1{margin-bottom:20px;font-size:20px;font-size:2rem}.diagnostics-main-area h2{margin:0;font-size:14px;font-size:1.4rem}.diagnostics-main-area h3{margin-top:10px;margin-bottom:5px;font-size:12px;font-size:1.2rem}.diagnostics-main-area .status h2,.diagnostics-main-area .details h2{margin:1rem 0}.diagnostics-main-area .legend{font-style:italic;font-weight:normal;font-family:\\\"Source Sans Pro\\\",sans-serif;font-size:11px;font-size:1.1rem}.diagnostics-main-area .customMsg{margin-top:10px}.diagnostics-main-area .quality-bar{height:15px;background:linear-gradient(to right, #CE1431 0%, #D57915 25%, #D5A215 50%, #D5CB15 75%, #36B111 100%);opacity:.8;-moz-border-radius:2px;-webkit-border-radius:2px;border-radius:2px;margin:5px 0 10px;position:relative}.diagnostics-main-area .quality-indicator{position:absolute;border-width:10px 8px;border-style:solid;border-color:#333 transparent transparent;top:-1px;height:25px;width:0}.diagnostics-main-area .quality-indicator[title]:before{font-size:11px;font-size:1.1rem;content:attr(title);position:absolute;top:-36px;left:-12px;text-align:center;width:24px;height:24px;line-height:24px;display:inline-block;background-color:#0e5d91;color:rgba(255,255,255,0.9);-moz-border-radius:12px;-webkit-border-radius:12px;border-radius:12px}.diagnostics-main-area .quality-indicator.wide[title]:before{left:-16px;width:32px}.diagnostics-main-area [data-result],.diagnostics-main-area .bandwidth-box{display:none}.diagnostics-main-area [data-action=bandwidth-launcher]{margin:5px 0 10px}.diagnostics-main-area li{padding-bottom:10px}.diagnostics-main-area .intro{margin-bottom:20px}.diagnostics-main-area .intro label{display:inline-block;width:150px}table.datatable [class^=\\\"icon-\\\"]{padding:0}table.datatable td{font-size:90%;font-weight:normal}table.datatable .progress .state:not(:first-child):before{content:\\' - \\'}table.datatable .progress .item-time:before{content:\\' (\\'}table.datatable .progress .item-time .total:before{content:\\' / \\'}table.datatable .progress .item-time:after{content:\\')\\'}.details table.matrix{border:1px solid #ddd;border-radius:2px;-webkit-border-radius:2px;margin-top:5px}.details table.matrix td:first-child{min-width:30%}.diagnostic-scope h1{font-family:\\\"Source Sans Pro\\\",sans-serif;font-size:22px;font-size:2.2rem;font-weight:normal}.diagnostic-scope h2{font-family:\\\"Source Sans Pro\\\",sans-serif;font-size:18px;font-size:1.8rem;margin:30px 0 10px}.diagnostic-scope form.daterange label{padding:0}.diagnostic-scope form.daterange input{margin:0 10px}.diagnostic-scope table.datatable [class^=\\\"icon-\\\"]{padding:0}.diagnostic-scope table.datatable td{font-size:90%;font-weight:normal}.diagnostic-scope .content{margin:auto}.diagnostic-scope .diagnostic-index .content,.diagnostic-scope .diagnostic-runner .content{width:100%}.diagnostic-scope .diagnostic-index .message,.diagnostic-scope .diagnostic-runner .message{padding:8px;text-align:center}.diagnostic-scope .panel .action-bar{background:#266d9c;padding:3px;overflow:hidden;color:#e7eff4}.diagnostic-scope .panel .action-bar .btn-info{overflow:hidden;background:transparent;border:1px rgba(255,255,255,0.3) solid}.diagnostic-scope .diagnostics-main-area{margin-top:0px;max-width:800px}.diagnostic-scope .detailed-value{display:flex;justify-content:space-between}.diagnostic-scope .detailed-value.errors{color:#d8ae5b}.diagnostic-scope .detailed-value .details{font-size:2rem;cursor:pointer;color:#3e7da7}.diagnostic-scope .detailed-value .details:hover{color:#03131d}.action-bar .tool-exitButton,.action-bar [data-control=\\\"exitButton\\\"]{float:right}\\n\\n/*# sourceMappingURL=../../../taoClientDiagnostic/views/css/diagnostics.css.map */');\n","\ndefine(\"taoClientDiagnostic/loader/diagnostic.bundle\", function(){});\n","window.bundles = (window.bundles || []).concat([\"taoQtiItem/loader/taoQtiItem.min\",\"taoItems/loader/taoItems.min\"]);\n"]}