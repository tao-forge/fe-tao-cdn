define(['taoQtiItem/scoring/processor/expressions/baseValue', 'taoQtiItem/scoring/processor/expressions/correct', 'taoQtiItem/scoring/processor/expressions/default', 'taoQtiItem/scoring/processor/expressions/mapResponse', 'taoQtiItem/scoring/processor/expressions/mapResponsePoint', 'taoQtiItem/scoring/processor/expressions/mathConstant', 'taoQtiItem/scoring/processor/expressions/null', 'taoQtiItem/scoring/processor/expressions/randomFloat', 'taoQtiItem/scoring/processor/expressions/randomInteger', 'taoQtiItem/scoring/processor/expressions/variable'], function (baseValue, correct, defaultt, mapResponse, mapResponsePoint, mathConstant, nulll, randomFloat, randomInteger, variable) { 'use strict';

    baseValue = baseValue && baseValue.hasOwnProperty('default') ? baseValue['default'] : baseValue;
    correct = correct && correct.hasOwnProperty('default') ? correct['default'] : correct;
    defaultt = defaultt && defaultt.hasOwnProperty('default') ? defaultt['default'] : defaultt;
    mapResponse = mapResponse && mapResponse.hasOwnProperty('default') ? mapResponse['default'] : mapResponse;
    mapResponsePoint = mapResponsePoint && mapResponsePoint.hasOwnProperty('default') ? mapResponsePoint['default'] : mapResponsePoint;
    mathConstant = mathConstant && mathConstant.hasOwnProperty('default') ? mathConstant['default'] : mathConstant;
    nulll = nulll && nulll.hasOwnProperty('default') ? nulll['default'] : nulll;
    randomFloat = randomFloat && randomFloat.hasOwnProperty('default') ? randomFloat['default'] : randomFloat;
    randomInteger = randomInteger && randomInteger.hasOwnProperty('default') ? randomInteger['default'] : randomInteger;
    variable = variable && variable.hasOwnProperty('default') ? variable['default'] : variable;

    /*
     * This program is free software; you can redistribute it and/or
     * modify it under the terms of the GNU General Public License
     * as published by the Free Software Foundation; under version 2
     * of the License (non-upgradable).
     *
     * This program is distributed in the hope that it will be useful,
     * but WITHOUT ANY WARRANTY; without even the implied warranty of
     * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     * GNU General Public License for more details.
     *
     * You should have received a copy of the GNU General Public License
     * along with this program; if not, write to the Free Software
     * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
     *
     * Copyright (c) 2015-2019 (original work) Open Assessment Technlogies SA (under the project TAO-PRODUCT);
     *
     */

    /**
     * An ExpressionProcessor
     * @typedef ExpressionProcessor
     * @property {Object} exression - the expression definition
     * @property {Object} preProcessor - helps you to parse and manipulate values
     * @property {Object} state - the session state (responses and variables)
     * @property {Funtion} process - the processing
     */

    /**
     * Lists all available expression processors
     * @exports taoQtiItem/scoring/processor/expressions/expressions
     */
    var expressions = {
        'baseValue': baseValue,
        'correct': correct,
        'default': defaultt,
        'mapResponse': mapResponse,
        'mapResponsePoint': mapResponsePoint,
        'mathConstant': mathConstant,
        'null': nulll,
        'randomFloat': randomFloat,
        'randomInteger': randomInteger,
        'variable': variable
    };

    return expressions;

});
