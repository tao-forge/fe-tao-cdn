define("tpl!liquidsInteraction/creator/tpl/propertiesForm",["handlebars"],function(hb){return hb.template(function(Handlebars,depth0,helpers,partials,data){this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{};var stack1,helper,options,buffer="",helperMissing=helpers.helperMissing,escapeExpression=this.escapeExpression;return buffer+='<div class="panel">\n    <label for="" class="has-icon">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,"Response identifier",options):helperMissing.call(depth0,"__","Response identifier",options)))+'</label>\n    <span class="icon-help tooltipstered" data-tooltip="~ .tooltip-content:first" data-tooltip-theme="info"></span>\n    <div class="tooltip-content">'+escapeExpression((helper=helpers.__||depth0&&depth0.__,options={hash:{},data:data},
helper?helper.call(depth0,'The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore ("_") and contain only Letters, underscores, hyphens ("-"), period (".", a.k.a. full-stop), Digits, CombiningChars and Extenders.',options):helperMissing.call(depth0,"__",'The identifier of the choice. This identifier must not be used by any other response or item variable. An identifier is a string of characters that must start with a Letter or an underscore ("_") and contain only Letters, underscores, hyphens ("-"), period (".", a.k.a. full-stop), Digits, CombiningChars and Extenders.',options)))+'</div>\n\n    <input type="text" \n           name="identifier" \n           value="',
(helper=helpers.identifier)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.identifier,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'" \n           placeholder="e.g. RESPONSE" \n           data-validate="$notEmpty; $qtiIdentifier; $availableIdentifier(serial=',(helper=helpers.serial)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.serial,stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+');">\n</div>'})}),
define("liquidsInteraction/creator/widget/states/Question",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/states/Question","taoQtiItem/qtiCreator/widgets/helpers/formElement","tpl!liquidsInteraction/creator/tpl/propertiesForm","tpl!taoQtiItem/qtiCreator/tpl/notifications/widgetOverlay"],function(stateFactory,Question,formElement,formTpl,overlayTpl){var LiquidsInteractionStateQuestion=stateFactory.extend(Question,function(){this.widget.$container.append(overlayTpl())},function(){this.widget.$container.children(".overlay").remove()});return LiquidsInteractionStateQuestion.prototype.initForm=function(){
var _widget=this.widget,$form=_widget.$form,interaction=_widget.element,response=interaction.getResponseDeclaration();$form.html(formTpl({serial:response.serial,identifier:interaction.attr("responseIdentifier")})),formElement.initWidget($form),formElement.setChangeCallbacks($form,interaction,{identifier:function(i,value){response.id(value),interaction.attr("responseIdentifier",value)}})},LiquidsInteractionStateQuestion}),
define("liquidsInteraction/creator/widget/states/Answer",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/states/Answer","taoQtiItem/qtiCreator/widgets/interactions/helpers/answerState"],function(stateFactory,Answer,answerStateHelper){return stateFactory.extend(Answer,function(){answerStateHelper.forward(this.widget)},function(){})}),define("liquidsInteraction/creator/widget/states/Correct",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/states/Correct","lodash"],function(stateFactory,Correct,_){return stateFactory.create(Correct,function(){
var widget=this.widget,interaction=widget.element,responseDeclaration=interaction.getResponseDeclaration(),correct=_.values(responseDeclaration.getCorrect());void 0!==correct[0]&&interaction.setResponse({base:{integer:correct[0]}}),interaction.onPci("responsechange.question",function(response){var correctResponse=[];null!==response.base&&correctResponse.push(response.base.integer),responseDeclaration.setCorrect(correctResponse)})},function(){var widget=this.widget,interaction=widget.element;interaction.resetResponse(),interaction.offPci(".question")})}),
define("liquidsInteraction/creator/widget/states/states",["taoQtiItem/qtiCreator/widgets/states/factory","taoQtiItem/qtiCreator/widgets/interactions/customInteraction/states/states","liquidsInteraction/creator/widget/states/Question","liquidsInteraction/creator/widget/states/Answer","liquidsInteraction/creator/widget/states/Correct"],function(factory,states){return factory.createBundle(states,arguments,["map"])}),define("liquidsInteraction/creator/widget/Widget",["taoQtiItem/qtiCreator/widgets/interactions/customInteraction/Widget","liquidsInteraction/creator/widget/states/states"],function(Widget,states){var LiquidsInteractionWidget=Widget.clone()
;return LiquidsInteractionWidget.initCreator=function(){this.registerStates(states),Widget.initCreator.call(this)},LiquidsInteractionWidget}),define("tpl!liquidsInteraction/creator/tpl/markup",["handlebars"],function(hb){return hb.template(function(Handlebars,depth0,helpers,partials,data){this.compilerInfo=[4,">= 1.0.0"],helpers=this.merge(helpers,Handlebars.helpers),data=data||{};var stack1,helper,buffer="",escapeExpression=this.escapeExpression;return buffer+='<div class="liquidsInteraction">\n    <div class="prompt">',(helper=helpers.prompt)?stack1=helper.call(depth0,{hash:{},data:data}):(helper=depth0&&depth0.prompt,
stack1="function"==typeof helper?helper.call(depth0,{hash:{},data:data}):helper),buffer+=escapeExpression(stack1)+'</div>\n    <canvas class="liquids" width="400" height="400"></canvas>\n</div>'})}),define("liquidsInteraction/pciCreator",["lodash","liquidsInteraction/creator/widget/Widget","tpl!liquidsInteraction/creator/tpl/markup"],function(_,Widget,markupTpl){return{getTypeIdentifier:function(){return"liquidsInteraction"},getWidget:function(){return Widget},getDefaultProperties:function(pci){return{}},afterCreate:function(pci){},getMarkupTemplate:function(){return markupTpl},getMarkupData:function(pci,defaultData){
return defaultData.prompt=pci.data("prompt"),defaultData}}}),define(["liquidsInteraction/pciCreator"],function(PCI){return PCI});
//# sourceMappingURL=pciCreator.min.js.map